In archive lib7/libdmx.a:

dmxparamsconst.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <DmxParamsConst::SLOTS_COUNT>:
   0:	746f6c73 	strbtvc	r6, [pc], #-3187	; 8 <DmxParamsConst::SLOTS_COUNT+0x8>
   4:	6f635f73 	svcvs	0x00635f73
   8:	00746e75 	rsbseq	r6, r4, r5, ror lr

0000000c <DmxParamsConst::REFRESH_RATE>:
   c:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
  10:	5f687365 	svcpl	0x00687365
  14:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
  18:	00000000 	andeq	r0, r0, r0

0000001c <DmxParamsConst::MAB_TIME>:
  1c:	5f62616d 	svcpl	0x0062616d
  20:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
  24:	00000000 	andeq	r0, r0, r0

00000028 <DmxParamsConst::BREAK_TIME>:
  28:	61657262 	cmnvs	r5, r2, ror #4
  2c:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
  30:	0000656d 	andeq	r6, r0, sp, ror #10

00000034 <DmxParamsConst::FILE_NAME>:
  34:	61726170 	cmnvs	r2, r0, ror r1
  38:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
  3c:	Address 0x000000000000003c is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


dmxparams.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]>:
   0:	e1d0c0b6 	ldrh	ip, [r0, #6]
   4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
   8:	e1d050b4 	ldrh	r5, [r0, #4]
   c:	e15c0005 	cmp	ip, r5
  10:	2a00001c 	bcs	88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x88>
  14:	e045500c 	sub	r5, r5, ip
  18:	e1a04000 	mov	r4, r0
  1c:	e5900000 	ldr	r0, [r0]
  20:	e3530000 	cmp	r3, #0
  24:	e080000c 	add	r0, r0, ip
  28:	e5d4c008 	ldrb	ip, [r4, #8]
  2c:	1a000002 	bne	3c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x3c>
  30:	e35c0000 	cmp	ip, #0
  34:	1a000002 	bne	44 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x44>
  38:	ea000009 	b	64 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x64>
  3c:	e35c0000 	cmp	ip, #0
  40:	0a000003 	beq	54 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x54>
  44:	e58d2000 	str	r2, [sp]
  48:	e1a03001 	mov	r3, r1
  4c:	e59f203c 	ldr	r2, [pc, #60]	; 90 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x90>
  50:	ea000006 	b	70 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x70>
  54:	e58d2000 	str	r2, [sp]
  58:	e1a03001 	mov	r3, r1
  5c:	e59f2030 	ldr	r2, [pc, #48]	; 94 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x94>
  60:	ea000002 	b	70 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x70>
  64:	e58d2000 	str	r2, [sp]
  68:	e1a03001 	mov	r3, r1
  6c:	e59f2024 	ldr	r2, [pc, #36]	; 98 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]+0x98>
  70:	e1a01005 	mov	r1, r5
  74:	ebfffffe 	bl	0 <snprintf>
  78:	e1550000 	cmp	r5, r0
  7c:	a1d430b6 	ldrhge	r3, [r4, #6]
  80:	a0830000 	addge	r0, r3, r0
  84:	a1c400b6 	strhge	r0, [r4, #6]
  88:	e28dd00c 	add	sp, sp, #12
  8c:	e8bd8030 	pop	{r4, r5, pc}
  90:	00000000 	andeq	r0, r0, r0
  94:	00000009 	andeq	r0, r0, r9
  98:	00000010 	andeq	r0, r0, r0, lsl r0

0000009c <DmxParams::DmxParams(DmxParamsStore*)>:
  9c:	e59f2014 	ldr	r2, [pc, #20]	; b8 <DmxParams::DmxParams(DmxParamsStore*)+0x1c>
  a0:	e5801000 	str	r1, [r0]
  a4:	e3a01000 	mov	r1, #0
  a8:	e9800006 	stmib	r0, {r1, r2}
  ac:	e3e020d7 	mvn	r2, #215	; 0xd7
  b0:	e1c020bc 	strh	r2, [r0, #12]
  b4:	e12fff1e 	bx	lr
  b8:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

000000bc <DmxParams::Load()>:
  bc:	e3a03000 	mov	r3, #0
  c0:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
  c4:	e1a02000 	mov	r2, r0
  c8:	e5803004 	str	r3, [r0, #4]
  cc:	e1a04000 	mov	r4, r0
  d0:	e59f1068 	ldr	r1, [pc, #104]	; 140 <DmxParams::Load()+0x84>
  d4:	e1a0000d 	mov	r0, sp
  d8:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
  dc:	e59f1060 	ldr	r1, [pc, #96]	; 144 <DmxParams::Load()+0x88>
  e0:	e1a0000d 	mov	r0, sp
  e4:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*)>
  e8:	e2505000 	subs	r5, r0, #0
  ec:	e5940000 	ldr	r0, [r4]
  f0:	0a000006 	beq	110 <DmxParams::Load()+0x54>
  f4:	e3500000 	cmp	r0, #0
  f8:	0a00000b 	beq	12c <DmxParams::Load()+0x70>
  fc:	e5903000 	ldr	r3, [r0]
 100:	e2841004 	add	r1, r4, #4
 104:	e5933008 	ldr	r3, [r3, #8]
 108:	e12fff33 	blx	r3
 10c:	ea000006 	b	12c <DmxParams::Load()+0x70>
 110:	e3500000 	cmp	r0, #0
 114:	0a000004 	beq	12c <DmxParams::Load()+0x70>
 118:	e5903000 	ldr	r3, [r0]
 11c:	e2841004 	add	r1, r4, #4
 120:	e3a05001 	mov	r5, #1
 124:	e593300c 	ldr	r3, [r3, #12]
 128:	e12fff33 	blx	r3
 12c:	e1a0000d 	mov	r0, sp
 130:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
 134:	e1a00005 	mov	r0, r5
 138:	e28dd00c 	add	sp, sp, #12
 13c:	e8bd8030 	pop	{r4, r5, pc}
	...

00000148 <DmxParams::Load(char const*, unsigned long)>:
 148:	e3a03000 	mov	r3, #0
 14c:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
 150:	e1a04000 	mov	r4, r0
 154:	e5803004 	str	r3, [r0, #4]
 158:	e1a05001 	mov	r5, r1
 15c:	e59f1040 	ldr	r1, [pc, #64]	; 1a4 <DmxParams::Load(char const*, unsigned long)+0x5c>
 160:	e1a06002 	mov	r6, r2
 164:	e1a02000 	mov	r2, r0
 168:	e1a0000d 	mov	r0, sp
 16c:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 170:	e1a02006 	mov	r2, r6
 174:	e1a01005 	mov	r1, r5
 178:	e1a0000d 	mov	r0, sp
 17c:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*, unsigned int)>
 180:	e1a01004 	mov	r1, r4
 184:	e4910004 	ldr	r0, [r1], #4
 188:	e5903000 	ldr	r3, [r0]
 18c:	e5933008 	ldr	r3, [r3, #8]
 190:	e12fff33 	blx	r3
 194:	e1a0000d 	mov	r0, sp
 198:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
 19c:	e28dd008 	add	sp, sp, #8
 1a0:	e8bd8070 	pop	{r4, r5, r6, pc}
 1a4:	00000000 	andeq	r0, r0, r0

000001a8 <DmxParams::callbackFunction(char const*)>:
 1a8:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
 1ac:	e1a05001 	mov	r5, r1
 1b0:	e59f1104 	ldr	r1, [pc, #260]	; 2bc <DmxParams::callbackFunction(char const*)+0x114>
 1b4:	e1a04000 	mov	r4, r0
 1b8:	e28d2006 	add	r2, sp, #6
 1bc:	e1a00005 	mov	r0, r5
 1c0:	ebfffffe 	bl	0 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 1c4:	e3500000 	cmp	r0, #0
 1c8:	1a000009 	bne	1f4 <DmxParams::callbackFunction(char const*)+0x4c>
 1cc:	e1dd20b6 	ldrh	r2, [sp, #6]
 1d0:	e5943004 	ldr	r3, [r4, #4]
 1d4:	e35200b0 	cmp	r2, #176	; 0xb0
 1d8:	1352005b 	cmpne	r2, #91	; 0x5b
 1dc:	93c33001 	bicls	r3, r3, #1
 1e0:	93a020b0 	movls	r2, #176	; 0xb0
 1e4:	81c420b8 	strhhi	r2, [r4, #8]
 1e8:	83833001 	orrhi	r3, r3, #1
 1ec:	91c420b8 	strhls	r2, [r4, #8]
 1f0:	ea00002e 	b	2b0 <DmxParams::callbackFunction(char const*)+0x108>
 1f4:	e59f10c4 	ldr	r1, [pc, #196]	; 2c0 <DmxParams::callbackFunction(char const*)+0x118>
 1f8:	e28d2006 	add	r2, sp, #6
 1fc:	e1a00005 	mov	r0, r5
 200:	ebfffffe 	bl	0 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 204:	e3500000 	cmp	r0, #0
 208:	1a000008 	bne	230 <DmxParams::callbackFunction(char const*)+0x88>
 20c:	e1dd20b6 	ldrh	r2, [sp, #6]
 210:	e5943004 	ldr	r3, [r4, #4]
 214:	e352000c 	cmp	r2, #12
 218:	93c33002 	bicls	r3, r3, #2
 21c:	93a0200c 	movls	r2, #12
 220:	81c420ba 	strhhi	r2, [r4, #10]
 224:	83833002 	orrhi	r3, r3, #2
 228:	91c420ba 	strhls	r2, [r4, #10]
 22c:	ea00001f 	b	2b0 <DmxParams::callbackFunction(char const*)+0x108>
 230:	e59f108c 	ldr	r1, [pc, #140]	; 2c4 <DmxParams::callbackFunction(char const*)+0x11c>
 234:	e28d2005 	add	r2, sp, #5
 238:	e1a00005 	mov	r0, r5
 23c:	ebfffffe 	bl	0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 240:	e3500000 	cmp	r0, #0
 244:	1a000006 	bne	264 <DmxParams::callbackFunction(char const*)+0xbc>
 248:	e5dd2005 	ldrb	r2, [sp, #5]
 24c:	e5943004 	ldr	r3, [r4, #4]
 250:	e5c4200c 	strb	r2, [r4, #12]
 254:	e3520028 	cmp	r2, #40	; 0x28
 258:	03c33004 	biceq	r3, r3, #4
 25c:	13833004 	orrne	r3, r3, #4
 260:	ea000012 	b	2b0 <DmxParams::callbackFunction(char const*)+0x108>
 264:	e59f105c 	ldr	r1, [pc, #92]	; 2c8 <DmxParams::callbackFunction(char const*)+0x120>
 268:	e28d2006 	add	r2, sp, #6
 26c:	e1a00005 	mov	r0, r5
 270:	ebfffffe 	bl	0 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 274:	e3500000 	cmp	r0, #0
 278:	1a00000d 	bne	2b4 <DmxParams::callbackFunction(char const*)+0x10c>
 27c:	e1dd20b6 	ldrh	r2, [sp, #6]
 280:	e30001fd 	movw	r0, #509	; 0x1fd
 284:	e5943004 	ldr	r3, [r4, #4]
 288:	e2421002 	sub	r1, r2, #2
 28c:	e6ff1071 	uxth	r1, r1
 290:	e1510000 	cmp	r1, r0
 294:	91a020a2 	lsrls	r2, r2, #1
 298:	93833008 	orrls	r3, r3, #8
 29c:	83c33008 	bichi	r3, r3, #8
 2a0:	92422001 	subls	r2, r2, #1
 2a4:	95c4200d 	strbls	r2, [r4, #13]
 2a8:	83e02000 	mvnhi	r2, #0
 2ac:	85c4200d 	strbhi	r2, [r4, #13]
 2b0:	e5843004 	str	r3, [r4, #4]
 2b4:	e28dd00c 	add	sp, sp, #12
 2b8:	e8bd8030 	pop	{r4, r5, pc}
	...

000002cc <DmxParams::staticCallbackFunction(void*, char const*)>:
 2cc:	eafffffe 	b	1a8 <DmxParams::callbackFunction(char const*)>

000002d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)>:
 2d0:	e92d4070 	push	{r4, r5, r6, lr}
 2d4:	e1a04000 	mov	r4, r0
 2d8:	e1a00001 	mov	r0, r1
 2dc:	e24dd018 	sub	sp, sp, #24
 2e0:	e3500000 	cmp	r0, #0
 2e4:	e1a05002 	mov	r5, r2
 2e8:	e1a06003 	mov	r6, r3
 2ec:	e2841004 	add	r1, r4, #4
 2f0:	0a000006 	beq	310 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x40>
 2f4:	e5903000 	ldr	r3, [r0]
 2f8:	e5843004 	str	r3, [r4, #4]
 2fc:	e5903004 	ldr	r3, [r0, #4]
 300:	e5813004 	str	r3, [r1, #4]
 304:	e1d030b8 	ldrh	r3, [r0, #8]
 308:	e1c130b8 	strh	r3, [r1, #8]
 30c:	ea000003 	b	320 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x50>
 310:	e5940000 	ldr	r0, [r4]
 314:	e5903000 	ldr	r3, [r0]
 318:	e593300c 	ldr	r3, [r3, #12]
 31c:	e12fff33 	blx	r3
 320:	e59f1130 	ldr	r1, [pc, #304]	; 458 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x188>
 324:	e1a02005 	mov	r2, r5
 328:	e1a03006 	mov	r3, r6
 32c:	e28d000c 	add	r0, sp, #12
 330:	ebfffffe 	bl	0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned long)>
 334:	e5943004 	ldr	r3, [r4, #4]
 338:	e28d000c 	add	r0, sp, #12
 33c:	e1d420b8 	ldrh	r2, [r4, #8]
 340:	e59f1114 	ldr	r1, [pc, #276]	; 45c <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x18c>
 344:	e2033001 	and	r3, r3, #1
 348:	ebffff2c 	bl	0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]>
 34c:	e5943004 	ldr	r3, [r4, #4]
 350:	e28d000c 	add	r0, sp, #12
 354:	e59f1104 	ldr	r1, [pc, #260]	; 460 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x190>
 358:	e7e030d3 	ubfx	r3, r3, #1, #1
 35c:	e1d420ba 	ldrh	r2, [r4, #10]
 360:	ebffff26 	bl	0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]>
 364:	e1dd11b2 	ldrh	r1, [sp, #18]
 368:	e1dd51b0 	ldrh	r5, [sp, #16]
 36c:	e1510005 	cmp	r1, r5
 370:	2a00001d 	bcs	3ec <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x11c>
 374:	e59d000c 	ldr	r0, [sp, #12]
 378:	e0455001 	sub	r5, r5, r1
 37c:	e0800001 	add	r0, r0, r1
 380:	e5941004 	ldr	r1, [r4, #4]
 384:	e5dd2014 	ldrb	r2, [sp, #20]
 388:	e5d4300c 	ldrb	r3, [r4, #12]
 38c:	e3110004 	tst	r1, #4
 390:	1a000002 	bne	3a0 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0xd0>
 394:	e3520000 	cmp	r2, #0
 398:	1a000002 	bne	3a8 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0xd8>
 39c:	ea000009 	b	3c8 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0xf8>
 3a0:	e3520000 	cmp	r2, #0
 3a4:	0a000003 	beq	3b8 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0xe8>
 3a8:	e58d3000 	str	r3, [sp]
 3ac:	e59f20b0 	ldr	r2, [pc, #176]	; 464 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x194>
 3b0:	e59f30b0 	ldr	r3, [pc, #176]	; 468 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x198>
 3b4:	ea000006 	b	3d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x104>
 3b8:	e58d3000 	str	r3, [sp]
 3bc:	e59f20a8 	ldr	r2, [pc, #168]	; 46c <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x19c>
 3c0:	e59f30a0 	ldr	r3, [pc, #160]	; 468 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x198>
 3c4:	ea000002 	b	3d4 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x104>
 3c8:	e58d3000 	str	r3, [sp]
 3cc:	e59f209c 	ldr	r2, [pc, #156]	; 470 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x1a0>
 3d0:	e59f3090 	ldr	r3, [pc, #144]	; 468 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x198>
 3d4:	e1a01005 	mov	r1, r5
 3d8:	ebfffffe 	bl	0 <snprintf>
 3dc:	e1550000 	cmp	r5, r0
 3e0:	a1dd31b2 	ldrhge	r3, [sp, #18]
 3e4:	a0830000 	addge	r0, r3, r0
 3e8:	a1cd01b2 	strhge	r0, [sp, #18]
 3ec:	e5d4200d 	ldrb	r2, [r4, #13]
 3f0:	e28d000c 	add	r0, sp, #12
 3f4:	e5943004 	ldr	r3, [r4, #4]
 3f8:	e59f1074 	ldr	r1, [pc, #116]	; 474 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x1a4>
 3fc:	e2822001 	add	r2, r2, #1
 400:	e7e031d3 	ubfx	r3, r3, #3, #1
 404:	e1a02082 	lsl	r2, r2, #1
 408:	ebfffefc 	bl	0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned long) [clone .isra.0]>
 40c:	e5dd3014 	ldrb	r3, [sp, #20]
 410:	e3530000 	cmp	r3, #0
 414:	0a00000a 	beq	444 <DmxParams::Builder(TDmxParams const*, char*, unsigned long, unsigned long&)+0x174>
 418:	e1dd21b2 	ldrh	r2, [sp, #18]
 41c:	e59d300c 	ldr	r3, [sp, #12]
 420:	e0833002 	add	r3, r3, r2
 424:	e3a0207d 	mov	r2, #125	; 0x7d
 428:	e5432001 	strb	r2, [r3, #-1]
 42c:	e59d100c 	ldr	r1, [sp, #12]
 430:	e1dd31b2 	ldrh	r3, [sp, #18]
 434:	e7c12003 	strb	r2, [r1, r3]
 438:	e1dd31b2 	ldrh	r3, [sp, #18]
 43c:	e2833001 	add	r3, r3, #1
 440:	e1cd31b2 	strh	r3, [sp, #18]
 444:	e1dd21b2 	ldrh	r2, [sp, #18]
 448:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
 44c:	e5832000 	str	r2, [r3]
 450:	e28dd018 	add	sp, sp, #24
 454:	e8bd8070 	pop	{r4, r5, r6, pc}
	...
 46c:	00000009 	andeq	r0, r0, r9
 470:	00000010 	andeq	r0, r0, r0, lsl r0
 474:	00000000 	andeq	r0, r0, r0

00000478 <DmxParams::Set(Dmx*)>:
 478:	e5903004 	ldr	r3, [r0, #4]
 47c:	e92d4070 	push	{r4, r5, r6, lr}
 480:	e3130001 	tst	r3, #1
 484:	e1a04000 	mov	r4, r0
 488:	e1a05001 	mov	r5, r1
 48c:	0a000002 	beq	49c <DmxParams::Set(Dmx*)+0x24>
 490:	e1d010b8 	ldrh	r1, [r0, #8]
 494:	e1a00005 	mov	r0, r5
 498:	ebfffffe 	bl	0 <Dmx::SetDmxBreakTime(unsigned long)>
 49c:	e5943004 	ldr	r3, [r4, #4]
 4a0:	e3130002 	tst	r3, #2
 4a4:	0a000002 	beq	4b4 <DmxParams::Set(Dmx*)+0x3c>
 4a8:	e1d410ba 	ldrh	r1, [r4, #10]
 4ac:	e1a00005 	mov	r0, r5
 4b0:	ebfffffe 	bl	0 <Dmx::SetDmxMabTime(unsigned long)>
 4b4:	e5943004 	ldr	r3, [r4, #4]
 4b8:	e3130004 	tst	r3, #4
 4bc:	0a000007 	beq	4e0 <DmxParams::Set(Dmx*)+0x68>
 4c0:	e5d4100c 	ldrb	r1, [r4, #12]
 4c4:	e3510000 	cmp	r1, #0
 4c8:	0a000002 	beq	4d8 <DmxParams::Set(Dmx*)+0x60>
 4cc:	e59f0030 	ldr	r0, [pc, #48]	; 504 <DmxParams::Set(Dmx*)+0x8c>
 4d0:	ebfffffe 	bl	0 <__aeabi_uidiv>
 4d4:	e1a01000 	mov	r1, r0
 4d8:	e1a00005 	mov	r0, r5
 4dc:	ebfffffe 	bl	0 <Dmx::SetDmxPeriodTime(unsigned long)>
 4e0:	e5943004 	ldr	r3, [r4, #4]
 4e4:	e3130008 	tst	r3, #8
 4e8:	08bd8070 	popeq	{r4, r5, r6, pc}
 4ec:	e5d4100d 	ldrb	r1, [r4, #13]
 4f0:	e1a00005 	mov	r0, r5
 4f4:	e8bd4070 	pop	{r4, r5, r6, lr}
 4f8:	e2811001 	add	r1, r1, #1
 4fc:	e1a01081 	lsl	r1, r1, #1
 500:	eafffffe 	b	0 <Dmx::SetDmxSlots(unsigned short)>
 504:	000f4240 	andeq	r4, pc, r0, asr #4

00000508 <DmxParams::Dump()>:
 508:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
   4:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
   8:	3d732500 	cfldr64cc	mvdx2, [r3, #-0]
   c:	000a6425 	andeq	r6, sl, r5, lsr #8
  10:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
  14:	000a6425 	andeq	r6, sl, r5, lsr #8

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


rdm.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <Rdm::Receive(unsigned long)>:
   0:	e3003000 	movw	r3, #0
   4:	e1a01000 	mov	r1, r0
   8:	e3403000 	movt	r3, #0
   c:	e5930000 	ldr	r0, [r3]
  10:	eafffffe 	b	0 <Dmx::RdmReceive(unsigned long)>

00000014 <Rdm::ReceiveTimeOut(unsigned long, unsigned short)>:
  14:	e3003000 	movw	r3, #0
  18:	e1a0c000 	mov	ip, r0
  1c:	e3403000 	movt	r3, #0
  20:	e1a02001 	mov	r2, r1
  24:	e1a0100c 	mov	r1, ip
  28:	e5930000 	ldr	r0, [r3]
  2c:	eafffffe 	b	0 <Dmx::RdmReceiveTimeOut(unsigned long, unsigned long)>

00000030 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>:
  30:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  34:	e3005000 	movw	r5, #0
  38:	e3405000 	movt	r5, #0
  3c:	e1a04000 	mov	r4, r0
  40:	e3a03000 	mov	r3, #0
  44:	e1a06001 	mov	r6, r1
  48:	e5950000 	ldr	r0, [r5]
  4c:	e1a07002 	mov	r7, r2
  50:	e1a01004 	mov	r1, r4
  54:	e1a02003 	mov	r2, r3
  58:	ebfffffe 	bl	0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
  5c:	e5950000 	ldr	r0, [r5]
  60:	e1a03007 	mov	r3, r7
  64:	e1a02006 	mov	r2, r6
  68:	e1a01004 	mov	r1, r4
  6c:	ebfffffe 	bl	0 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>
  70:	e3a00004 	mov	r0, #4
  74:	ebfffffe 	bl	0 <udelay>
  78:	e5950000 	ldr	r0, [r5]
  7c:	e3a03001 	mov	r3, #1
  80:	e1a01004 	mov	r1, r4
  84:	e1a02003 	mov	r2, r3
  88:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  8c:	eafffffe 	b	0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


dmx.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <irq_timer3_dmx_receive(unsigned long)>:
       0:	e3a03a03 	mov	r3, #12288	; 0x3000
       4:	e280093d 	add	r0, r0, #999424	; 0xf4000
       8:	e3433f00 	movt	r3, #16128	; 0x3f00
       c:	e2800d09 	add	r0, r0, #576	; 0x240
      10:	e5830018 	str	r0, [r3, #24]
      14:	f57ff05f 	dmb	sy
      18:	e3003000 	movw	r3, #0
      1c:	e3403000 	movt	r3, #0
      20:	e5932000 	ldr	r2, [r3]
      24:	e5931008 	ldr	r1, [r3, #8]
      28:	e0422001 	sub	r2, r2, r1
      2c:	e583200c 	str	r2, [r3, #12]
      30:	e5932000 	ldr	r2, [r3]
      34:	e5832008 	str	r2, [r3, #8]
      38:	e12fff1e 	bx	lr

0000003c <irq_timer1_dmx_sender(unsigned long)>:
      3c:	e3003000 	movw	r3, #0
      40:	e3403000 	movt	r3, #0
      44:	e5d32010 	ldrb	r2, [r3, #16]
      48:	e352000b 	cmp	r2, #11
      4c:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
      50:	ea00000b 	b	84 <irq_timer1_dmx_sender(unsigned long)+0x48>
      54:	00000088 	andeq	r0, r0, r8, lsl #1
      58:	00000084 	andeq	r0, r0, r4, lsl #1
      5c:	0000018c 	andeq	r0, r0, ip, lsl #3
      60:	000000e4 	andeq	r0, r0, r4, ror #1
      64:	000000c8 	andeq	r0, r0, r8, asr #1
      68:	00000084 	andeq	r0, r0, r4, lsl #1
      6c:	00000084 	andeq	r0, r0, r4, lsl #1
      70:	00000084 	andeq	r0, r0, r4, lsl #1
      74:	00000084 	andeq	r0, r0, r4, lsl #1
      78:	00000084 	andeq	r0, r0, r4, lsl #1
      7c:	00000084 	andeq	r0, r0, r4, lsl #1
      80:	00000088 	andeq	r0, r0, r8, lsl #1
      84:	e12fff1e 	bx	lr
      88:	e3002000 	movw	r2, #0
      8c:	e3a0ca03 	mov	ip, #12288	; 0x3000
      90:	e3402000 	movt	r2, #0
      94:	e3a01a01 	mov	r1, #4096	; 0x1000
      98:	e343cf00 	movt	ip, #16128	; 0x3f00
      9c:	e5922000 	ldr	r2, [r2]
      a0:	e3431f20 	movt	r1, #16160	; 0x3f20
      a4:	e0802002 	add	r2, r0, r2
      a8:	e58c2010 	str	r2, [ip, #16]
      ac:	e3a02079 	mov	r2, #121	; 0x79
      b0:	e581202c 	str	r2, [r1, #44]	; 0x2c
      b4:	e5830014 	str	r0, [r3, #20]
      b8:	f57ff05f 	dmb	sy
      bc:	e3a02002 	mov	r2, #2
      c0:	e5c32010 	strb	r2, [r3, #16]
      c4:	e12fff1e 	bx	lr
      c8:	e5932018 	ldr	r2, [r3, #24]
      cc:	e3003000 	movw	r3, #0
      d0:	e3403000 	movt	r3, #0
      d4:	e3000000 	movw	r0, #0
      d8:	e3400000 	movt	r0, #0
      dc:	e593100c 	ldr	r1, [r3, #12]
      e0:	eafffffe 	b	0 <printf>
      e4:	e5930014 	ldr	r0, [r3, #20]
      e8:	e3002000 	movw	r2, #0
      ec:	e3402000 	movt	r2, #0
      f0:	e3a0ca03 	mov	ip, #12288	; 0x3000
      f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
      f8:	e3a01a01 	mov	r1, #4096	; 0x1000
      fc:	e592e008 	ldr	lr, [r2, #8]
     100:	e343cf00 	movt	ip, #16128	; 0x3f00
     104:	e080000e 	add	r0, r0, lr
     108:	e3431f20 	movt	r1, #16160	; 0x3f20
     10c:	e58c0010 	str	r0, [ip, #16]
     110:	e3a00000 	mov	r0, #0
     114:	e5830018 	str	r0, [r3, #24]
     118:	e591c018 	ldr	ip, [r1, #24]
     11c:	e592000c 	ldr	r0, [r2, #12]
     120:	e31c0020 	tst	ip, #32
     124:	0a000014 	beq	17c <irq_timer1_dmx_sender(unsigned long)+0x140>
     128:	e5932018 	ldr	r2, [r3, #24]
     12c:	e1520000 	cmp	r2, r0
     130:	2a000024 	bcs	1c8 <irq_timer1_dmx_sender(unsigned long)+0x18c>
     134:	f57ff05f 	dmb	sy
     138:	e3a02a01 	mov	r2, #4096	; 0x1000
     13c:	e3a00004 	mov	r0, #4
     140:	e3432f20 	movt	r2, #16160	; 0x3f20
     144:	e3a01020 	mov	r1, #32
     148:	e5c30010 	strb	r0, [r3, #16]
     14c:	e5821038 	str	r1, [r2, #56]	; 0x38
     150:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
     154:	e5932018 	ldr	r2, [r3, #24]
     158:	e0832002 	add	r2, r3, r2
     15c:	e5d2201c 	ldrb	r2, [r2, #28]
     160:	e5812000 	str	r2, [r1]
     164:	e5932018 	ldr	r2, [r3, #24]
     168:	e2822001 	add	r2, r2, #1
     16c:	e5832018 	str	r2, [r3, #24]
     170:	e5912018 	ldr	r2, [r1, #24]
     174:	e3120020 	tst	r2, #32
     178:	1affffea 	bne	128 <irq_timer1_dmx_sender(unsigned long)+0xec>
     17c:	e5932018 	ldr	r2, [r3, #24]
     180:	e1520000 	cmp	r2, r0
     184:	3afffff2 	bcc	154 <irq_timer1_dmx_sender(unsigned long)+0x118>
     188:	eaffffe6 	b	128 <irq_timer1_dmx_sender(unsigned long)+0xec>
     18c:	e3002000 	movw	r2, #0
     190:	e3a0ca03 	mov	ip, #12288	; 0x3000
     194:	e3402000 	movt	r2, #0
     198:	e3a01a01 	mov	r1, #4096	; 0x1000
     19c:	e343cf00 	movt	ip, #16128	; 0x3f00
     1a0:	e5922004 	ldr	r2, [r2, #4]
     1a4:	e3431f20 	movt	r1, #16160	; 0x3f20
     1a8:	e0800002 	add	r0, r0, r2
     1ac:	e3a02078 	mov	r2, #120	; 0x78
     1b0:	e58c0010 	str	r0, [ip, #16]
     1b4:	e581202c 	str	r2, [r1, #44]	; 0x2c
     1b8:	f57ff05f 	dmb	sy
     1bc:	e3a02003 	mov	r2, #3
     1c0:	e5c32010 	strb	r2, [r3, #16]
     1c4:	e12fff1e 	bx	lr
     1c8:	f57ff05f 	dmb	sy
     1cc:	e3a0200b 	mov	r2, #11
     1d0:	e5c32010 	strb	r2, [r3, #16]
     1d4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000001d8 <irq_timer1_dmx_receive(unsigned long)>:
     1d8:	f57ff05f 	dmb	sy
     1dc:	e3003000 	movw	r3, #0
     1e0:	e3403000 	movt	r3, #0
     1e4:	e5d32444 	ldrb	r2, [r3, #1092]	; 0x444
     1e8:	e3520004 	cmp	r2, #4
     1ec:	112fff1e 	bxne	lr
     1f0:	e5932448 	ldr	r2, [r3, #1096]	; 0x448
     1f4:	e5931224 	ldr	r1, [r3, #548]	; 0x224
     1f8:	e0402002 	sub	r2, r0, r2
     1fc:	e1520001 	cmp	r2, r1
     200:	9a00000d 	bls	23c <irq_timer1_dmx_receive(unsigned long)+0x64>
     204:	f57ff05f 	dmb	sy
     208:	e3a02000 	mov	r2, #0
     20c:	e3a0cf85 	mov	ip, #532	; 0x214
     210:	e5c32444 	strb	r2, [r3, #1092]	; 0x444
     214:	e593044c 	ldr	r0, [r3, #1100]	; 0x44c
     218:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
     21c:	e5932450 	ldr	r2, [r3, #1104]	; 0x450
     220:	e2400001 	sub	r0, r0, #1
     224:	e021319c 	mla	r1, ip, r1, r3
     228:	e2822001 	add	r2, r2, #1
     22c:	e5810220 	str	r0, [r1, #544]	; 0x220
     230:	e2022001 	and	r2, r2, #1
     234:	e5832450 	str	r2, [r3, #1104]	; 0x450
     238:	e12fff1e 	bx	lr
     23c:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
     240:	e3a0cf85 	mov	ip, #532	; 0x214
     244:	e3a02a03 	mov	r2, #12288	; 0x3000
     248:	e023319c 	mla	r3, ip, r1, r3
     24c:	e3432f00 	movt	r2, #16128	; 0x3f00
     250:	e5933224 	ldr	r3, [r3, #548]	; 0x224
     254:	e0800003 	add	r0, r0, r3
     258:	e5820010 	str	r0, [r2, #16]
     25c:	e12fff1e 	bx	lr

00000260 <fiq_dmx_out_handler() [clone .part.0]>:
     260:	e3a01a01 	mov	r1, #4096	; 0x1000
     264:	e3003000 	movw	r3, #0
     268:	e3431f20 	movt	r1, #16160	; 0x3f20
     26c:	e3403000 	movt	r3, #0
     270:	e5912018 	ldr	r2, [r1, #24]
     274:	e593000c 	ldr	r0, [r3, #12]
     278:	e3003000 	movw	r3, #0
     27c:	e3403000 	movt	r3, #0
     280:	e3120020 	tst	r2, #32
     284:	0a00000a 	beq	2b4 <fiq_dmx_out_handler() [clone .part.0]+0x54>
     288:	ea00000c 	b	2c0 <fiq_dmx_out_handler() [clone .part.0]+0x60>
     28c:	e5932018 	ldr	r2, [r3, #24]
     290:	e0832002 	add	r2, r3, r2
     294:	e5d2201c 	ldrb	r2, [r2, #28]
     298:	e5812000 	str	r2, [r1]
     29c:	e5932018 	ldr	r2, [r3, #24]
     2a0:	e2822001 	add	r2, r2, #1
     2a4:	e5832018 	str	r2, [r3, #24]
     2a8:	e5912018 	ldr	r2, [r1, #24]
     2ac:	e3120020 	tst	r2, #32
     2b0:	1a000002 	bne	2c0 <fiq_dmx_out_handler() [clone .part.0]+0x60>
     2b4:	e5932018 	ldr	r2, [r3, #24]
     2b8:	e1520000 	cmp	r2, r0
     2bc:	3afffff2 	bcc	28c <fiq_dmx_out_handler() [clone .part.0]+0x2c>
     2c0:	e5932018 	ldr	r2, [r3, #24]
     2c4:	e1520000 	cmp	r2, r0
     2c8:	3a000007 	bcc	2ec <fiq_dmx_out_handler() [clone .part.0]+0x8c>
     2cc:	e3a02a01 	mov	r2, #4096	; 0x1000
     2d0:	e3432f20 	movt	r2, #16160	; 0x3f20
     2d4:	e5921038 	ldr	r1, [r2, #56]	; 0x38
     2d8:	e3c11020 	bic	r1, r1, #32
     2dc:	e5821038 	str	r1, [r2, #56]	; 0x38
     2e0:	f57ff05f 	dmb	sy
     2e4:	e3a0200b 	mov	r2, #11
     2e8:	e5c32010 	strb	r2, [r3, #16]
     2ec:	e3a03a01 	mov	r3, #4096	; 0x1000
     2f0:	e3a02020 	mov	r2, #32
     2f4:	e3433f20 	movt	r3, #16160	; 0x3f20
     2f8:	e5832044 	str	r2, [r3, #68]	; 0x44
     2fc:	e12fff1e 	bx	lr

00000300 <fiq_dmx()>:
     300:	e24ee004 	sub	lr, lr, #4
     304:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
     308:	f57ff05f 	dmb	sy
     30c:	e3003000 	movw	r3, #0
     310:	e3403000 	movt	r3, #0
     314:	e5933010 	ldr	r3, [r3, #16]
     318:	e3530001 	cmp	r3, #1
     31c:	0a000007 	beq	340 <fiq_dmx()+0x40>
     320:	e3a03a01 	mov	r3, #4096	; 0x1000
     324:	e3433f20 	movt	r3, #16160	; 0x3f20
     328:	e5933040 	ldr	r3, [r3, #64]	; 0x40
     32c:	e3530020 	cmp	r3, #32
     330:	1a000000 	bne	338 <fiq_dmx()+0x38>
     334:	ebffffc9 	bl	260 <fiq_dmx_out_handler() [clone .part.0]>
     338:	f57ff05f 	dmb	sy
     33c:	e8fd801f 	ldm	sp!, {r0, r1, r2, r3, r4, pc}^
     340:	e3a01a03 	mov	r1, #12288	; 0x3000
     344:	e3003000 	movw	r3, #0
     348:	e3431f00 	movt	r1, #16128	; 0x3f00
     34c:	e3a02a01 	mov	r2, #4096	; 0x1000
     350:	e3403000 	movt	r3, #0
     354:	e5911004 	ldr	r1, [r1, #4]
     358:	e3432f20 	movt	r2, #16160	; 0x3f20
     35c:	e5831448 	str	r1, [r3, #1096]	; 0x448
     360:	e5922000 	ldr	r2, [r2]
     364:	e3120b01 	tst	r2, #1024	; 0x400
     368:	0a000007 	beq	38c <fiq_dmx()+0x8c>
     36c:	e3a02002 	mov	r2, #2
     370:	e5c32444 	strb	r2, [r3, #1092]	; 0x444
     374:	e5932448 	ldr	r2, [r3, #1096]	; 0x448
     378:	e5832454 	str	r2, [r3, #1108]	; 0x454
     37c:	e5932448 	ldr	r2, [r3, #1096]	; 0x448
     380:	e5832468 	str	r2, [r3, #1128]	; 0x468
     384:	f57ff05f 	dmb	sy
     388:	e8fd801f 	ldm	sp!, {r0, r1, r2, r3, r4, pc}^
     38c:	e5d31444 	ldrb	r1, [r3, #1092]	; 0x444
     390:	e6ef2072 	uxtb	r2, r2
     394:	e351000a 	cmp	r1, #10
     398:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
     39c:	ea00000a 	b	3cc <fiq_dmx()+0xcc>
     3a0:	00000700 	andeq	r0, r0, r0, lsl #14
     3a4:	000003cc 	andeq	r0, r0, ip, asr #7
     3a8:	000006ac 	andeq	r0, r0, ip, lsr #13
     3ac:	000003cc 	andeq	r0, r0, ip, asr #7
     3b0:	000005f8 	strdeq	r0, [r0], -r8
     3b4:	00000598 	muleq	r0, r8, r5
     3b8:	00000558 	andeq	r0, r0, r8, asr r5
     3bc:	000004d4 	ldrdeq	r0, [r0], -r4
     3c0:	0000048c 	andeq	r0, r0, ip, lsl #9
     3c4:	00000444 	andeq	r0, r0, r4, asr #8
     3c8:	000003dc 	ldrdeq	r0, [r0], -ip
     3cc:	e3a02000 	mov	r2, #0
     3d0:	e5c32444 	strb	r2, [r3, #1092]	; 0x444
     3d4:	e5c3245c 	strb	r2, [r3, #1116]	; 0x45c
     3d8:	eaffffe7 	b	37c <fiq_dmx()+0x7c>
     3dc:	e5930458 	ldr	r0, [r3, #1112]	; 0x458
     3e0:	e593c44c 	ldr	ip, [r3, #1100]	; 0x44c
     3e4:	e28c1001 	add	r1, ip, #1
     3e8:	e583144c 	str	r1, [r3, #1100]	; 0x44c
     3ec:	e3001000 	movw	r1, #0
     3f0:	e3401000 	movt	r1, #0
     3f4:	e0811480 	add	r1, r1, r0, lsl #9
     3f8:	e5930470 	ldr	r0, [r3, #1136]	; 0x470
     3fc:	e7c1200c 	strb	r2, [r1, ip]
     400:	e2802001 	add	r2, r0, #1
     404:	e5832470 	str	r2, [r3, #1136]	; 0x470
     408:	e5932470 	ldr	r2, [r3, #1136]	; 0x470
     40c:	e3520004 	cmp	r2, #4
     410:	1affffd9 	bne	37c <fiq_dmx()+0x7c>
     414:	e5932458 	ldr	r2, [r3, #1112]	; 0x458
     418:	e3a01a03 	mov	r1, #12288	; 0x3000
     41c:	e3431f00 	movt	r1, #16128	; 0x3f00
     420:	e3a00000 	mov	r0, #0
     424:	e2822001 	add	r2, r2, #1
     428:	e202200f 	and	r2, r2, #15
     42c:	e5832458 	str	r2, [r3, #1112]	; 0x458
     430:	e5c30444 	strb	r0, [r3, #1092]	; 0x444
     434:	e5912004 	ldr	r2, [r1, #4]
     438:	e583246c 	str	r2, [r3, #1132]	; 0x46c
     43c:	f57ff05f 	dmb	sy
     440:	eaffffcd 	b	37c <fiq_dmx()+0x7c>
     444:	e5930458 	ldr	r0, [r3, #1112]	; 0x458
     448:	e593c44c 	ldr	ip, [r3, #1100]	; 0x44c
     44c:	e28c1001 	add	r1, ip, #1
     450:	e583144c 	str	r1, [r3, #1100]	; 0x44c
     454:	e3001000 	movw	r1, #0
     458:	e3401000 	movt	r1, #0
     45c:	e0811480 	add	r1, r1, r0, lsl #9
     460:	e5930470 	ldr	r0, [r3, #1136]	; 0x470
     464:	e7c1200c 	strb	r2, [r1, ip]
     468:	e2802001 	add	r2, r0, #1
     46c:	e5832470 	str	r2, [r3, #1136]	; 0x470
     470:	e5932470 	ldr	r2, [r3, #1136]	; 0x470
     474:	e352000c 	cmp	r2, #12
     478:	03a0100a 	moveq	r1, #10
     47c:	03a02000 	moveq	r2, #0
     480:	05c31444 	strbeq	r1, [r3, #1092]	; 0x444
     484:	05832470 	streq	r2, [r3, #1136]	; 0x470
     488:	eaffffbb 	b	37c <fiq_dmx()+0x7c>
     48c:	e593c458 	ldr	ip, [r3, #1112]	; 0x458
     490:	e35200aa 	cmp	r2, #170	; 0xaa
     494:	e593044c 	ldr	r0, [r3, #1100]	; 0x44c
     498:	e2801001 	add	r1, r0, #1
     49c:	e583144c 	str	r1, [r3, #1100]	; 0x44c
     4a0:	e3001000 	movw	r1, #0
     4a4:	e3401000 	movt	r1, #0
     4a8:	e081148c 	add	r1, r1, ip, lsl #9
     4ac:	e7c12000 	strb	r2, [r1, r0]
     4b0:	0a000002 	beq	4c0 <fiq_dmx()+0x1c0>
     4b4:	e593244c 	ldr	r2, [r3, #1100]	; 0x44c
     4b8:	e3520009 	cmp	r2, #9
     4bc:	1affffae 	bne	37c <fiq_dmx()+0x7c>
     4c0:	e3a01009 	mov	r1, #9
     4c4:	e3a02000 	mov	r2, #0
     4c8:	e5c31444 	strb	r1, [r3, #1092]	; 0x444
     4cc:	e5832470 	str	r2, [r3, #1136]	; 0x470
     4d0:	eaffffa9 	b	37c <fiq_dmx()+0x7c>
     4d4:	e5931458 	ldr	r1, [r3, #1112]	; 0x458
     4d8:	e593c44c 	ldr	ip, [r3, #1100]	; 0x44c
     4dc:	e28c0001 	add	r0, ip, #1
     4e0:	e583044c 	str	r0, [r3, #1100]	; 0x44c
     4e4:	e3000000 	movw	r0, #0
     4e8:	e3400000 	movt	r0, #0
     4ec:	e0801481 	add	r1, r0, r1, lsl #9
     4f0:	e7c1200c 	strb	r2, [r1, ip]
     4f4:	e300c464 	movw	ip, #1124	; 0x464
     4f8:	e19310bc 	ldrh	r1, [r3, ip]
     4fc:	e0412002 	sub	r2, r1, r2
     500:	e6ff2072 	uxth	r2, r2
     504:	e18320bc 	strh	r2, [r3, ip]
     508:	e5931458 	ldr	r1, [r3, #1112]	; 0x458
     50c:	e19320bc 	ldrh	r2, [r3, ip]
     510:	e3520000 	cmp	r2, #0
     514:	1a00000c 	bne	54c <fiq_dmx()+0x24c>
     518:	e0800481 	add	r0, r0, r1, lsl #9
     51c:	e5d02001 	ldrb	r2, [r0, #1]
     520:	e3520001 	cmp	r2, #1
     524:	1a000008 	bne	54c <fiq_dmx()+0x24c>
     528:	e5932458 	ldr	r2, [r3, #1112]	; 0x458
     52c:	e3a01a03 	mov	r1, #12288	; 0x3000
     530:	e3431f00 	movt	r1, #16128	; 0x3f00
     534:	e2822001 	add	r2, r2, #1
     538:	e202200f 	and	r2, r2, #15
     53c:	e5832458 	str	r2, [r3, #1112]	; 0x458
     540:	e5912004 	ldr	r2, [r1, #4]
     544:	e583246c 	str	r2, [r3, #1132]	; 0x46c
     548:	f57ff05f 	dmb	sy
     54c:	e3a02000 	mov	r2, #0
     550:	e5c32444 	strb	r2, [r3, #1092]	; 0x444
     554:	eaffff88 	b	37c <fiq_dmx()+0x7c>
     558:	e5930458 	ldr	r0, [r3, #1112]	; 0x458
     55c:	e593c44c 	ldr	ip, [r3, #1100]	; 0x44c
     560:	e28c1001 	add	r1, ip, #1
     564:	e583144c 	str	r1, [r3, #1100]	; 0x44c
     568:	e3001000 	movw	r1, #0
     56c:	e3401000 	movt	r1, #0
     570:	e0811480 	add	r1, r1, r0, lsl #9
     574:	e3000464 	movw	r0, #1124	; 0x464
     578:	e7c1200c 	strb	r2, [r1, ip]
     57c:	e3a0c007 	mov	ip, #7
     580:	e19310b0 	ldrh	r1, [r3, r0]
     584:	e0412402 	sub	r2, r1, r2, lsl #8
     588:	e6ff2072 	uxth	r2, r2
     58c:	e18320b0 	strh	r2, [r3, r0]
     590:	e5c3c444 	strb	ip, [r3, #1092]	; 0x444
     594:	eaffff78 	b	37c <fiq_dmx()+0x7c>
     598:	e593144c 	ldr	r1, [r3, #1100]	; 0x44c
     59c:	e3510c02 	cmp	r1, #512	; 0x200
     5a0:	8affffe9 	bhi	54c <fiq_dmx()+0x24c>
     5a4:	e5930458 	ldr	r0, [r3, #1112]	; 0x458
     5a8:	e593c44c 	ldr	ip, [r3, #1100]	; 0x44c
     5ac:	e28c1001 	add	r1, ip, #1
     5b0:	e583144c 	str	r1, [r3, #1100]	; 0x44c
     5b4:	e3001000 	movw	r1, #0
     5b8:	e3401000 	movt	r1, #0
     5bc:	e0810480 	add	r0, r1, r0, lsl #9
     5c0:	e7c0200c 	strb	r2, [r0, ip]
     5c4:	e300c464 	movw	ip, #1124	; 0x464
     5c8:	e19300bc 	ldrh	r0, [r3, ip]
     5cc:	e0802002 	add	r2, r0, r2
     5d0:	e6ff2072 	uxth	r2, r2
     5d4:	e18320bc 	strh	r2, [r3, ip]
     5d8:	e5930458 	ldr	r0, [r3, #1112]	; 0x458
     5dc:	e593244c 	ldr	r2, [r3, #1100]	; 0x44c
     5e0:	e0811480 	add	r1, r1, r0, lsl #9
     5e4:	e5d11002 	ldrb	r1, [r1, #2]
     5e8:	e1510002 	cmp	r1, r2
     5ec:	03a02006 	moveq	r2, #6
     5f0:	05c32444 	strbeq	r2, [r3, #1092]	; 0x444
     5f4:	eaffff60 	b	37c <fiq_dmx()+0x7c>
     5f8:	e593c448 	ldr	ip, [r3, #1096]	; 0x448
     5fc:	e3a0ef85 	mov	lr, #532	; 0x214
     600:	e5931468 	ldr	r1, [r3, #1128]	; 0x468
     604:	e5930450 	ldr	r0, [r3, #1104]	; 0x450
     608:	e04cc001 	sub	ip, ip, r1
     60c:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
     610:	e020309e 	mla	r0, lr, r0, r3
     614:	e021319e 	mla	r1, lr, r1, r3
     618:	e580c224 	str	ip, [r0, #548]	; 0x224
     61c:	e5911224 	ldr	r1, [r1, #548]	; 0x224
     620:	e351002b 	cmp	r1, #43	; 0x2b
     624:	93a0002c 	movls	r0, #44	; 0x2c
     628:	95931450 	ldrls	r1, [r3, #1104]	; 0x450
     62c:	902e319e 	mlals	lr, lr, r1, r3
     630:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
     634:	958e0224 	strls	r0, [lr, #548]	; 0x224
     638:	e593044c 	ldr	r0, [r3, #1100]	; 0x44c
     63c:	e593e224 	ldr	lr, [r3, #548]	; 0x224
     640:	e280c001 	add	ip, r0, #1
     644:	e583c44c 	str	ip, [r3, #1100]	; 0x44c
     648:	e3a0cf85 	mov	ip, #532	; 0x214
     64c:	e021319c 	mla	r1, ip, r1, r3
     650:	e0811000 	add	r1, r1, r0
     654:	e5c1201c 	strb	r2, [r1, #28]
     658:	e3a01a03 	mov	r1, #12288	; 0x3000
     65c:	e5932448 	ldr	r2, [r3, #1096]	; 0x448
     660:	e3431f00 	movt	r1, #16128	; 0x3f00
     664:	e082200e 	add	r2, r2, lr
     668:	e282200c 	add	r2, r2, #12
     66c:	e5812010 	str	r2, [r1, #16]
     670:	e593244c 	ldr	r2, [r3, #1100]	; 0x44c
     674:	e3520c02 	cmp	r2, #512	; 0x200
     678:	9affff3f 	bls	37c <fiq_dmx()+0x7c>
     67c:	e3a02000 	mov	r2, #0
     680:	e3a00c02 	mov	r0, #512	; 0x200
     684:	e5c32444 	strb	r2, [r3, #1092]	; 0x444
     688:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
     68c:	e5932450 	ldr	r2, [r3, #1104]	; 0x450
     690:	e02c319c 	mla	ip, ip, r1, r3
     694:	e2822001 	add	r2, r2, #1
     698:	e58c0220 	str	r0, [ip, #544]	; 0x220
     69c:	e2022001 	and	r2, r2, #1
     6a0:	e5832450 	str	r2, [r3, #1104]	; 0x450
     6a4:	f57ff05f 	dmb	sy
     6a8:	eaffff33 	b	37c <fiq_dmx()+0x7c>
     6ac:	e3520000 	cmp	r2, #0
     6b0:	0a00001e 	beq	730 <fiq_dmx()+0x430>
     6b4:	e35200cc 	cmp	r2, #204	; 0xcc
     6b8:	1affff43 	bne	3cc <fiq_dmx()+0xcc>
     6bc:	e3a00005 	mov	r0, #5
     6c0:	e3001000 	movw	r1, #0
     6c4:	e5c30444 	strb	r0, [r3, #1092]	; 0x444
     6c8:	e3e0c033 	mvn	ip, #51	; 0x33
     6cc:	e5930458 	ldr	r0, [r3, #1112]	; 0x458
     6d0:	e3401000 	movt	r1, #0
     6d4:	e7c1c480 	strb	ip, [r1, r0, lsl #9]
     6d8:	e3001464 	movw	r1, #1124	; 0x464
     6dc:	e18320b1 	strh	r2, [r3, r1]
     6e0:	e3a02001 	mov	r2, #1
     6e4:	e583244c 	str	r2, [r3, #1100]	; 0x44c
     6e8:	e3a01000 	mov	r1, #0
     6ec:	e5932004 	ldr	r2, [r3, #4]
     6f0:	e2822001 	add	r2, r2, #1
     6f4:	e5832004 	str	r2, [r3, #4]
     6f8:	e5c3145c 	strb	r1, [r3, #1116]	; 0x45c
     6fc:	eaffff1e 	b	37c <fiq_dmx()+0x7c>
     700:	e35200fe 	cmp	r2, #254	; 0xfe
     704:	1affff1c 	bne	37c <fiq_dmx()+0x7c>
     708:	e3a01008 	mov	r1, #8
     70c:	e3002000 	movw	r2, #0
     710:	e3402000 	movt	r2, #0
     714:	e3e00001 	mvn	r0, #1
     718:	e5c31444 	strb	r1, [r3, #1092]	; 0x444
     71c:	e5931458 	ldr	r1, [r3, #1112]	; 0x458
     720:	e7c20481 	strb	r0, [r2, r1, lsl #9]
     724:	e3a02001 	mov	r2, #1
     728:	e583244c 	str	r2, [r3, #1100]	; 0x44c
     72c:	eaffff12 	b	37c <fiq_dmx()+0x7c>
     730:	e3a01004 	mov	r1, #4
     734:	e3a0cf85 	mov	ip, #532	; 0x214
     738:	e5c31444 	strb	r1, [r3, #1092]	; 0x444
     73c:	e3a00001 	mov	r0, #1
     740:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
     744:	e583044c 	str	r0, [r3, #1100]	; 0x44c
     748:	e021319c 	mla	r1, ip, r1, r3
     74c:	e5c1201c 	strb	r2, [r1, #28]
     750:	e5932000 	ldr	r2, [r3]
     754:	e0822000 	add	r2, r2, r0
     758:	e5832000 	str	r2, [r3]
     75c:	e5d3245c 	ldrb	r2, [r3, #1116]	; 0x45c
     760:	e3520000 	cmp	r2, #0
     764:	0a000008 	beq	78c <fiq_dmx()+0x48c>
     768:	e5931454 	ldr	r1, [r3, #1108]	; 0x454
     76c:	e5930460 	ldr	r0, [r3, #1120]	; 0x460
     770:	e5932450 	ldr	r2, [r3, #1104]	; 0x450
     774:	e0411000 	sub	r1, r1, r0
     778:	e02c329c 	mla	ip, ip, r2, r3
     77c:	e5930454 	ldr	r0, [r3, #1108]	; 0x454
     780:	e58c122c 	str	r1, [ip, #556]	; 0x22c
     784:	e5830460 	str	r0, [r3, #1120]	; 0x460
     788:	eafffefb 	b	37c <fiq_dmx()+0x7c>
     78c:	e5c3045c 	strb	r0, [r3, #1116]	; 0x45c
     790:	e5932454 	ldr	r2, [r3, #1108]	; 0x454
     794:	e5832460 	str	r2, [r3, #1120]	; 0x460
     798:	eafffef7 	b	37c <fiq_dmx()+0x7c>

0000079c <Dmx::StopData() [clone .part.0]>:
     79c:	e92d4010 	push	{r4, lr}
     7a0:	e3004000 	movw	r4, #0
     7a4:	e3404000 	movt	r4, #0
     7a8:	e5d43474 	ldrb	r3, [r4, #1140]	; 0x474
     7ac:	e3530000 	cmp	r3, #0
     7b0:	0a00001b 	beq	824 <Dmx::StopData() [clone .part.0]+0x88>
     7b4:	e3a02a01 	mov	r2, #4096	; 0x1000
     7b8:	e3a01a03 	mov	r1, #12288	; 0x3000
     7bc:	e3432f20 	movt	r2, #16160	; 0x3f20
     7c0:	e3a0c002 	mov	ip, #2
     7c4:	e3431f00 	movt	r1, #16128	; 0x3f00
     7c8:	ea000003 	b	7dc <Dmx::StopData() [clone .part.0]+0x40>
     7cc:	f57ff05f 	dmb	sy
     7d0:	e5d43010 	ldrb	r3, [r4, #16]
     7d4:	e3530000 	cmp	r3, #0
     7d8:	0a000011 	beq	824 <Dmx::StopData() [clone .part.0]+0x88>
     7dc:	f57ff05f 	dmb	sy
     7e0:	e5d43010 	ldrb	r3, [r4, #16]
     7e4:	e353000b 	cmp	r3, #11
     7e8:	1afffff7 	bne	7cc <Dmx::StopData() [clone .part.0]+0x30>
     7ec:	e5923018 	ldr	r3, [r2, #24]
     7f0:	e2133008 	ands	r3, r3, #8
     7f4:	1afffffc 	bne	7ec <Dmx::StopData() [clone .part.0]+0x50>
     7f8:	f57ff05f 	dmb	sy
     7fc:	e5910004 	ldr	r0, [r1, #4]
     800:	e2400001 	sub	r0, r0, #1
     804:	e5810010 	str	r0, [r1, #16]
     808:	e581c000 	str	ip, [r1]
     80c:	f57ff05f 	dmb	sy
     810:	e5c43010 	strb	r3, [r4, #16]
     814:	f57ff05f 	dmb	sy
     818:	e5d43010 	ldrb	r3, [r4, #16]
     81c:	e3530000 	cmp	r3, #0
     820:	1affffed 	bne	7dc <Dmx::StopData() [clone .part.0]+0x40>
     824:	e3a01000 	mov	r1, #0
     828:	e1a00001 	mov	r0, r1
     82c:	ebfffffe 	bl	0 <irq_timer_set>
     830:	f10c0040 	cpsid	f
     834:	f57ff06f 	isb	sy
     838:	e3002000 	movw	r2, #0
     83c:	e3a03000 	mov	r3, #0
     840:	e3402000 	movt	r2, #0
     844:	e3a01001 	mov	r1, #1
     848:	e5c43474 	strb	r3, [r4, #1140]	; 0x474
     84c:	e5843220 	str	r3, [r4, #544]	; 0x220
     850:	e5c43444 	strb	r3, [r4, #1092]	; 0x444
     854:	e5843434 	str	r3, [r4, #1076]	; 0x434
     858:	e5c21014 	strb	r1, [r2, #20]
     85c:	e8bd8010 	pop	{r4, pc}

00000860 <fiq_dmx_out_handler()>:
     860:	e3a03a01 	mov	r3, #4096	; 0x1000
     864:	e3433f20 	movt	r3, #16160	; 0x3f20
     868:	e5933040 	ldr	r3, [r3, #64]	; 0x40
     86c:	e3530020 	cmp	r3, #32
     870:	112fff1e 	bxne	lr
     874:	eafffe79 	b	260 <fiq_dmx_out_handler() [clone .part.0]>

00000878 <Dmx::UartInit()>:
     878:	e92d4070 	push	{r4, r5, r6, lr}
     87c:	e3a00002 	mov	r0, #2
     880:	ebfffffe 	bl	0 <bcm2835_vc_get_clock_rate>
     884:	e3a03b1b 	mov	r3, #27648	; 0x6c00
     888:	e34032dc 	movt	r3, #732	; 0x2dc
     88c:	e1500003 	cmp	r0, r3
     890:	03a0600c 	moveq	r6, #12
     894:	0a000004 	beq	8ac <Dmx::UartInit()+0x34>
     898:	e3a01c09 	mov	r1, #2304	; 0x900
     89c:	e3a00002 	mov	r0, #2
     8a0:	e340103d 	movt	r1, #61	; 0x3d
     8a4:	e3a06001 	mov	r6, #1
     8a8:	ebfffffe 	bl	0 <bcm2835_vc_set_clock_rate>
     8ac:	e3a04a01 	mov	r4, #4096	; 0x1000
     8b0:	e3a05000 	mov	r5, #0
     8b4:	e3434f20 	movt	r4, #16160	; 0x3f20
     8b8:	e5845030 	str	r5, [r4, #48]	; 0x30
     8bc:	f57ff05f 	dmb	sy
     8c0:	e3a01004 	mov	r1, #4
     8c4:	e3a0000e 	mov	r0, #14
     8c8:	ebfffffe 	bl	0 <bcm2835_gpio_fsel>
     8cc:	e3a0000f 	mov	r0, #15
     8d0:	e3a01004 	mov	r1, #4
     8d4:	ebfffffe 	bl	0 <bcm2835_gpio_fsel>
     8d8:	e1a01005 	mov	r1, r5
     8dc:	e3a0000e 	mov	r0, #14
     8e0:	ebfffffe 	bl	0 <bcm2835_gpio_set_pud>
     8e4:	e1a01005 	mov	r1, r5
     8e8:	e3a0000f 	mov	r0, #15
     8ec:	ebfffffe 	bl	0 <bcm2835_gpio_set_pud>
     8f0:	f57ff05f 	dmb	sy
     8f4:	e5943018 	ldr	r3, [r4, #24]
     8f8:	e2133008 	ands	r3, r3, #8
     8fc:	1afffffc 	bne	8f4 <Dmx::UartInit()+0x7c>
     900:	e594202c 	ldr	r2, [r4, #44]	; 0x2c
     904:	e30007ff 	movw	r0, #2047	; 0x7ff
     908:	e3a01cb2 	mov	r1, #45568	; 0xb200
     90c:	e3c22010 	bic	r2, r2, #16
     910:	e584202c 	str	r2, [r4, #44]	; 0x2c
     914:	e3a02068 	mov	r2, #104	; 0x68
     918:	e5840044 	str	r0, [r4, #68]	; 0x44
     91c:	e3431f00 	movt	r1, #16128	; 0x3f00
     920:	e5846024 	str	r6, [r4, #36]	; 0x24
     924:	e5843028 	str	r3, [r4, #40]	; 0x28
     928:	e3003301 	movw	r3, #769	; 0x301
     92c:	e584202c 	str	r2, [r4, #44]	; 0x2c
     930:	e3a02010 	mov	r2, #16
     934:	e5843030 	str	r3, [r4, #48]	; 0x30
     938:	e3a030b9 	mov	r3, #185	; 0xb9
     93c:	e5842038 	str	r2, [r4, #56]	; 0x38
     940:	e581300c 	str	r3, [r1, #12]
     944:	f57ff06f 	isb	sy
     948:	e8bd8070 	pop	{r4, r5, r6, pc}

0000094c <Dmx::Dmx()>:
     94c:	e92d4070 	push	{r4, r5, r6, lr}
     950:	e3004000 	movw	r4, #0
     954:	e3404000 	movt	r4, #0
     958:	e1a05000 	mov	r5, r0
     95c:	e30631a8 	movw	r3, #25000	; 0x61a8
     960:	e3a01001 	mov	r1, #1
     964:	e5840478 	str	r0, [r4, #1144]	; 0x478
     968:	e3a00012 	mov	r0, #18
     96c:	e5c50004 	strb	r0, [r5, #4]
     970:	e2846f8f 	add	r6, r4, #572	; 0x23c
     974:	e5853000 	str	r3, [r5]
     978:	ebfffffe 	bl	0 <bcm2835_gpio_fsel>
     97c:	e5d51004 	ldrb	r1, [r5, #4]
     980:	e3a03001 	mov	r3, #1
     984:	e3a02000 	mov	r2, #0
     988:	e284ee22 	add	lr, r4, #544	; 0x220
     98c:	e3432f20 	movt	r2, #16160	; 0x3f20
     990:	e3a00000 	mov	r0, #0
     994:	e1a03113 	lsl	r3, r3, r1
     998:	e284101c 	add	r1, r4, #28
     99c:	e5823028 	str	r3, [r2, #40]	; 0x28
     9a0:	e284203c 	add	r2, r4, #60	; 0x3c
     9a4:	e5420020 	strb	r0, [r2, #-32]	; 0xffffffe0
     9a8:	e1a03002 	mov	r3, r2
     9ac:	e542001f 	strb	r0, [r2, #-31]	; 0xffffffe1
     9b0:	e542001e 	strb	r0, [r2, #-30]	; 0xffffffe2
     9b4:	e542001d 	strb	r0, [r2, #-29]	; 0xffffffe3
     9b8:	e542001c 	strb	r0, [r2, #-28]	; 0xffffffe4
     9bc:	e542001b 	strb	r0, [r2, #-27]	; 0xffffffe5
     9c0:	e542001a 	strb	r0, [r2, #-26]	; 0xffffffe6
     9c4:	e5420019 	strb	r0, [r2, #-25]	; 0xffffffe7
     9c8:	e5420018 	strb	r0, [r2, #-24]	; 0xffffffe8
     9cc:	e5420017 	strb	r0, [r2, #-23]	; 0xffffffe9
     9d0:	e5420016 	strb	r0, [r2, #-22]	; 0xffffffea
     9d4:	e5420015 	strb	r0, [r2, #-21]	; 0xffffffeb
     9d8:	e5420014 	strb	r0, [r2, #-20]	; 0xffffffec
     9dc:	e5420013 	strb	r0, [r2, #-19]	; 0xffffffed
     9e0:	e5420012 	strb	r0, [r2, #-18]	; 0xffffffee
     9e4:	e5420011 	strb	r0, [r2, #-17]	; 0xffffffef
     9e8:	e5420010 	strb	r0, [r2, #-16]
     9ec:	e542000f 	strb	r0, [r2, #-15]
     9f0:	e542000e 	strb	r0, [r2, #-14]
     9f4:	e542000d 	strb	r0, [r2, #-13]
     9f8:	e542000c 	strb	r0, [r2, #-12]
     9fc:	e542000b 	strb	r0, [r2, #-11]
     a00:	e542000a 	strb	r0, [r2, #-10]
     a04:	e5420009 	strb	r0, [r2, #-9]
     a08:	e5420008 	strb	r0, [r2, #-8]
     a0c:	e5420007 	strb	r0, [r2, #-7]
     a10:	e5420006 	strb	r0, [r2, #-6]
     a14:	e5420005 	strb	r0, [r2, #-5]
     a18:	e5420004 	strb	r0, [r2, #-4]
     a1c:	e5420003 	strb	r0, [r2, #-3]
     a20:	e5420002 	strb	r0, [r2, #-2]
     a24:	f5d2f002 	pld	[r2, #2]
     a28:	e04ec002 	sub	ip, lr, r2
     a2c:	e2822020 	add	r2, r2, #32
     a30:	e5420021 	strb	r0, [r2, #-33]	; 0xffffffdf
     a34:	e1560002 	cmp	r6, r2
     a38:	1affffd9 	bne	9a4 <Dmx::Dmx()+0x58>
     a3c:	e083200c 	add	r2, r3, ip
     a40:	e3a00000 	mov	r0, #0
     a44:	e4c30001 	strb	r0, [r3], #1
     a48:	e1520003 	cmp	r2, r3
     a4c:	1afffffc 	bne	a44 <Dmx::Dmx()+0xf8>
     a50:	e59f3160 	ldr	r3, [pc, #352]	; bb8 <Dmx::Dmx()+0x26c>
     a54:	e3a02000 	mov	r2, #0
     a58:	e2830010 	add	r0, r3, #16
     a5c:	e4c32001 	strb	r2, [r3], #1
     a60:	e1530000 	cmp	r3, r0
     a64:	1afffffc 	bne	a5c <Dmx::Dmx()+0x110>
     a68:	e59f614c 	ldr	r6, [pc, #332]	; bbc <Dmx::Dmx()+0x270>
     a6c:	e281ee43 	add	lr, r1, #1072	; 0x430
     a70:	e2842e25 	add	r2, r4, #592	; 0x250
     a74:	e28ee004 	add	lr, lr, #4
     a78:	e3a00000 	mov	r0, #0
     a7c:	e5420020 	strb	r0, [r2, #-32]	; 0xffffffe0
     a80:	e1a03002 	mov	r3, r2
     a84:	e542001f 	strb	r0, [r2, #-31]	; 0xffffffe1
     a88:	e542001e 	strb	r0, [r2, #-30]	; 0xffffffe2
     a8c:	e542001d 	strb	r0, [r2, #-29]	; 0xffffffe3
     a90:	e542001c 	strb	r0, [r2, #-28]	; 0xffffffe4
     a94:	e542001b 	strb	r0, [r2, #-27]	; 0xffffffe5
     a98:	e542001a 	strb	r0, [r2, #-26]	; 0xffffffe6
     a9c:	e5420019 	strb	r0, [r2, #-25]	; 0xffffffe7
     aa0:	e5420018 	strb	r0, [r2, #-24]	; 0xffffffe8
     aa4:	e5420017 	strb	r0, [r2, #-23]	; 0xffffffe9
     aa8:	e5420016 	strb	r0, [r2, #-22]	; 0xffffffea
     aac:	e5420015 	strb	r0, [r2, #-21]	; 0xffffffeb
     ab0:	e5420014 	strb	r0, [r2, #-20]	; 0xffffffec
     ab4:	e5420013 	strb	r0, [r2, #-19]	; 0xffffffed
     ab8:	e5420012 	strb	r0, [r2, #-18]	; 0xffffffee
     abc:	e5420011 	strb	r0, [r2, #-17]	; 0xffffffef
     ac0:	e5420010 	strb	r0, [r2, #-16]
     ac4:	e542000f 	strb	r0, [r2, #-15]
     ac8:	e542000e 	strb	r0, [r2, #-14]
     acc:	e542000d 	strb	r0, [r2, #-13]
     ad0:	e542000c 	strb	r0, [r2, #-12]
     ad4:	e542000b 	strb	r0, [r2, #-11]
     ad8:	e542000a 	strb	r0, [r2, #-10]
     adc:	e5420009 	strb	r0, [r2, #-9]
     ae0:	e5420008 	strb	r0, [r2, #-8]
     ae4:	e5420007 	strb	r0, [r2, #-7]
     ae8:	e5420006 	strb	r0, [r2, #-6]
     aec:	e5420005 	strb	r0, [r2, #-5]
     af0:	e5420004 	strb	r0, [r2, #-4]
     af4:	e5420003 	strb	r0, [r2, #-3]
     af8:	e5420002 	strb	r0, [r2, #-2]
     afc:	f5d2f002 	pld	[r2, #2]
     b00:	e046c002 	sub	ip, r6, r2
     b04:	e2822020 	add	r2, r2, #32
     b08:	e5420021 	strb	r0, [r2, #-33]	; 0xffffffdf
     b0c:	e15e0002 	cmp	lr, r2
     b10:	1affffd9 	bne	a7c <Dmx::Dmx()+0x130>
     b14:	e083200c 	add	r2, r3, ip
     b18:	e3a00000 	mov	r0, #0
     b1c:	e4c30001 	strb	r0, [r3], #1
     b20:	e1530002 	cmp	r3, r2
     b24:	1afffffc 	bne	b1c <Dmx::Dmx()+0x1d0>
     b28:	e2813e41 	add	r3, r1, #1040	; 0x410
     b2c:	e2811e42 	add	r1, r1, #1056	; 0x420
     b30:	e2833008 	add	r3, r3, #8
     b34:	e3a02000 	mov	r2, #0
     b38:	e2811008 	add	r1, r1, #8
     b3c:	e4c32001 	strb	r2, [r3], #1
     b40:	e1530001 	cmp	r3, r1
     b44:	1afffffc 	bne	b3c <Dmx::Dmx()+0x1f0>
     b48:	e5842450 	str	r2, [r4, #1104]	; 0x450
     b4c:	e584247c 	str	r2, [r4, #1148]	; 0x47c
     b50:	e5842458 	str	r2, [r4, #1112]	; 0x458
     b54:	e5842480 	str	r2, [r4, #1152]	; 0x480
     b58:	e5c42444 	strb	r2, [r4, #1092]	; 0x444
     b5c:	e5c42010 	strb	r2, [r4, #16]
     b60:	e5c42474 	strb	r2, [r4, #1140]	; 0x474
     b64:	ebfffffe 	bl	0 <irq_timer_init>
     b68:	e3001000 	movw	r1, #0
     b6c:	e3a00001 	mov	r0, #1
     b70:	e3401000 	movt	r1, #0
     b74:	ebfffffe 	bl	0 <irq_timer_set>
     b78:	e3a02a03 	mov	r2, #12288	; 0x3000
     b7c:	e3432f00 	movt	r2, #16128	; 0x3f00
     b80:	e5923004 	ldr	r3, [r2, #4]
     b84:	e283393d 	add	r3, r3, #999424	; 0xf4000
     b88:	e2833d09 	add	r3, r3, #576	; 0x240
     b8c:	e5823018 	str	r3, [r2, #24]
     b90:	f57ff05f 	dmb	sy
     b94:	e1a00005 	mov	r0, r5
     b98:	ebfffffe 	bl	878 <Dmx::UartInit()>
     b9c:	f10c0040 	cpsid	f
     ba0:	e3000000 	movw	r0, #0
     ba4:	e3a0101c 	mov	r1, #28
     ba8:	e3400000 	movt	r0, #0
     bac:	ebfffffe 	bl	0 <arm_install_handler>
     bb0:	e1a00005 	mov	r0, r5
     bb4:	e8bd8070 	pop	{r4, r5, r6, pc}
     bb8:	00000220 	andeq	r0, r0, r0, lsr #4
     bbc:	00000434 	andeq	r0, r0, r4, lsr r4

00000bc0 <Dmx::UartEnableFifo()>:
     bc0:	e3a03a01 	mov	r3, #4096	; 0x1000
     bc4:	e3a02000 	mov	r2, #0
     bc8:	e3433f20 	movt	r3, #16160	; 0x3f20
     bcc:	e30007ff 	movw	r0, #2047	; 0x7ff
     bd0:	e3a01078 	mov	r1, #120	; 0x78
     bd4:	e5832030 	str	r2, [r3, #48]	; 0x30
     bd8:	e5830044 	str	r0, [r3, #68]	; 0x44
     bdc:	e3a00001 	mov	r0, #1
     be0:	e583102c 	str	r1, [r3, #44]	; 0x2c
     be4:	e3001301 	movw	r1, #769	; 0x301
     be8:	e5830034 	str	r0, [r3, #52]	; 0x34
     bec:	e5832038 	str	r2, [r3, #56]	; 0x38
     bf0:	e5831030 	str	r1, [r3, #48]	; 0x30
     bf4:	f57ff06f 	isb	sy
     bf8:	e12fff1e 	bx	lr

00000bfc <Dmx::UartDisableFifo()>:
     bfc:	e3a03a01 	mov	r3, #4096	; 0x1000
     c00:	e3a02000 	mov	r2, #0
     c04:	e3433f20 	movt	r3, #16160	; 0x3f20
     c08:	e300c7ff 	movw	ip, #2047	; 0x7ff
     c0c:	e3a00068 	mov	r0, #104	; 0x68
     c10:	e3a01010 	mov	r1, #16
     c14:	e5832030 	str	r2, [r3, #48]	; 0x30
     c18:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
     c1c:	e3c22010 	bic	r2, r2, #16
     c20:	e583202c 	str	r2, [r3, #44]	; 0x2c
     c24:	e3002301 	movw	r2, #769	; 0x301
     c28:	e583c044 	str	ip, [r3, #68]	; 0x44
     c2c:	e583002c 	str	r0, [r3, #44]	; 0x2c
     c30:	e5831038 	str	r1, [r3, #56]	; 0x38
     c34:	e5832030 	str	r2, [r3, #48]	; 0x30
     c38:	f57ff06f 	isb	sy
     c3c:	e12fff1e 	bx	lr

00000c40 <Dmx::StartOutput(unsigned long)>:
     c40:	e12fff1e 	bx	lr

00000c44 <Dmx::SetOutput(bool)>:
     c44:	e92d4010 	push	{r4, lr}
     c48:	e3004000 	movw	r4, #0
     c4c:	e3404000 	movt	r4, #0
     c50:	e5d40010 	ldrb	r0, [r4, #16]
     c54:	e21000ff 	ands	r0, r0, #255	; 0xff
     c58:	18bd8010 	popne	{r4, pc}
     c5c:	e3a03a01 	mov	r3, #4096	; 0x1000
     c60:	e30017ff 	movw	r1, #2047	; 0x7ff
     c64:	e3433f20 	movt	r3, #16160	; 0x3f20
     c68:	e3a02078 	mov	r2, #120	; 0x78
     c6c:	e5830030 	str	r0, [r3, #48]	; 0x30
     c70:	e5831044 	str	r1, [r3, #68]	; 0x44
     c74:	e583202c 	str	r2, [r3, #44]	; 0x2c
     c78:	e3a02001 	mov	r2, #1
     c7c:	e5832034 	str	r2, [r3, #52]	; 0x34
     c80:	e3002301 	movw	r2, #769	; 0x301
     c84:	e5830038 	str	r0, [r3, #56]	; 0x38
     c88:	e5832030 	str	r2, [r3, #48]	; 0x30
     c8c:	f57ff06f 	isb	sy
     c90:	f1080040 	cpsie	f
     c94:	e3001000 	movw	r1, #0
     c98:	e3401000 	movt	r1, #0
     c9c:	ebfffffe 	bl	0 <irq_timer_set>
     ca0:	e3a02a03 	mov	r2, #12288	; 0x3000
     ca4:	e3003000 	movw	r3, #0
     ca8:	e3432f00 	movt	r2, #16128	; 0x3f00
     cac:	e3403000 	movt	r3, #0
     cb0:	e5920004 	ldr	r0, [r2, #4]
     cb4:	e5941014 	ldr	r1, [r4, #20]
     cb8:	e5933008 	ldr	r3, [r3, #8]
     cbc:	e0401001 	sub	r1, r0, r1
     cc0:	e1510003 	cmp	r1, r3
     cc4:	82800004 	addhi	r0, r0, #4
     cc8:	95941014 	ldrls	r1, [r4, #20]
     ccc:	85820010 	strhi	r0, [r2, #16]
     cd0:	90833001 	addls	r3, r3, r1
     cd4:	92833004 	addls	r3, r3, #4
     cd8:	95823010 	strls	r3, [r2, #16]
     cdc:	f57ff06f 	isb	sy
     ce0:	e8bd8010 	pop	{r4, pc}

00000ce4 <Dmx::StartData()>:
     ce4:	e92d4070 	push	{r4, r5, r6, lr}
     ce8:	e3004000 	movw	r4, #0
     cec:	e3404000 	movt	r4, #0
     cf0:	e5940010 	ldr	r0, [r4, #16]
     cf4:	e3500000 	cmp	r0, #0
     cf8:	0a000026 	beq	d98 <Dmx::StartData()+0xb4>
     cfc:	e3500001 	cmp	r0, #1
     d00:	1a000021 	bne	d8c <Dmx::StartData()+0xa8>
     d04:	e3003000 	movw	r3, #0
     d08:	e3001000 	movw	r1, #0
     d0c:	e3403000 	movt	r3, #0
     d10:	e3a00000 	mov	r0, #0
     d14:	e3401000 	movt	r1, #0
     d18:	e5c30444 	strb	r0, [r3, #1092]	; 0x444
     d1c:	ebfffffe 	bl	0 <irq_timer_set>
     d20:	e3a03a01 	mov	r3, #4096	; 0x1000
     d24:	e3433f20 	movt	r3, #16160	; 0x3f20
     d28:	e5932018 	ldr	r2, [r3, #24]
     d2c:	e3120008 	tst	r2, #8
     d30:	0a000003 	beq	d44 <Dmx::StartData()+0x60>
     d34:	e5932000 	ldr	r2, [r3]
     d38:	e5932018 	ldr	r2, [r3, #24]
     d3c:	e3120008 	tst	r2, #8
     d40:	1afffffb 	bne	d34 <Dmx::StartData()+0x50>
     d44:	e3a03a01 	mov	r3, #4096	; 0x1000
     d48:	e3a02000 	mov	r2, #0
     d4c:	e3433f20 	movt	r3, #16160	; 0x3f20
     d50:	e30007ff 	movw	r0, #2047	; 0x7ff
     d54:	e3a01068 	mov	r1, #104	; 0x68
     d58:	e5832030 	str	r2, [r3, #48]	; 0x30
     d5c:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
     d60:	e3c22010 	bic	r2, r2, #16
     d64:	e583202c 	str	r2, [r3, #44]	; 0x2c
     d68:	e3a02010 	mov	r2, #16
     d6c:	e5830044 	str	r0, [r3, #68]	; 0x44
     d70:	e583102c 	str	r1, [r3, #44]	; 0x2c
     d74:	e5832038 	str	r2, [r3, #56]	; 0x38
     d78:	e3002301 	movw	r2, #769	; 0x301
     d7c:	e5832030 	str	r2, [r3, #48]	; 0x30
     d80:	f57ff06f 	isb	sy
     d84:	f1080040 	cpsie	f
     d88:	f57ff06f 	isb	sy
     d8c:	e3a03000 	mov	r3, #0
     d90:	e5c43014 	strb	r3, [r4, #20]
     d94:	e8bd8070 	pop	{r4, r5, r6, pc}
     d98:	e3005000 	movw	r5, #0
     d9c:	e3a03a01 	mov	r3, #4096	; 0x1000
     da0:	e3433f20 	movt	r3, #16160	; 0x3f20
     da4:	e3a02001 	mov	r2, #1
     da8:	e3405000 	movt	r5, #0
     dac:	e30017ff 	movw	r1, #2047	; 0x7ff
     db0:	e5c52474 	strb	r2, [r5, #1140]	; 0x474
     db4:	e5c50010 	strb	r0, [r5, #16]
     db8:	e5830030 	str	r0, [r3, #48]	; 0x30
     dbc:	e5831044 	str	r1, [r3, #68]	; 0x44
     dc0:	e3a01078 	mov	r1, #120	; 0x78
     dc4:	e583102c 	str	r1, [r3, #44]	; 0x2c
     dc8:	e5832034 	str	r2, [r3, #52]	; 0x34
     dcc:	e3002301 	movw	r2, #769	; 0x301
     dd0:	e5830038 	str	r0, [r3, #56]	; 0x38
     dd4:	e5832030 	str	r2, [r3, #48]	; 0x30
     dd8:	f57ff06f 	isb	sy
     ddc:	f1080040 	cpsie	f
     de0:	e3001000 	movw	r1, #0
     de4:	e3401000 	movt	r1, #0
     de8:	ebfffffe 	bl	0 <irq_timer_set>
     dec:	e5943008 	ldr	r3, [r4, #8]
     df0:	e3a02a03 	mov	r2, #12288	; 0x3000
     df4:	e3432f00 	movt	r2, #16128	; 0x3f00
     df8:	e5920004 	ldr	r0, [r2, #4]
     dfc:	e5951014 	ldr	r1, [r5, #20]
     e00:	e0401001 	sub	r1, r0, r1
     e04:	e1510003 	cmp	r1, r3
     e08:	82800004 	addhi	r0, r0, #4
     e0c:	95951014 	ldrls	r1, [r5, #20]
     e10:	85820010 	strhi	r0, [r2, #16]
     e14:	90833001 	addls	r3, r3, r1
     e18:	92833004 	addls	r3, r3, #4
     e1c:	95823010 	strls	r3, [r2, #16]
     e20:	eaffffd8 	b	d88 <Dmx::StartData()+0xa4>

00000e24 <Dmx::StopData()>:
     e24:	e3003000 	movw	r3, #0
     e28:	e3403000 	movt	r3, #0
     e2c:	e5d33014 	ldrb	r3, [r3, #20]
     e30:	e3530000 	cmp	r3, #0
     e34:	112fff1e 	bxne	lr
     e38:	eafffe57 	b	79c <Dmx::StopData() [clone .part.0]>

00000e3c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>:
     e3c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     e40:	e3004000 	movw	r4, #0
     e44:	e3404000 	movt	r4, #0
     e48:	e1a05002 	mov	r5, r2
     e4c:	e1a07000 	mov	r7, r0
     e50:	e1a06003 	mov	r6, r3
     e54:	e5942010 	ldr	r2, [r4, #16]
     e58:	e1520005 	cmp	r2, r5
     e5c:	0a000014 	beq	eb4 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x78>
     e60:	e5d43014 	ldrb	r3, [r4, #20]
     e64:	e3530000 	cmp	r3, #0
     e68:	1a000000 	bne	e70 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x34>
     e6c:	ebfffe4a 	bl	79c <Dmx::StopData() [clone .part.0]>
     e70:	e5d73004 	ldrb	r3, [r7, #4]
     e74:	e3a02001 	mov	r2, #1
     e78:	e3550000 	cmp	r5, #0
     e7c:	e1a03312 	lsl	r3, r2, r3
     e80:	13a01000 	movne	r1, #0
     e84:	13431f20 	movtne	r1, #16160	; 0x3f20
     e88:	03a02000 	moveq	r2, #0
     e8c:	03432f20 	movteq	r2, #16160	; 0x3f20
     e90:	15813028 	strne	r3, [r1, #40]	; 0x28
     e94:	0582301c 	streq	r3, [r2, #28]
     e98:	15842010 	strne	r2, [r4, #16]
     e9c:	05845010 	streq	r5, [r4, #16]
     ea0:	e3560000 	cmp	r6, #0
     ea4:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
     ea8:	e1a00007 	mov	r0, r7
     eac:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
     eb0:	eafffffe 	b	ce4 <Dmx::StartData()>
     eb4:	e3530000 	cmp	r3, #0
     eb8:	1afffffa 	bne	ea8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x6c>
     ebc:	e5d43014 	ldrb	r3, [r4, #20]
     ec0:	e3530000 	cmp	r3, #0
     ec4:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
     ec8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
     ecc:	eafffe32 	b	79c <Dmx::StopData() [clone .part.0]>

00000ed0 <Dmx::GetPortDirection(unsigned long)>:
     ed0:	e3003000 	movw	r3, #0
     ed4:	e3403000 	movt	r3, #0
     ed8:	e5930010 	ldr	r0, [r3, #16]
     edc:	e12fff1e 	bx	lr

00000ee0 <Dmx::SetDmxBreakTime(unsigned long)>:
     ee0:	e5900000 	ldr	r0, [r0]
     ee4:	e3003000 	movw	r3, #0
     ee8:	e3403000 	movt	r3, #0
     eec:	e351005c 	cmp	r1, #92	; 0x5c
     ef0:	21a02001 	movcs	r2, r1
     ef4:	33a0205c 	movcc	r2, #92	; 0x5c
     ef8:	e593c00c 	ldr	ip, [r3, #12]
     efc:	e3500000 	cmp	r0, #0
     f00:	e5931004 	ldr	r1, [r3, #4]
     f04:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     f08:	e3a0e02c 	mov	lr, #44	; 0x2c
     f0c:	e0211c9e 	mla	r1, lr, ip, r1
     f10:	e5832000 	str	r2, [r3]
     f14:	e0811002 	add	r1, r1, r2
     f18:	0a000004 	beq	f30 <Dmx::SetDmxBreakTime(unsigned long)+0x50>
     f1c:	e1500001 	cmp	r0, r1
     f20:	3081100e 	addcc	r1, r1, lr
     f24:	3a000002 	bcc	f34 <Dmx::SetDmxBreakTime(unsigned long)+0x54>
     f28:	e5830008 	str	r0, [r3, #8]
     f2c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
     f30:	e281102c 	add	r1, r1, #44	; 0x2c
     f34:	e30024b4 	movw	r2, #1204	; 0x4b4
     f38:	e1510002 	cmp	r1, r2
     f3c:	31a01002 	movcc	r1, r2
     f40:	e5831008 	str	r1, [r3, #8]
     f44:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000f48 <Dmx::GetDmxBreakTime()>:
     f48:	e3003000 	movw	r3, #0
     f4c:	e3403000 	movt	r3, #0
     f50:	e5930000 	ldr	r0, [r3]
     f54:	e12fff1e 	bx	lr

00000f58 <Dmx::SetDmxMabTime(unsigned long)>:
     f58:	e5900000 	ldr	r0, [r0]
     f5c:	e3003000 	movw	r3, #0
     f60:	e3403000 	movt	r3, #0
     f64:	e351000c 	cmp	r1, #12
     f68:	21a02001 	movcs	r2, r1
     f6c:	33a0200c 	movcc	r2, #12
     f70:	e593c00c 	ldr	ip, [r3, #12]
     f74:	e3500000 	cmp	r0, #0
     f78:	e5931000 	ldr	r1, [r3]
     f7c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     f80:	e3a0e02c 	mov	lr, #44	; 0x2c
     f84:	e0211c9e 	mla	r1, lr, ip, r1
     f88:	e5832004 	str	r2, [r3, #4]
     f8c:	e0811002 	add	r1, r1, r2
     f90:	0a000004 	beq	fa8 <Dmx::SetDmxMabTime(unsigned long)+0x50>
     f94:	e1500001 	cmp	r0, r1
     f98:	3081100e 	addcc	r1, r1, lr
     f9c:	3a000002 	bcc	fac <Dmx::SetDmxMabTime(unsigned long)+0x54>
     fa0:	e5830008 	str	r0, [r3, #8]
     fa4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
     fa8:	e281102c 	add	r1, r1, #44	; 0x2c
     fac:	e30024b4 	movw	r2, #1204	; 0x4b4
     fb0:	e1510002 	cmp	r1, r2
     fb4:	31a01002 	movcc	r1, r2
     fb8:	e5831008 	str	r1, [r3, #8]
     fbc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000fc0 <Dmx::GetDmxMabTime()>:
     fc0:	e3003000 	movw	r3, #0
     fc4:	e3403000 	movt	r3, #0
     fc8:	e5930004 	ldr	r0, [r3, #4]
     fcc:	e12fff1e 	bx	lr

00000fd0 <Dmx::SetDmxPeriodTime(unsigned long)>:
     fd0:	e5801000 	str	r1, [r0]
     fd4:	e3002000 	movw	r2, #0
     fd8:	e3402000 	movt	r2, #0
     fdc:	e3510000 	cmp	r1, #0
     fe0:	e8921008 	ldm	r2, {r3, ip}
     fe4:	e592000c 	ldr	r0, [r2, #12]
     fe8:	e083300c 	add	r3, r3, ip
     fec:	e3a0c02c 	mov	ip, #44	; 0x2c
     ff0:	e023309c 	mla	r3, ip, r0, r3
     ff4:	0a000004 	beq	100c <Dmx::SetDmxPeriodTime(unsigned long)+0x3c>
     ff8:	e1530001 	cmp	r3, r1
     ffc:	8083300c 	addhi	r3, r3, ip
    1000:	8a000002 	bhi	1010 <Dmx::SetDmxPeriodTime(unsigned long)+0x40>
    1004:	e5821008 	str	r1, [r2, #8]
    1008:	e12fff1e 	bx	lr
    100c:	e283302c 	add	r3, r3, #44	; 0x2c
    1010:	e30014b4 	movw	r1, #1204	; 0x4b4
    1014:	e1530001 	cmp	r3, r1
    1018:	31a03001 	movcc	r3, r1
    101c:	e5823008 	str	r3, [r2, #8]
    1020:	e12fff1e 	bx	lr

00001024 <Dmx::GetDmxPeriodTime()>:
    1024:	e3003000 	movw	r3, #0
    1028:	e3403000 	movt	r3, #0
    102c:	e5930008 	ldr	r0, [r3, #8]
    1030:	e12fff1e 	bx	lr

00001034 <Dmx::GetSendDataLength()>:
    1034:	e3003000 	movw	r3, #0
    1038:	e3403000 	movt	r3, #0
    103c:	e593000c 	ldr	r0, [r3, #12]
    1040:	e12fff1e 	bx	lr

00001044 <Dmx::GetTotalStatistics()>:
    1044:	e3000000 	movw	r0, #0
    1048:	e3400000 	movt	r0, #0
    104c:	e12fff1e 	bx	lr

00001050 <Dmx::GetDmxCurrentData(unsigned long)>:
    1050:	e3003000 	movw	r3, #0
    1054:	e3a00f85 	mov	r0, #532	; 0x214
    1058:	e3403000 	movt	r3, #0
    105c:	e283301c 	add	r3, r3, #28
    1060:	e5932460 	ldr	r2, [r3, #1120]	; 0x460
    1064:	e0203290 	mla	r0, r0, r2, r3
    1068:	e12fff1e 	bx	lr

0000106c <Dmx::GetDmxAvailable(unsigned long)>:
    106c:	f57ff05f 	dmb	sy
    1070:	e3003000 	movw	r3, #0
    1074:	e3403000 	movt	r3, #0
    1078:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
    107c:	e593247c 	ldr	r2, [r3, #1148]	; 0x47c
    1080:	e1510002 	cmp	r1, r2
    1084:	1283001c 	addne	r0, r3, #28
    1088:	13a0cf85 	movne	ip, #532	; 0x214
    108c:	1593147c 	ldrne	r1, [r3, #1148]	; 0x47c
    1090:	1593247c 	ldrne	r2, [r3, #1148]	; 0x47c
    1094:	1020019c 	mlane	r0, ip, r1, r0
    1098:	12822001 	addne	r2, r2, #1
    109c:	03a00000 	moveq	r0, #0
    10a0:	12022001 	andne	r2, r2, #1
    10a4:	1583247c 	strne	r2, [r3, #1148]	; 0x47c
    10a8:	e12fff1e 	bx	lr

000010ac <Dmx::GetDmxChanged(unsigned long)>:
    10ac:	f57ff05f 	dmb	sy
    10b0:	e3003000 	movw	r3, #0
    10b4:	e3403000 	movt	r3, #0
    10b8:	e5931450 	ldr	r1, [r3, #1104]	; 0x450
    10bc:	e593247c 	ldr	r2, [r3, #1148]	; 0x47c
    10c0:	e1510002 	cmp	r1, r2
    10c4:	0a000040 	beq	11cc <Dmx::GetDmxChanged(unsigned long)+0x120>
    10c8:	e593147c 	ldr	r1, [r3, #1148]	; 0x47c
    10cc:	e3a0cf85 	mov	ip, #532	; 0x214
    10d0:	e593247c 	ldr	r2, [r3, #1148]	; 0x47c
    10d4:	e283001c 	add	r0, r3, #28
    10d8:	e020019c 	mla	r0, ip, r1, r0
    10dc:	e2822001 	add	r2, r2, #1
    10e0:	e590c204 	ldr	ip, [r0, #516]	; 0x204
    10e4:	e2022001 	and	r2, r2, #1
    10e8:	e92d4030 	push	{r4, r5, lr}
    10ec:	e583247c 	str	r2, [r3, #1148]	; 0x47c
    10f0:	e5932484 	ldr	r2, [r3, #1156]	; 0x484
    10f4:	e15c0002 	cmp	ip, r2
    10f8:	0a000024 	beq	1190 <Dmx::GetDmxChanged(unsigned long)+0xe4>
    10fc:	e59fe0d0 	ldr	lr, [pc, #208]	; 11d4 <Dmx::GetDmxChanged(unsigned long)+0x128>
    1100:	e2801020 	add	r1, r0, #32
    1104:	e583c484 	str	ip, [r3, #1156]	; 0x484
    1108:	e3a04000 	mov	r4, #0
    110c:	e28e5c02 	add	r5, lr, #512	; 0x200
    1110:	e5113020 	ldr	r3, [r1, #-32]	; 0xffffffe0
    1114:	e2844008 	add	r4, r4, #8
    1118:	f5d1f044 	pld	[r1, #68]	; 0x44
    111c:	e1a02001 	mov	r2, r1
    1120:	e50e3020 	str	r3, [lr, #-32]	; 0xffffffe0
    1124:	e2811020 	add	r1, r1, #32
    1128:	e511303c 	ldr	r3, [r1, #-60]	; 0xffffffc4
    112c:	e264c081 	rsb	ip, r4, #129	; 0x81
    1130:	e50e301c 	str	r3, [lr, #-28]	; 0xffffffe4
    1134:	e5113038 	ldr	r3, [r1, #-56]	; 0xffffffc8
    1138:	e50e3018 	str	r3, [lr, #-24]	; 0xffffffe8
    113c:	e5113034 	ldr	r3, [r1, #-52]	; 0xffffffcc
    1140:	e50e3014 	str	r3, [lr, #-20]	; 0xffffffec
    1144:	e5113030 	ldr	r3, [r1, #-48]	; 0xffffffd0
    1148:	e50e3010 	str	r3, [lr, #-16]
    114c:	e511302c 	ldr	r3, [r1, #-44]	; 0xffffffd4
    1150:	e50e300c 	str	r3, [lr, #-12]
    1154:	e5113028 	ldr	r3, [r1, #-40]	; 0xffffffd8
    1158:	e50e3008 	str	r3, [lr, #-8]
    115c:	e5113024 	ldr	r3, [r1, #-36]	; 0xffffffdc
    1160:	e50e3004 	str	r3, [lr, #-4]
    1164:	e1a0300e 	mov	r3, lr
    1168:	e28ee020 	add	lr, lr, #32
    116c:	e15e0005 	cmp	lr, r5
    1170:	1affffe6 	bne	1110 <Dmx::GetDmxChanged(unsigned long)+0x64>
    1174:	e083c10c 	add	ip, r3, ip, lsl #2
    1178:	e2422004 	sub	r2, r2, #4
    117c:	e5b21004 	ldr	r1, [r2, #4]!
    1180:	e4831004 	str	r1, [r3], #4
    1184:	e153000c 	cmp	r3, ip
    1188:	1afffffb 	bne	117c <Dmx::GetDmxChanged(unsigned long)+0xd0>
    118c:	e8bd8030 	pop	{r4, r5, pc}
    1190:	e59f3040 	ldr	r3, [pc, #64]	; 11d8 <Dmx::GetDmxChanged(unsigned long)+0x12c>
    1194:	e2401004 	sub	r1, r0, #4
    1198:	e3a04000 	mov	r4, #0
    119c:	e283ef81 	add	lr, r3, #516	; 0x204
    11a0:	e5b3c004 	ldr	ip, [r3, #4]!
    11a4:	e5b12004 	ldr	r2, [r1, #4]!
    11a8:	e15c0002 	cmp	ip, r2
    11ac:	15832000 	strne	r2, [r3]
    11b0:	13a04001 	movne	r4, #1
    11b4:	e153000e 	cmp	r3, lr
    11b8:	1afffff8 	bne	11a0 <Dmx::GetDmxChanged(unsigned long)+0xf4>
    11bc:	e3540000 	cmp	r4, #0
    11c0:	18bd8030 	popne	{r4, r5, pc}
    11c4:	e3a00000 	mov	r0, #0
    11c8:	e8bd8030 	pop	{r4, r5, pc}
    11cc:	e3a00000 	mov	r0, #0
    11d0:	e12fff1e 	bx	lr
    11d4:	000004a8 	andeq	r0, r0, r8, lsr #9
    11d8:	00000484 	andeq	r0, r0, r4, lsl #9

000011dc <Dmx::SetSendDataLength(unsigned long)>:
    11dc:	e5900000 	ldr	r0, [r0]
    11e0:	e3002000 	movw	r2, #0
    11e4:	e3402000 	movt	r2, #0
    11e8:	e3500000 	cmp	r0, #0
    11ec:	e8921008 	ldm	r2, {r3, ip}
    11f0:	e582100c 	str	r1, [r2, #12]
    11f4:	e083300c 	add	r3, r3, ip
    11f8:	e3a0c02c 	mov	ip, #44	; 0x2c
    11fc:	e021319c 	mla	r1, ip, r1, r3
    1200:	0a000004 	beq	1218 <Dmx::SetSendDataLength(unsigned long)+0x3c>
    1204:	e1500001 	cmp	r0, r1
    1208:	3081100c 	addcc	r1, r1, ip
    120c:	3a000002 	bcc	121c <Dmx::SetSendDataLength(unsigned long)+0x40>
    1210:	e5820008 	str	r0, [r2, #8]
    1214:	e12fff1e 	bx	lr
    1218:	e281102c 	add	r1, r1, #44	; 0x2c
    121c:	e30034b4 	movw	r3, #1204	; 0x4b4
    1220:	e1510003 	cmp	r1, r3
    1224:	31a01003 	movcc	r1, r3
    1228:	e5821008 	str	r1, [r2, #8]
    122c:	e12fff1e 	bx	lr

00001230 <Dmx::SetDmxSlots(unsigned short)>:
    1230:	e5900000 	ldr	r0, [r0]
    1234:	e3003000 	movw	r3, #0
    1238:	e3403000 	movt	r3, #0
    123c:	e2812001 	add	r2, r1, #1
    1240:	e3500000 	cmp	r0, #0
    1244:	e8931002 	ldm	r3, {r1, ip}
    1248:	e583200c 	str	r2, [r3, #12]
    124c:	e081100c 	add	r1, r1, ip
    1250:	e3a0c02c 	mov	ip, #44	; 0x2c
    1254:	e021129c 	mla	r1, ip, r2, r1
    1258:	0a000004 	beq	1270 <Dmx::SetDmxSlots(unsigned short)+0x40>
    125c:	e1500001 	cmp	r0, r1
    1260:	3081100c 	addcc	r1, r1, ip
    1264:	3a000002 	bcc	1274 <Dmx::SetDmxSlots(unsigned short)+0x44>
    1268:	e5830008 	str	r0, [r3, #8]
    126c:	e12fff1e 	bx	lr
    1270:	e281102c 	add	r1, r1, #44	; 0x2c
    1274:	e30024b4 	movw	r2, #1204	; 0x4b4
    1278:	e1510002 	cmp	r1, r2
    127c:	31a01002 	movcc	r1, r2
    1280:	e5831008 	str	r1, [r3, #8]
    1284:	e12fff1e 	bx	lr

00001288 <Dmx::GetDmxSlots()>:
    1288:	e3003000 	movw	r3, #0
    128c:	e3403000 	movt	r3, #0
    1290:	e593000c 	ldr	r0, [r3, #12]
    1294:	e2400001 	sub	r0, r0, #1
    1298:	e6ff0070 	uxth	r0, r0
    129c:	e12fff1e 	bx	lr

000012a0 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)>:
    12a0:	e3001000 	movw	r1, #0
    12a4:	e3401000 	movt	r1, #0
    12a8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    12ac:	ea000002 	b	12bc <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x1c>
    12b0:	e5d1c010 	ldrb	ip, [r1, #16]
    12b4:	e35c000b 	cmp	ip, #11
    12b8:	0a000003 	beq	12cc <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x2c>
    12bc:	f57ff05f 	dmb	sy
    12c0:	e5d1c010 	ldrb	ip, [r1, #16]
    12c4:	e35c0000 	cmp	ip, #0
    12c8:	1afffff8 	bne	12b0 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x10>
    12cc:	f5d2f000 	pld	[r2]
    12d0:	e3530000 	cmp	r3, #0
    12d4:	0a000005 	beq	12f0 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x50>
    12d8:	e59f1028 	ldr	r1, [pc, #40]	; 1308 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x68>
    12dc:	e082e003 	add	lr, r2, r3
    12e0:	e4d2c001 	ldrb	ip, [r2], #1
    12e4:	e152000e 	cmp	r2, lr
    12e8:	e4c1c001 	strb	ip, [r1], #1
    12ec:	1afffffb 	bne	12e0 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x40>
    12f0:	e5901000 	ldr	r1, [r0]
    12f4:	e3002000 	movw	r2, #0
    12f8:	e3402000 	movt	r2, #0
    12fc:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    1300:	e582300c 	str	r3, [r2, #12]
    1304:	eafffffe 	b	fd0 <Dmx::SetDmxPeriodTime(unsigned long)>
    1308:	0000001c 	andeq	r0, r0, ip, lsl r0

0000130c <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)>:
    130c:	e3001000 	movw	r1, #0
    1310:	e3401000 	movt	r1, #0
    1314:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    1318:	ea000002 	b	1328 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x1c>
    131c:	e5d1c010 	ldrb	ip, [r1, #16]
    1320:	e35c000b 	cmp	ip, #11
    1324:	0a000003 	beq	1338 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x2c>
    1328:	f57ff05f 	dmb	sy
    132c:	e5d1c010 	ldrb	ip, [r1, #16]
    1330:	e35c0000 	cmp	ip, #0
    1334:	1afffff8 	bne	131c <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x10>
    1338:	f5d2f000 	pld	[r2]
    133c:	e3530000 	cmp	r3, #0
    1340:	e3a0c000 	mov	ip, #0
    1344:	e5c1c01c 	strb	ip, [r1, #28]
    1348:	0a000005 	beq	1364 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x58>
    134c:	e59f102c 	ldr	r1, [pc, #44]	; 1380 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x74>
    1350:	e082e003 	add	lr, r2, r3
    1354:	e4d2c001 	ldrb	ip, [r2], #1
    1358:	e152000e 	cmp	r2, lr
    135c:	e5e1c001 	strb	ip, [r1, #1]!
    1360:	1afffffb 	bne	1354 <Dmx::SetSendDataWithoutSC(unsigned long, unsigned char const*, unsigned long)+0x48>
    1364:	e5901000 	ldr	r1, [r0]
    1368:	e3002000 	movw	r2, #0
    136c:	e3402000 	movt	r2, #0
    1370:	e2833001 	add	r3, r3, #1
    1374:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    1378:	e582300c 	str	r3, [r2, #12]
    137c:	eafffffe 	b	fd0 <Dmx::SetDmxPeriodTime(unsigned long)>
    1380:	0000001c 	andeq	r0, r0, ip, lsl r0

00001384 <Dmx::GetUpdatesPerSecond(unsigned long)>:
    1384:	f57ff05f 	dmb	sy
    1388:	e3003000 	movw	r3, #0
    138c:	e3403000 	movt	r3, #0
    1390:	e593000c 	ldr	r0, [r3, #12]
    1394:	e12fff1e 	bx	lr

00001398 <Dmx::ClearData(unsigned long)>:
    1398:	e59f21bc 	ldr	r2, [pc, #444]	; 155c <Dmx::ClearData(unsigned long)+0x1c4>
    139c:	e3a00000 	mov	r0, #0
    13a0:	e92d4010 	push	{r4, lr}
    13a4:	e2821020 	add	r1, r2, #32
    13a8:	e2824e22 	add	r4, r2, #544	; 0x220
    13ac:	e282ef81 	add	lr, r2, #516	; 0x204
    13b0:	e5410020 	strb	r0, [r1, #-32]	; 0xffffffe0
    13b4:	e1a03001 	mov	r3, r1
    13b8:	e541001f 	strb	r0, [r1, #-31]	; 0xffffffe1
    13bc:	e541001e 	strb	r0, [r1, #-30]	; 0xffffffe2
    13c0:	e541001d 	strb	r0, [r1, #-29]	; 0xffffffe3
    13c4:	e541001c 	strb	r0, [r1, #-28]	; 0xffffffe4
    13c8:	e541001b 	strb	r0, [r1, #-27]	; 0xffffffe5
    13cc:	e541001a 	strb	r0, [r1, #-26]	; 0xffffffe6
    13d0:	e5410019 	strb	r0, [r1, #-25]	; 0xffffffe7
    13d4:	e5410018 	strb	r0, [r1, #-24]	; 0xffffffe8
    13d8:	e5410017 	strb	r0, [r1, #-23]	; 0xffffffe9
    13dc:	e5410016 	strb	r0, [r1, #-22]	; 0xffffffea
    13e0:	e5410015 	strb	r0, [r1, #-21]	; 0xffffffeb
    13e4:	e5410014 	strb	r0, [r1, #-20]	; 0xffffffec
    13e8:	e5410013 	strb	r0, [r1, #-19]	; 0xffffffed
    13ec:	e5410012 	strb	r0, [r1, #-18]	; 0xffffffee
    13f0:	e5410011 	strb	r0, [r1, #-17]	; 0xffffffef
    13f4:	e5410010 	strb	r0, [r1, #-16]
    13f8:	e541000f 	strb	r0, [r1, #-15]
    13fc:	e541000e 	strb	r0, [r1, #-14]
    1400:	e541000d 	strb	r0, [r1, #-13]
    1404:	e541000c 	strb	r0, [r1, #-12]
    1408:	e541000b 	strb	r0, [r1, #-11]
    140c:	e541000a 	strb	r0, [r1, #-10]
    1410:	e5410009 	strb	r0, [r1, #-9]
    1414:	e5410008 	strb	r0, [r1, #-8]
    1418:	e5410007 	strb	r0, [r1, #-7]
    141c:	e5410006 	strb	r0, [r1, #-6]
    1420:	e5410005 	strb	r0, [r1, #-5]
    1424:	e5410004 	strb	r0, [r1, #-4]
    1428:	e5410003 	strb	r0, [r1, #-3]
    142c:	e5410002 	strb	r0, [r1, #-2]
    1430:	f5d1f002 	pld	[r1, #2]
    1434:	e04ec001 	sub	ip, lr, r1
    1438:	e2811020 	add	r1, r1, #32
    143c:	e5410021 	strb	r0, [r1, #-33]	; 0xffffffdf
    1440:	e1540001 	cmp	r4, r1
    1444:	1affffd9 	bne	13b0 <Dmx::ClearData(unsigned long)+0x18>
    1448:	e083100c 	add	r1, r3, ip
    144c:	e3a00000 	mov	r0, #0
    1450:	e4c30001 	strb	r0, [r3], #1
    1454:	e1510003 	cmp	r1, r3
    1458:	1afffffc 	bne	1450 <Dmx::ClearData(unsigned long)+0xb8>
    145c:	e59f30fc 	ldr	r3, [pc, #252]	; 1560 <Dmx::ClearData(unsigned long)+0x1c8>
    1460:	e3a0c000 	mov	ip, #0
    1464:	e2431e22 	sub	r1, r3, #544	; 0x220
    1468:	e2830010 	add	r0, r3, #16
    146c:	e4c3c001 	strb	ip, [r3], #1
    1470:	e1530000 	cmp	r3, r0
    1474:	1afffffc 	bne	146c <Dmx::ClearData(unsigned long)+0xd4>
    1478:	e59f40e4 	ldr	r4, [pc, #228]	; 1564 <Dmx::ClearData(unsigned long)+0x1cc>
    147c:	e282ee43 	add	lr, r2, #1072	; 0x430
    1480:	e2811e25 	add	r1, r1, #592	; 0x250
    1484:	e28ee004 	add	lr, lr, #4
    1488:	e3a00000 	mov	r0, #0
    148c:	e5410020 	strb	r0, [r1, #-32]	; 0xffffffe0
    1490:	e1a03001 	mov	r3, r1
    1494:	e541001f 	strb	r0, [r1, #-31]	; 0xffffffe1
    1498:	e541001e 	strb	r0, [r1, #-30]	; 0xffffffe2
    149c:	e541001d 	strb	r0, [r1, #-29]	; 0xffffffe3
    14a0:	e541001c 	strb	r0, [r1, #-28]	; 0xffffffe4
    14a4:	e541001b 	strb	r0, [r1, #-27]	; 0xffffffe5
    14a8:	e541001a 	strb	r0, [r1, #-26]	; 0xffffffe6
    14ac:	e5410019 	strb	r0, [r1, #-25]	; 0xffffffe7
    14b0:	e5410018 	strb	r0, [r1, #-24]	; 0xffffffe8
    14b4:	e5410017 	strb	r0, [r1, #-23]	; 0xffffffe9
    14b8:	e5410016 	strb	r0, [r1, #-22]	; 0xffffffea
    14bc:	e5410015 	strb	r0, [r1, #-21]	; 0xffffffeb
    14c0:	e5410014 	strb	r0, [r1, #-20]	; 0xffffffec
    14c4:	e5410013 	strb	r0, [r1, #-19]	; 0xffffffed
    14c8:	e5410012 	strb	r0, [r1, #-18]	; 0xffffffee
    14cc:	e5410011 	strb	r0, [r1, #-17]	; 0xffffffef
    14d0:	e5410010 	strb	r0, [r1, #-16]
    14d4:	e541000f 	strb	r0, [r1, #-15]
    14d8:	e541000e 	strb	r0, [r1, #-14]
    14dc:	e541000d 	strb	r0, [r1, #-13]
    14e0:	e541000c 	strb	r0, [r1, #-12]
    14e4:	e541000b 	strb	r0, [r1, #-11]
    14e8:	e541000a 	strb	r0, [r1, #-10]
    14ec:	e5410009 	strb	r0, [r1, #-9]
    14f0:	e5410008 	strb	r0, [r1, #-8]
    14f4:	e5410007 	strb	r0, [r1, #-7]
    14f8:	e5410006 	strb	r0, [r1, #-6]
    14fc:	e5410005 	strb	r0, [r1, #-5]
    1500:	e5410004 	strb	r0, [r1, #-4]
    1504:	e5410003 	strb	r0, [r1, #-3]
    1508:	e5410002 	strb	r0, [r1, #-2]
    150c:	f5d1f002 	pld	[r1, #2]
    1510:	e044c001 	sub	ip, r4, r1
    1514:	e2811020 	add	r1, r1, #32
    1518:	e5410021 	strb	r0, [r1, #-33]	; 0xffffffdf
    151c:	e15e0001 	cmp	lr, r1
    1520:	1affffd9 	bne	148c <Dmx::ClearData(unsigned long)+0xf4>
    1524:	e083100c 	add	r1, r3, ip
    1528:	e3a00000 	mov	r0, #0
    152c:	e4c30001 	strb	r0, [r3], #1
    1530:	e1530001 	cmp	r3, r1
    1534:	1afffffc 	bne	152c <Dmx::ClearData(unsigned long)+0x194>
    1538:	e2823e41 	add	r3, r2, #1040	; 0x410
    153c:	e2822e42 	add	r2, r2, #1056	; 0x420
    1540:	e2833008 	add	r3, r3, #8
    1544:	e3a01000 	mov	r1, #0
    1548:	e2822008 	add	r2, r2, #8
    154c:	e4c31001 	strb	r1, [r3], #1
    1550:	e1530002 	cmp	r3, r2
    1554:	1afffffc 	bne	154c <Dmx::ClearData(unsigned long)+0x1b4>
    1558:	e8bd8010 	pop	{r4, pc}
    155c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1560:	00000220 	andeq	r0, r0, r0, lsr #4
    1564:	00000434 	andeq	r0, r0, r4, lsr r4

00001568 <Dmx::RdmGetDateReceivedEnd()>:
    1568:	e3003000 	movw	r3, #0
    156c:	e3403000 	movt	r3, #0
    1570:	e593046c 	ldr	r0, [r3, #1132]	; 0x46c
    1574:	e12fff1e 	bx	lr

00001578 <Dmx::RdmReceive(unsigned long)>:
    1578:	f57ff05f 	dmb	sy
    157c:	e3003000 	movw	r3, #0
    1580:	e3403000 	movt	r3, #0
    1584:	e5931458 	ldr	r1, [r3, #1112]	; 0x458
    1588:	e5932480 	ldr	r2, [r3, #1152]	; 0x480
    158c:	e1510002 	cmp	r1, r2
    1590:	13000000 	movwne	r0, #0
    1594:	15931480 	ldrne	r1, [r3, #1152]	; 0x480
    1598:	15932480 	ldrne	r2, [r3, #1152]	; 0x480
    159c:	13400000 	movtne	r0, #0
    15a0:	10800481 	addne	r0, r0, r1, lsl #9
    15a4:	12822001 	addne	r2, r2, #1
    15a8:	1202200f 	andne	r2, r2, #15
    15ac:	03a00000 	moveq	r0, #0
    15b0:	15832480 	strne	r2, [r3, #1152]	; 0x480
    15b4:	e12fff1e 	bx	lr

000015b8 <Dmx::RdmReceiveTimeOut(unsigned long, unsigned long)>:
    15b8:	e3a01a03 	mov	r1, #12288	; 0x3000
    15bc:	e3003000 	movw	r3, #0
    15c0:	e3431f00 	movt	r1, #16128	; 0x3f00
    15c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    15c8:	e3403000 	movt	r3, #0
    15cc:	e591e004 	ldr	lr, [r1, #4]
    15d0:	f57ff05f 	dmb	sy
    15d4:	e593c458 	ldr	ip, [r3, #1112]	; 0x458
    15d8:	e5930480 	ldr	r0, [r3, #1152]	; 0x480
    15dc:	e15c0000 	cmp	ip, r0
    15e0:	0a000008 	beq	1608 <Dmx::RdmReceiveTimeOut(unsigned long, unsigned long)+0x50>
    15e4:	e5931480 	ldr	r1, [r3, #1152]	; 0x480
    15e8:	e3000000 	movw	r0, #0
    15ec:	e5932480 	ldr	r2, [r3, #1152]	; 0x480
    15f0:	e3400000 	movt	r0, #0
    15f4:	e0800481 	add	r0, r0, r1, lsl #9
    15f8:	e2822001 	add	r2, r2, #1
    15fc:	e202200f 	and	r2, r2, #15
    1600:	e5832480 	str	r2, [r3, #1152]	; 0x480
    1604:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    1608:	e5910004 	ldr	r0, [r1, #4]
    160c:	e040000e 	sub	r0, r0, lr
    1610:	e1500002 	cmp	r0, r2
    1614:	3affffed 	bcc	15d0 <Dmx::RdmReceiveTimeOut(unsigned long, unsigned long)+0x18>
    1618:	e3a00000 	mov	r0, #0
    161c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00001620 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>:
    1620:	e92d4070 	push	{r4, r5, r6, lr}
    1624:	e3a04a01 	mov	r4, #4096	; 0x1000
    1628:	e3434f20 	movt	r4, #16160	; 0x3f20
    162c:	e3a0c069 	mov	ip, #105	; 0x69
    1630:	e3a000b0 	mov	r0, #176	; 0xb0
    1634:	e1a06003 	mov	r6, r3
    1638:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
    163c:	e1a05002 	mov	r5, r2
    1640:	e3c11010 	bic	r1, r1, #16
    1644:	e584102c 	str	r1, [r4, #44]	; 0x2c
    1648:	e584c02c 	str	ip, [r4, #44]	; 0x2c
    164c:	ebfffffe 	bl	0 <udelay>
    1650:	e3a03068 	mov	r3, #104	; 0x68
    1654:	e3a0000c 	mov	r0, #12
    1658:	e584302c 	str	r3, [r4, #44]	; 0x2c
    165c:	ebfffffe 	bl	0 <udelay>
    1660:	e3560000 	cmp	r6, #0
    1664:	0a000009 	beq	1690 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x70>
    1668:	e0851006 	add	r1, r5, r6
    166c:	e2452001 	sub	r2, r5, #1
    1670:	e2411001 	sub	r1, r1, #1
    1674:	e5943018 	ldr	r3, [r4, #24]
    1678:	e3130020 	tst	r3, #32
    167c:	1afffffc 	bne	1674 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x54>
    1680:	e5f23001 	ldrb	r3, [r2, #1]!
    1684:	e1520001 	cmp	r2, r1
    1688:	e5843000 	str	r3, [r4]
    168c:	1afffff8 	bne	1674 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x54>
    1690:	e3a02a01 	mov	r2, #4096	; 0x1000
    1694:	e3432f20 	movt	r2, #16160	; 0x3f20
    1698:	e5923018 	ldr	r3, [r2, #24]
    169c:	e3130008 	tst	r3, #8
    16a0:	1afffffc 	bne	1698 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x78>
    16a4:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section .data:

00000000 <s_nDmxTransmitBreakTime>:
   0:	0000005c 	andeq	r0, r0, ip, asr r0

00000004 <s_nDmxTransmitMabTime>:
   4:	0000000c 	andeq	r0, r0, ip

00000008 <s_nDmxTransmitPeriod>:
   8:	000061a8 	andeq	r6, r0, r8, lsr #3

0000000c <s_nDmxSendDataLength>:
   c:	00000201 	andeq	r0, r0, r1, lsl #4

00000010 <s_nPortDirection>:
  10:	00000001 	andeq	r0, r0, r1

00000014 <s_IsStopped>:
  14:	Address 0x0000000000000014 is out of bounds.


Disassembly of section .bss:

00000000 <sv_TotalStatistics>:
	...

00000008 <sv_nDmxPacketsPrevious>:
       8:	00000000 	andeq	r0, r0, r0

0000000c <sv_nDmxUpdatesPerSecond>:
       c:	00000000 	andeq	r0, r0, r0

00000010 <sv_DmxTransmitState>:
      10:	00000000 	andeq	r0, r0, r0

00000014 <sv_DmxTransmitBreakMicros>:
      14:	00000000 	andeq	r0, r0, r0

00000018 <sv_DmxTransmitCurrentSlot>:
      18:	00000000 	andeq	r0, r0, r0

0000001c <s_DmxData>:
	...

00000444 <sv_DmxReceiveState>:
     444:	00000000 	andeq	r0, r0, r0

00000448 <sv_nFiqMicrosCurrent>:
     448:	00000000 	andeq	r0, r0, r0

0000044c <sv_nDmxDataIndex>:
     44c:	00000000 	andeq	r0, r0, r0

00000450 <sv_nDmxDataBufferIndexHead>:
     450:	00000000 	andeq	r0, r0, r0

00000454 <sv_DmxBreakToBreakLatest>:
     454:	00000000 	andeq	r0, r0, r0

00000458 <sv_nRdmDataBufferIndexHead>:
     458:	00000000 	andeq	r0, r0, r0

0000045c <sv_isDmxPreviousBreak>:
     45c:	00000000 	andeq	r0, r0, r0

00000460 <sv_DmxBreakToBreakPrevious>:
     460:	00000000 	andeq	r0, r0, r0

00000464 <sv_nRdmChecksum>:
     464:	00000000 	andeq	r0, r0, r0

00000468 <sv_nFiqMicrosPrevious>:
     468:	00000000 	andeq	r0, r0, r0

0000046c <sv_RdmDataReceiveEnd>:
     46c:	00000000 	andeq	r0, r0, r0

00000470 <sv_RdmDiscIndex>:
     470:	00000000 	andeq	r0, r0, r0

00000474 <sv_doDmxTransmitAlways>:
     474:	00000000 	andeq	r0, r0, r0

00000478 <Dmx::s_pThis>:
     478:	00000000 	andeq	r0, r0, r0

0000047c <sv_nDmxDataBufferIndexTail>:
     47c:	00000000 	andeq	r0, r0, r0

00000480 <sv_nRdmDataBufferIndexTail>:
     480:	00000000 	andeq	r0, r0, r0

00000484 <sv_DmxSlotsInPacketPrevious>:
     484:	00000000 	andeq	r0, r0, r0

00000488 <s_DmxDataPrevious>:
	...

0000068c <s_RdmData>:
	...

Disassembly of section .rodata.str1.4:

00000000 <.LC0>:
   0:	7074754f 	rsbsvc	r7, r4, pc, asr #10
   4:	70207475 	eorvc	r7, r0, r5, ror r4
   8:	6f697265 	svcvs	0x00697265
   c:	6f742064 	svcvs	0x00742064
  10:	6873206f 	ldmdavs	r3!, {r0, r1, r2, r3, r5, r6, sp}^
  14:	2074726f 	rsbscs	r7, r4, pc, ror #4
  18:	656c6428 	strbvs	r6, [ip, #-1064]!	; 0xfffffbd8
  1c:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
  20:	6c73202c 	ldclvs	0, cr2, [r3], #-176	; 0xffffff50
  24:	2520746f 	strcs	r7, [r0, #-1135]!	; 0xfffffb91
  28:	000a2964 	andeq	r2, sl, r4, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


rdm.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)>:
   0:	e3520000 	cmp	r2, #0
   4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   8:	03004000 	movweq	r4, #0
   c:	03404000 	movteq	r4, #0
  10:	0a000008 	beq	38 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x38>
  14:	e3a00a03 	mov	r0, #12288	; 0x3000
  18:	e3004000 	movw	r4, #0
  1c:	e3430f00 	movt	r0, #16128	; 0x3f00
  20:	e3404000 	movt	r4, #0
  24:	e590c004 	ldr	ip, [r0, #4]
  28:	e5943000 	ldr	r3, [r4]
  2c:	e04ce003 	sub	lr, ip, r3
  30:	e152000e 	cmp	r2, lr
  34:	8a000072 	bhi	204 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x204>
  38:	e5d42004 	ldrb	r2, [r4, #4]
  3c:	e3a03a03 	mov	r3, #12288	; 0x3000
  40:	e3433f00 	movt	r3, #16128	; 0x3f00
  44:	e5933004 	ldr	r3, [r3, #4]
  48:	e5c1200f 	strb	r2, [r1, #15]
  4c:	e5843000 	str	r3, [r4]
  50:	e5d1e002 	ldrb	lr, [r1, #2]
  54:	e35e0000 	cmp	lr, #0
  58:	0a000070 	beq	220 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x220>
  5c:	e35e0020 	cmp	lr, #32
  60:	e24e601f 	sub	r6, lr, #31
  64:	9a000072 	bls	234 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x234>
  68:	e30f5ffe 	movw	r5, #65534	; 0xfffe
  6c:	e30f2fdf 	movw	r2, #65503	; 0xffdf
  70:	e34f5fff 	movt	r5, #65535	; 0xffff
  74:	e2810022 	add	r0, r1, #34	; 0x22
  78:	e34f2fff 	movt	r2, #65535	; 0xffff
  7c:	e3a0c000 	mov	ip, #0
  80:	e0455001 	sub	r5, r5, r1
  84:	e0422001 	sub	r2, r2, r1
  88:	e5503021 	ldrb	r3, [r0, #-33]	; 0xffffffdf
  8c:	e5507022 	ldrb	r7, [r0, #-34]	; 0xffffffde
  90:	f5d0f000 	pld	[r0]
  94:	e0877003 	add	r7, r7, r3
  98:	e5503020 	ldrb	r3, [r0, #-32]	; 0xffffffe0
  9c:	e0837007 	add	r7, r3, r7
  a0:	e550301f 	ldrb	r3, [r0, #-31]	; 0xffffffe1
  a4:	e0833007 	add	r3, r3, r7
  a8:	e550701e 	ldrb	r7, [r0, #-30]	; 0xffffffe2
  ac:	e0873003 	add	r3, r7, r3
  b0:	e550701d 	ldrb	r7, [r0, #-29]	; 0xffffffe3
  b4:	e0877003 	add	r7, r7, r3
  b8:	e550301c 	ldrb	r3, [r0, #-28]	; 0xffffffe4
  bc:	e0837007 	add	r7, r3, r7
  c0:	e550301b 	ldrb	r3, [r0, #-27]	; 0xffffffe5
  c4:	e0833007 	add	r3, r3, r7
  c8:	e550701a 	ldrb	r7, [r0, #-26]	; 0xffffffe6
  cc:	e0873003 	add	r3, r7, r3
  d0:	e5507019 	ldrb	r7, [r0, #-25]	; 0xffffffe7
  d4:	e0877003 	add	r7, r7, r3
  d8:	e5503018 	ldrb	r3, [r0, #-24]	; 0xffffffe8
  dc:	e0837007 	add	r7, r3, r7
  e0:	e5503017 	ldrb	r3, [r0, #-23]	; 0xffffffe9
  e4:	e0833007 	add	r3, r3, r7
  e8:	e5507016 	ldrb	r7, [r0, #-22]	; 0xffffffea
  ec:	e0873003 	add	r3, r7, r3
  f0:	e5507015 	ldrb	r7, [r0, #-21]	; 0xffffffeb
  f4:	e0877003 	add	r7, r7, r3
  f8:	e5503014 	ldrb	r3, [r0, #-20]	; 0xffffffec
  fc:	e0837007 	add	r7, r3, r7
 100:	e5503013 	ldrb	r3, [r0, #-19]	; 0xffffffed
 104:	e0833007 	add	r3, r3, r7
 108:	e5507012 	ldrb	r7, [r0, #-18]	; 0xffffffee
 10c:	e0873003 	add	r3, r7, r3
 110:	e5507011 	ldrb	r7, [r0, #-17]	; 0xffffffef
 114:	e0877003 	add	r7, r7, r3
 118:	e5503010 	ldrb	r3, [r0, #-16]
 11c:	e0837007 	add	r7, r3, r7
 120:	e550300f 	ldrb	r3, [r0, #-15]
 124:	e0833007 	add	r3, r3, r7
 128:	e550700e 	ldrb	r7, [r0, #-14]
 12c:	e0873003 	add	r3, r7, r3
 130:	e550700d 	ldrb	r7, [r0, #-13]
 134:	e0877003 	add	r7, r7, r3
 138:	e550300c 	ldrb	r3, [r0, #-12]
 13c:	e0837007 	add	r7, r3, r7
 140:	e550300b 	ldrb	r3, [r0, #-11]
 144:	e0833007 	add	r3, r3, r7
 148:	e550700a 	ldrb	r7, [r0, #-10]
 14c:	e0873003 	add	r3, r7, r3
 150:	e5507009 	ldrb	r7, [r0, #-9]
 154:	e0877003 	add	r7, r7, r3
 158:	e5503008 	ldrb	r3, [r0, #-8]
 15c:	e0837007 	add	r7, r3, r7
 160:	e5503007 	ldrb	r3, [r0, #-7]
 164:	e0833007 	add	r3, r3, r7
 168:	e5507006 	ldrb	r7, [r0, #-6]
 16c:	e0873003 	add	r3, r7, r3
 170:	e5507005 	ldrb	r7, [r0, #-5]
 174:	e0877003 	add	r7, r7, r3
 178:	e5503004 	ldrb	r3, [r0, #-4]
 17c:	e0837007 	add	r7, r3, r7
 180:	e5503003 	ldrb	r3, [r0, #-3]
 184:	e0833007 	add	r3, r3, r7
 188:	e08cc003 	add	ip, ip, r3
 18c:	e0853000 	add	r3, r5, r0
 190:	e2800020 	add	r0, r0, #32
 194:	e0827000 	add	r7, r2, r0
 198:	e6ffc07c 	uxth	ip, ip
 19c:	e1560007 	cmp	r6, r7
 1a0:	8affffb8 	bhi	88 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x88>
 1a4:	e2433001 	sub	r3, r3, #1
 1a8:	e0810003 	add	r0, r1, r3
 1ac:	e1a03000 	mov	r3, r0
 1b0:	e5f02001 	ldrb	r2, [r0, #1]!
 1b4:	e2833002 	add	r3, r3, #2
 1b8:	e0433001 	sub	r3, r3, r1
 1bc:	e15e0003 	cmp	lr, r3
 1c0:	e08c2002 	add	r2, ip, r2
 1c4:	e6ffc072 	uxth	ip, r2
 1c8:	8afffff7 	bhi	1ac <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x1ac>
 1cc:	e081300e 	add	r3, r1, lr
 1d0:	e6ef207c 	uxtb	r2, ip
 1d4:	e1a0042c 	lsr	r0, ip, #8
 1d8:	e28ee001 	add	lr, lr, #1
 1dc:	e5c30000 	strb	r0, [r3]
 1e0:	e3a00000 	mov	r0, #0
 1e4:	e7c1200e 	strb	r2, [r1, lr]
 1e8:	e5d12002 	ldrb	r2, [r1, #2]
 1ec:	e2822002 	add	r2, r2, #2
 1f0:	ebfffffe 	bl	0 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>
 1f4:	e5d43004 	ldrb	r3, [r4, #4]
 1f8:	e2833001 	add	r3, r3, #1
 1fc:	e5c43004 	strb	r3, [r4, #4]
 200:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 204:	e043300c 	sub	r3, r3, ip
 208:	e0832002 	add	r2, r3, r2
 20c:	e5903004 	ldr	r3, [r0, #4]
 210:	e043300c 	sub	r3, r3, ip
 214:	e1530002 	cmp	r3, r2
 218:	3afffffb 	bcc	20c <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x20c>
 21c:	eaffff85 	b	38 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x38>
 220:	e1a0200e 	mov	r2, lr
 224:	e1a03001 	mov	r3, r1
 228:	e3a0e001 	mov	lr, #1
 22c:	e1a00002 	mov	r0, r2
 230:	eaffffe9 	b	1dc <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x1dc>
 234:	e3a0c000 	mov	ip, #0
 238:	e1a0300c 	mov	r3, ip
 23c:	eaffffd8 	b	1a4 <Rdm::Send(unsigned long, TRdmMessage*, unsigned long)+0x1a4>

00000240 <Rdm::SendRawRespondMessage(unsigned long, unsigned char const*, unsigned long)>:
 240:	e3003000 	movw	r3, #0
 244:	e3a0ca03 	mov	ip, #12288	; 0x3000
 248:	e3403000 	movt	r3, #0
 24c:	e343cf00 	movt	ip, #16128	; 0x3f00
 250:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 254:	e1a04000 	mov	r4, r0
 258:	e59c7004 	ldr	r7, [ip, #4]
 25c:	e1a05001 	mov	r5, r1
 260:	e5930000 	ldr	r0, [r3]
 264:	e1a06002 	mov	r6, r2
 268:	ebfffffe 	bl	0 <Dmx::RdmGetDateReceivedEnd()>
 26c:	e0473000 	sub	r3, r7, r0
 270:	e35300c7 	cmp	r3, #199	; 0xc7
 274:	9a000004 	bls	28c <Rdm::SendRawRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x4c>
 278:	e1a02006 	mov	r2, r6
 27c:	e1a01005 	mov	r1, r5
 280:	e1a00004 	mov	r0, r4
 284:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 288:	eafffffe 	b	0 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>
 28c:	e26770c8 	rsb	r7, r7, #200	; 0xc8
 290:	e0870000 	add	r0, r7, r0
 294:	ebfffffe 	bl	0 <udelay>
 298:	eafffff6 	b	278 <Rdm::SendRawRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x38>

0000029c <Rdm::SendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)>:
 29c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 2a0:	e3a03a03 	mov	r3, #12288	; 0x3000
 2a4:	e3433f00 	movt	r3, #16128	; 0x3f00
 2a8:	e3005000 	movw	r5, #0
 2ac:	e3405000 	movt	r5, #0
 2b0:	e1a06000 	mov	r6, r0
 2b4:	e5938004 	ldr	r8, [r3, #4]
 2b8:	e1a04001 	mov	r4, r1
 2bc:	e5950000 	ldr	r0, [r5]
 2c0:	e1a07002 	mov	r7, r2
 2c4:	ebfffffe 	bl	0 <Dmx::RdmGetDateReceivedEnd()>
 2c8:	e0483000 	sub	r3, r8, r0
 2cc:	e35300c7 	cmp	r3, #199	; 0xc7
 2d0:	9a000024 	bls	368 <Rdm::SendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0xcc>
 2d4:	e5950000 	ldr	r0, [r5]
 2d8:	e3a03000 	mov	r3, #0
 2dc:	e1a02003 	mov	r2, r3
 2e0:	e1a01006 	mov	r1, r6
 2e4:	ebfffffe 	bl	0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 2e8:	e3a0ca01 	mov	ip, #4096	; 0x1000
 2ec:	e3570000 	cmp	r7, #0
 2f0:	e343cf20 	movt	ip, #16160	; 0x3f20
 2f4:	e59c302c 	ldr	r3, [ip, #44]	; 0x2c
 2f8:	e3c33010 	bic	r3, r3, #16
 2fc:	e58c302c 	str	r3, [ip, #44]	; 0x2c
 300:	e3a03068 	mov	r3, #104	; 0x68
 304:	e58c302c 	str	r3, [ip, #44]	; 0x2c
 308:	0a000009 	beq	334 <Rdm::SendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x98>
 30c:	e0841007 	add	r1, r4, r7
 310:	e2442001 	sub	r2, r4, #1
 314:	e2411001 	sub	r1, r1, #1
 318:	e59c3018 	ldr	r3, [ip, #24]
 31c:	e3130020 	tst	r3, #32
 320:	1afffffc 	bne	318 <Rdm::SendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x7c>
 324:	e5f23001 	ldrb	r3, [r2, #1]!
 328:	e1520001 	cmp	r2, r1
 32c:	e58c3000 	str	r3, [ip]
 330:	1afffff8 	bne	318 <Rdm::SendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x7c>
 334:	e3a02a01 	mov	r2, #4096	; 0x1000
 338:	e3432f20 	movt	r2, #16160	; 0x3f20
 33c:	e5923018 	ldr	r3, [r2, #24]
 340:	e3130008 	tst	r3, #8
 344:	1afffffc 	bne	33c <Rdm::SendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0xa0>
 348:	e3a00004 	mov	r0, #4
 34c:	ebfffffe 	bl	0 <udelay>
 350:	e5950000 	ldr	r0, [r5]
 354:	e3a03001 	mov	r3, #1
 358:	e1a01006 	mov	r1, r6
 35c:	e1a02003 	mov	r2, r3
 360:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 364:	eafffffe 	b	0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 368:	e26880c8 	rsb	r8, r8, #200	; 0xc8
 36c:	e0880000 	add	r0, r8, r0
 370:	ebfffffe 	bl	0 <udelay>
 374:	eaffffd6 	b	2d4 <Rdm::SendDiscoveryRespondMessage(unsigned long, unsigned char const*, unsigned long)+0x38>

Disassembly of section .bss:

00000000 <m_nLastSendMicros>:
   0:	00000000 	andeq	r0, r0, r0

00000004 <m_TransactionNumber>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.

