In archive lib7/libdisplay.a:

display_timeout.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <display::timeout::gpio_init()>:
   0:	e12fff1e 	bx	lr

00000004 <display::timeout::gpio_renew()>:
   4:	e3a00000 	mov	r0, #0
   8:	e12fff1e 	bx	lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


display.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <Ssd1306::~Ssd1306()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000007 	andeq	r0, r0, r7
   8:	00000008 	andeq	r0, r0, r8
   c:	0000000b 	andeq	r0, r0, fp

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000009 	andeq	r0, r0, r9
   8:	0000000a 	andeq	r0, r0, sl

Disassembly of section .text:

00000000 <Display::Detect(display::Type)>:
   0:	e3510002 	cmp	r1, #2
   4:	e92d4070 	push	{r4, r5, r6, lr}
   8:	e1a04000 	mov	r4, r0
   c:	0a000022 	beq	9c <Display::Detect(display::Type)+0x9c>
  10:	e594501c 	ldr	r5, [r4, #28]
  14:	e3510004 	cmp	r1, #4
  18:	05801000 	streq	r1, [r0]
  1c:	e3550000 	cmp	r5, #0
  20:	0a000013 	beq	74 <Display::Detect(display::Type)+0x74>
  24:	e5953000 	ldr	r3, [r5]
  28:	e1a00005 	mov	r0, r5
  2c:	e5933008 	ldr	r3, [r3, #8]
  30:	e12fff33 	blx	r3
  34:	e3500000 	cmp	r0, #0
  38:	e594001c 	ldr	r0, [r4, #28]
  3c:	1a00000f 	bne	80 <Display::Detect(display::Type)+0x80>
  40:	e3500000 	cmp	r0, #0
  44:	0a000006 	beq	64 <Display::Detect(display::Type)+0x64>
  48:	e5902000 	ldr	r2, [r0]
  4c:	e3003000 	movw	r3, #0
  50:	e3403000 	movt	r3, #0
  54:	e5922004 	ldr	r2, [r2, #4]
  58:	e1520003 	cmp	r2, r3
  5c:	1a000015 	bne	b8 <Display::Detect(display::Type)+0xb8>
  60:	ebfffffe 	bl	0 <operator delete(void*)>
  64:	e3a02000 	mov	r2, #0
  68:	e3a03004 	mov	r3, #4
  6c:	e584201c 	str	r2, [r4, #28]
  70:	e5843000 	str	r3, [r4]
  74:	e3a03000 	mov	r3, #0
  78:	e5843014 	str	r3, [r4, #20]
  7c:	e8bd8070 	pop	{r4, r5, r6, pc}
  80:	e5903000 	ldr	r3, [r0]
  84:	e593300c 	ldr	r3, [r3, #12]
  88:	e12fff33 	blx	r3
  8c:	e594301c 	ldr	r3, [r4, #28]
  90:	e3530000 	cmp	r3, #0
  94:	18bd8070 	popne	{r4, r5, r6, pc}
  98:	eafffff5 	b	74 <Display::Detect(display::Type)+0x74>
  9c:	e3a00020 	mov	r0, #32
  a0:	ebfffffe 	bl	0 <operator new(unsigned int)>
  a4:	e1a05000 	mov	r5, r0
  a8:	e3a01000 	mov	r1, #0
  ac:	ebfffffe 	bl	0 <Ssd1306::Ssd1306(TOledPanel)>
  b0:	e584501c 	str	r5, [r4, #28]
  b4:	eaffffda 	b	24 <Display::Detect(display::Type)+0x24>
  b8:	e12fff32 	blx	r2
  bc:	eaffffe8 	b	64 <Display::Detect(display::Type)+0x64>

000000c0 <Display::Display()>:
  c0:	e3a03004 	mov	r3, #4
  c4:	e92d4030 	push	{r4, r5, lr}
  c8:	e1a04000 	mov	r4, r0
  cc:	e5803000 	str	r3, [r0]
  d0:	e24dd00c 	sub	sp, sp, #12
  d4:	ebfffffe 	bl	0 <millis>
  d8:	e5840004 	str	r0, [r4, #4]
  dc:	e30913e0 	movw	r1, #37856	; 0x93e0
  e0:	e3401004 	movt	r1, #4
  e4:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  e8:	e3400006 	movt	r0, #6
  ec:	e3003000 	movw	r3, #0
  f0:	e3403000 	movt	r3, #0
  f4:	e3a02000 	mov	r2, #0
  f8:	e584000c 	str	r0, [r4, #12]
  fc:	e3a00021 	mov	r0, #33	; 0x21
 100:	e5841014 	str	r1, [r4, #20]
 104:	e3a0107f 	mov	r1, #127	; 0x7f
 108:	e5c40008 	strb	r0, [r4, #8]
 10c:	e1a00004 	mov	r0, r4
 110:	e1c421b0 	strh	r2, [r4, #16]
 114:	e1c411b8 	strh	r1, [r4, #24]
 118:	e3a01002 	mov	r1, #2
 11c:	e584201c 	str	r2, [r4, #28]
 120:	e5834000 	str	r4, [r3]
 124:	ebfffffe 	bl	0 <Display::Detect(display::Type)>
 128:	e5d45008 	ldrb	r5, [r4, #8]
 12c:	e3a03901 	mov	r3, #16384	; 0x4000
 130:	e3433f80 	movt	r3, #16256	; 0x3f80
 134:	e594000c 	ldr	r0, [r4, #12]
 138:	e583500c 	str	r5, [r3, #12]
 13c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 140:	e2451030 	sub	r1, r5, #48	; 0x30
 144:	e2455050 	sub	r5, r5, #80	; 0x50
 148:	e355000f 	cmp	r5, #15
 14c:	83510007 	cmphi	r1, #7
 150:	93a01001 	movls	r1, #1
 154:	83a01000 	movhi	r1, #0
 158:	8a000014 	bhi	1b0 <Display::Display()+0xf0>
 15c:	e3a01001 	mov	r1, #1
 160:	e28d0004 	add	r0, sp, #4
 164:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 168:	e16f0f10 	clz	r0, r0
 16c:	e1a002a0 	lsr	r0, r0, #5
 170:	e5c40011 	strb	r0, [r4, #17]
 174:	e3500000 	cmp	r0, #0
 178:	1a000013 	bne	1cc <Display::Display()+0x10c>
 17c:	e594301c 	ldr	r3, [r4, #28]
 180:	e3530000 	cmp	r3, #0
 184:	0a000030 	beq	24c <Display::Display()+0x18c>
 188:	ebfffffe 	bl	0 <display::timeout::gpio_init()>
 18c:	e594001c 	ldr	r0, [r4, #28]
 190:	e3500000 	cmp	r0, #0
 194:	0a00002c 	beq	24c <Display::Display()+0x18c>
 198:	e5903000 	ldr	r3, [r0]
 19c:	e5933034 	ldr	r3, [r3, #52]	; 0x34
 1a0:	e12fff33 	blx	r3
 1a4:	e1a00004 	mov	r0, r4
 1a8:	e28dd00c 	add	sp, sp, #12
 1ac:	e8bd8030 	pop	{r4, r5, pc}
 1b0:	e1a00001 	mov	r0, r1
 1b4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1b8:	e16f0f10 	clz	r0, r0
 1bc:	e1a002a0 	lsr	r0, r0, #5
 1c0:	e5c40011 	strb	r0, [r4, #17]
 1c4:	e3500000 	cmp	r0, #0
 1c8:	0affffeb 	beq	17c <Display::Display()+0xbc>
 1cc:	e5d42008 	ldrb	r2, [r4, #8]
 1d0:	e3a05901 	mov	r5, #16384	; 0x4000
 1d4:	e3435f80 	movt	r5, #16256	; 0x3f80
 1d8:	e3a03000 	mov	r3, #0
 1dc:	e5cd3004 	strb	r3, [sp, #4]
 1e0:	e5cd3005 	strb	r3, [sp, #5]
 1e4:	e5cd3006 	strb	r3, [sp, #6]
 1e8:	e594000c 	ldr	r0, [r4, #12]
 1ec:	e585200c 	str	r2, [r5, #12]
 1f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1f4:	e3a01003 	mov	r1, #3
 1f8:	e28d0004 	add	r0, sp, #4
 1fc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 200:	e5d43011 	ldrb	r3, [r4, #17]
 204:	e3530000 	cmp	r3, #0
 208:	0affffdb 	beq	17c <Display::Display()+0xbc>
 20c:	e5d43008 	ldrb	r3, [r4, #8]
 210:	e3a02012 	mov	r2, #18
 214:	e5cd2004 	strb	r2, [sp, #4]
 218:	e3e0203f 	mvn	r2, #63	; 0x3f
 21c:	e5cd2005 	strb	r2, [sp, #5]
 220:	e3e02000 	mvn	r2, #0
 224:	e594000c 	ldr	r0, [r4, #12]
 228:	e5cd2006 	strb	r2, [sp, #6]
 22c:	e585300c 	str	r3, [r5, #12]
 230:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 234:	e3a01003 	mov	r1, #3
 238:	e28d0004 	add	r0, sp, #4
 23c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 240:	e594301c 	ldr	r3, [r4, #28]
 244:	e3530000 	cmp	r3, #0
 248:	1affffce 	bne	188 <Display::Display()+0xc8>
 24c:	e3000000 	movw	r0, #0
 250:	e3400000 	movt	r0, #0
 254:	ebfffffe 	bl	0 <puts>
 258:	eaffffd1 	b	1a4 <Display::Display()+0xe4>

0000025c <Display::Display(display::Type)>:
 25c:	e92d4030 	push	{r4, r5, lr}
 260:	e24dd00c 	sub	sp, sp, #12
 264:	e5801000 	str	r1, [r0]
 268:	e1a04000 	mov	r4, r0
 26c:	e1a05001 	mov	r5, r1
 270:	ebfffffe 	bl	0 <millis>
 274:	e5840004 	str	r0, [r4, #4]
 278:	e3003000 	movw	r3, #0
 27c:	e3403000 	movt	r3, #0
 280:	e3a01d6a 	mov	r1, #6784	; 0x1a80
 284:	e3401006 	movt	r1, #6
 288:	e30903e0 	movw	r0, #37856	; 0x93e0
 28c:	e5834000 	str	r4, [r3]
 290:	e3a03021 	mov	r3, #33	; 0x21
 294:	e3400004 	movt	r0, #4
 298:	e3a02000 	mov	r2, #0
 29c:	e5c43008 	strb	r3, [r4, #8]
 2a0:	e3a0307f 	mov	r3, #127	; 0x7f
 2a4:	e5840014 	str	r0, [r4, #20]
 2a8:	e1a00004 	mov	r0, r4
 2ac:	e584100c 	str	r1, [r4, #12]
 2b0:	e1a01005 	mov	r1, r5
 2b4:	e1c421b0 	strh	r2, [r4, #16]
 2b8:	e1c431b8 	strh	r3, [r4, #24]
 2bc:	e584201c 	str	r2, [r4, #28]
 2c0:	ebfffffe 	bl	0 <Display::Detect(display::Type)>
 2c4:	e5d45008 	ldrb	r5, [r4, #8]
 2c8:	e3a03901 	mov	r3, #16384	; 0x4000
 2cc:	e3433f80 	movt	r3, #16256	; 0x3f80
 2d0:	e594000c 	ldr	r0, [r4, #12]
 2d4:	e583500c 	str	r5, [r3, #12]
 2d8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2dc:	e2451030 	sub	r1, r5, #48	; 0x30
 2e0:	e2455050 	sub	r5, r5, #80	; 0x50
 2e4:	e355000f 	cmp	r5, #15
 2e8:	83510007 	cmphi	r1, #7
 2ec:	93a01001 	movls	r1, #1
 2f0:	83a01000 	movhi	r1, #0
 2f4:	8a000014 	bhi	34c <Display::Display(display::Type)+0xf0>
 2f8:	e3a01001 	mov	r1, #1
 2fc:	e28d0004 	add	r0, sp, #4
 300:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 304:	e16f0f10 	clz	r0, r0
 308:	e1a002a0 	lsr	r0, r0, #5
 30c:	e5c40011 	strb	r0, [r4, #17]
 310:	e3500000 	cmp	r0, #0
 314:	1a000013 	bne	368 <Display::Display(display::Type)+0x10c>
 318:	e594301c 	ldr	r3, [r4, #28]
 31c:	e3530000 	cmp	r3, #0
 320:	0a000030 	beq	3e8 <Display::Display(display::Type)+0x18c>
 324:	ebfffffe 	bl	0 <display::timeout::gpio_init()>
 328:	e594001c 	ldr	r0, [r4, #28]
 32c:	e3500000 	cmp	r0, #0
 330:	0a00002c 	beq	3e8 <Display::Display(display::Type)+0x18c>
 334:	e5903000 	ldr	r3, [r0]
 338:	e5933034 	ldr	r3, [r3, #52]	; 0x34
 33c:	e12fff33 	blx	r3
 340:	e1a00004 	mov	r0, r4
 344:	e28dd00c 	add	sp, sp, #12
 348:	e8bd8030 	pop	{r4, r5, pc}
 34c:	e1a00001 	mov	r0, r1
 350:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 354:	e16f0f10 	clz	r0, r0
 358:	e1a002a0 	lsr	r0, r0, #5
 35c:	e5c40011 	strb	r0, [r4, #17]
 360:	e3500000 	cmp	r0, #0
 364:	0affffeb 	beq	318 <Display::Display(display::Type)+0xbc>
 368:	e5d42008 	ldrb	r2, [r4, #8]
 36c:	e3a05901 	mov	r5, #16384	; 0x4000
 370:	e3435f80 	movt	r5, #16256	; 0x3f80
 374:	e3a03000 	mov	r3, #0
 378:	e5cd3004 	strb	r3, [sp, #4]
 37c:	e5cd3005 	strb	r3, [sp, #5]
 380:	e5cd3006 	strb	r3, [sp, #6]
 384:	e594000c 	ldr	r0, [r4, #12]
 388:	e585200c 	str	r2, [r5, #12]
 38c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 390:	e3a01003 	mov	r1, #3
 394:	e28d0004 	add	r0, sp, #4
 398:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 39c:	e5d43011 	ldrb	r3, [r4, #17]
 3a0:	e3530000 	cmp	r3, #0
 3a4:	0affffdb 	beq	318 <Display::Display(display::Type)+0xbc>
 3a8:	e5d43008 	ldrb	r3, [r4, #8]
 3ac:	e3a02012 	mov	r2, #18
 3b0:	e5cd2004 	strb	r2, [sp, #4]
 3b4:	e3e0203f 	mvn	r2, #63	; 0x3f
 3b8:	e5cd2005 	strb	r2, [sp, #5]
 3bc:	e3e02000 	mvn	r2, #0
 3c0:	e594000c 	ldr	r0, [r4, #12]
 3c4:	e5cd2006 	strb	r2, [sp, #6]
 3c8:	e585300c 	str	r3, [r5, #12]
 3cc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3d0:	e3a01003 	mov	r1, #3
 3d4:	e28d0004 	add	r0, sp, #4
 3d8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3dc:	e594301c 	ldr	r3, [r4, #28]
 3e0:	e3530000 	cmp	r3, #0
 3e4:	1affffce 	bne	324 <Display::Display(display::Type)+0xc8>
 3e8:	e3000000 	movw	r0, #0
 3ec:	e3400000 	movt	r0, #0
 3f0:	ebfffffe 	bl	0 <puts>
 3f4:	eaffffd1 	b	340 <Display::Display(display::Type)+0xe4>

000003f8 <Display::Detect(unsigned long)>:
 3f8:	e3a03901 	mov	r3, #16384	; 0x4000
 3fc:	e3a0203c 	mov	r2, #60	; 0x3c
 400:	e3433f80 	movt	r3, #16256	; 0x3f80
 404:	e92d4070 	push	{r4, r5, r6, lr}
 408:	e1a04000 	mov	r4, r0
 40c:	e583200c 	str	r2, [r3, #12]
 410:	e30806a0 	movw	r0, #34464	; 0x86a0
 414:	e3400001 	movt	r0, #1
 418:	e1a06001 	mov	r6, r1
 41c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 420:	e3a01000 	mov	r1, #0
 424:	e1a00001 	mov	r0, r1
 428:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 42c:	e2505000 	subs	r5, r0, #0
 430:	1a00000d 	bne	46c <Display::Detect(unsigned long)+0x74>
 434:	e3560004 	cmp	r6, #4
 438:	e3a00020 	mov	r0, #32
 43c:	9a00000e 	bls	47c <Display::Detect(unsigned long)+0x84>
 440:	ebfffffe 	bl	0 <operator new(unsigned int)>
 444:	e1a06000 	mov	r6, r0
 448:	e1a01005 	mov	r1, r5
 44c:	ebfffffe 	bl	0 <Ssd1306::Ssd1306(TOledPanel)>
 450:	e584601c 	str	r6, [r4, #28]
 454:	e5963000 	ldr	r3, [r6]
 458:	e1a00006 	mov	r0, r6
 45c:	e5933008 	ldr	r3, [r3, #8]
 460:	e12fff33 	blx	r3
 464:	e3500000 	cmp	r0, #0
 468:	1a000009 	bne	494 <Display::Detect(unsigned long)+0x9c>
 46c:	e594301c 	ldr	r3, [r4, #28]
 470:	e3530000 	cmp	r3, #0
 474:	05843014 	streq	r3, [r4, #20]
 478:	e8bd8070 	pop	{r4, r5, r6, pc}
 47c:	ebfffffe 	bl	0 <operator new(unsigned int)>
 480:	e1a06000 	mov	r6, r0
 484:	e3a01001 	mov	r1, #1
 488:	ebfffffe 	bl	0 <Ssd1306::Ssd1306(TOledPanel)>
 48c:	e584601c 	str	r6, [r4, #28]
 490:	eaffffef 	b	454 <Display::Detect(unsigned long)+0x5c>
 494:	e3a03002 	mov	r3, #2
 498:	e3002000 	movw	r2, #0
 49c:	e3402000 	movt	r2, #0
 4a0:	e3a01001 	mov	r1, #1
 4a4:	e5843000 	str	r3, [r4]
 4a8:	e1a00004 	mov	r0, r4
 4ac:	ebfffffe 	bl	0 <Display::Detect(display::Type)>
 4b0:	eaffffed 	b	46c <Display::Detect(unsigned long)+0x74>

000004b4 <Display::Display(unsigned long)>:
 4b4:	e3a03004 	mov	r3, #4
 4b8:	e92d4030 	push	{r4, r5, lr}
 4bc:	e24dd00c 	sub	sp, sp, #12
 4c0:	e5803000 	str	r3, [r0]
 4c4:	e1a04000 	mov	r4, r0
 4c8:	e1a05001 	mov	r5, r1
 4cc:	ebfffffe 	bl	0 <millis>
 4d0:	e5840004 	str	r0, [r4, #4]
 4d4:	e3003000 	movw	r3, #0
 4d8:	e3403000 	movt	r3, #0
 4dc:	e3a01d6a 	mov	r1, #6784	; 0x1a80
 4e0:	e3401006 	movt	r1, #6
 4e4:	e30903e0 	movw	r0, #37856	; 0x93e0
 4e8:	e5834000 	str	r4, [r3]
 4ec:	e3a03021 	mov	r3, #33	; 0x21
 4f0:	e3400004 	movt	r0, #4
 4f4:	e3a02000 	mov	r2, #0
 4f8:	e5c43008 	strb	r3, [r4, #8]
 4fc:	e3a0307f 	mov	r3, #127	; 0x7f
 500:	e5840014 	str	r0, [r4, #20]
 504:	e1a00004 	mov	r0, r4
 508:	e584100c 	str	r1, [r4, #12]
 50c:	e1a01005 	mov	r1, r5
 510:	e1c421b0 	strh	r2, [r4, #16]
 514:	e1c431b8 	strh	r3, [r4, #24]
 518:	e584201c 	str	r2, [r4, #28]
 51c:	ebfffffe 	bl	3f8 <Display::Detect(unsigned long)>
 520:	e5d45008 	ldrb	r5, [r4, #8]
 524:	e3a03901 	mov	r3, #16384	; 0x4000
 528:	e3433f80 	movt	r3, #16256	; 0x3f80
 52c:	e594000c 	ldr	r0, [r4, #12]
 530:	e583500c 	str	r5, [r3, #12]
 534:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 538:	e2451030 	sub	r1, r5, #48	; 0x30
 53c:	e2455050 	sub	r5, r5, #80	; 0x50
 540:	e355000f 	cmp	r5, #15
 544:	83510007 	cmphi	r1, #7
 548:	93a01001 	movls	r1, #1
 54c:	83a01000 	movhi	r1, #0
 550:	8a000014 	bhi	5a8 <Display::Display(unsigned long)+0xf4>
 554:	e3a01001 	mov	r1, #1
 558:	e28d0004 	add	r0, sp, #4
 55c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 560:	e16f0f10 	clz	r0, r0
 564:	e1a002a0 	lsr	r0, r0, #5
 568:	e5c40011 	strb	r0, [r4, #17]
 56c:	e3500000 	cmp	r0, #0
 570:	1a000013 	bne	5c4 <Display::Display(unsigned long)+0x110>
 574:	e594301c 	ldr	r3, [r4, #28]
 578:	e3530000 	cmp	r3, #0
 57c:	0a000030 	beq	644 <Display::Display(unsigned long)+0x190>
 580:	ebfffffe 	bl	0 <display::timeout::gpio_init()>
 584:	e594001c 	ldr	r0, [r4, #28]
 588:	e3500000 	cmp	r0, #0
 58c:	0a00002c 	beq	644 <Display::Display(unsigned long)+0x190>
 590:	e5903000 	ldr	r3, [r0]
 594:	e5933034 	ldr	r3, [r3, #52]	; 0x34
 598:	e12fff33 	blx	r3
 59c:	e1a00004 	mov	r0, r4
 5a0:	e28dd00c 	add	sp, sp, #12
 5a4:	e8bd8030 	pop	{r4, r5, pc}
 5a8:	e1a00001 	mov	r0, r1
 5ac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5b0:	e16f0f10 	clz	r0, r0
 5b4:	e1a002a0 	lsr	r0, r0, #5
 5b8:	e5c40011 	strb	r0, [r4, #17]
 5bc:	e3500000 	cmp	r0, #0
 5c0:	0affffeb 	beq	574 <Display::Display(unsigned long)+0xc0>
 5c4:	e5d42008 	ldrb	r2, [r4, #8]
 5c8:	e3a05901 	mov	r5, #16384	; 0x4000
 5cc:	e3435f80 	movt	r5, #16256	; 0x3f80
 5d0:	e3a03000 	mov	r3, #0
 5d4:	e5cd3004 	strb	r3, [sp, #4]
 5d8:	e5cd3005 	strb	r3, [sp, #5]
 5dc:	e5cd3006 	strb	r3, [sp, #6]
 5e0:	e594000c 	ldr	r0, [r4, #12]
 5e4:	e585200c 	str	r2, [r5, #12]
 5e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5ec:	e3a01003 	mov	r1, #3
 5f0:	e28d0004 	add	r0, sp, #4
 5f4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5f8:	e5d43011 	ldrb	r3, [r4, #17]
 5fc:	e3530000 	cmp	r3, #0
 600:	0affffdb 	beq	574 <Display::Display(unsigned long)+0xc0>
 604:	e5d43008 	ldrb	r3, [r4, #8]
 608:	e3a02012 	mov	r2, #18
 60c:	e5cd2004 	strb	r2, [sp, #4]
 610:	e3e0203f 	mvn	r2, #63	; 0x3f
 614:	e5cd2005 	strb	r2, [sp, #5]
 618:	e3e02000 	mvn	r2, #0
 61c:	e594000c 	ldr	r0, [r4, #12]
 620:	e5cd2006 	strb	r2, [sp, #6]
 624:	e585300c 	str	r3, [r5, #12]
 628:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 62c:	e3a01003 	mov	r1, #3
 630:	e28d0004 	add	r0, sp, #4
 634:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 638:	e594301c 	ldr	r3, [r4, #28]
 63c:	e3530000 	cmp	r3, #0
 640:	1affffce 	bne	580 <Display::Display(unsigned long)+0xcc>
 644:	e3000000 	movw	r0, #0
 648:	e3400000 	movt	r0, #0
 64c:	ebfffffe 	bl	0 <puts>
 650:	eaffffd1 	b	59c <Display::Display(unsigned long)+0xe8>

Disassembly of section .bss:

00000000 <Display::s_pThis>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .text._ZN7Ssd1306D0Ev:

00000000 <Ssd1306::~Ssd1306()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN7Display6PrintfEmPKcz:

00000000 <Display::Printf(unsigned long, char const*, ...)>:
   0:	e92d000c 	push	{r2, r3}
   4:	e92d4070 	push	{r4, r5, r6, lr}
   8:	e24dd028 	sub	sp, sp, #40	; 0x28
   c:	e590401c 	ldr	r4, [r0, #28]
  10:	e3540000 	cmp	r4, #0
  14:	0a00000f 	beq	58 <Display::Printf(unsigned long, char const*, ...)+0x58>
  18:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
  1c:	e1a05000 	mov	r5, r0
  20:	e28d303c 	add	r3, sp, #60	; 0x3c
  24:	e1a06001 	mov	r6, r1
  28:	e58d3004 	str	r3, [sp, #4]
  2c:	e3a01020 	mov	r1, #32
  30:	e28d0008 	add	r0, sp, #8
  34:	ebfffffe 	bl	0 <vsnprintf>
  38:	e1a04000 	mov	r4, r0
  3c:	e28d2008 	add	r2, sp, #8
  40:	e595001c 	ldr	r0, [r5, #28]
  44:	e1a01006 	mov	r1, r6
  48:	e5903000 	ldr	r3, [r0]
  4c:	e593501c 	ldr	r5, [r3, #28]
  50:	e1a03004 	mov	r3, r4
  54:	e12fff35 	blx	r5
  58:	e1a00004 	mov	r0, r4
  5c:	e28dd028 	add	sp, sp, #40	; 0x28
  60:	e8bd4070 	pop	{r4, r5, r6, lr}
  64:	e28dd008 	add	sp, sp, #8
  68:	e12fff1e 	bx	lr

Disassembly of section .text._ZN7Ssd1306D2Ev:

00000000 <Ssd1306::~Ssd1306()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.LC0>:
   0:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
   4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
   8:	66207961 	strtvs	r7, [r0], -r1, ror #18
   c:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
  10:	00000000 	andeq	r0, r0, r0

00000014 <.LC1>:
  14:	31445353 	cmpcc	r4, r3, asr r3
  18:	00363033 	eorseq	r3, r6, r3, lsr r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


hd44780.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000009 	andeq	r0, r0, r9

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000a 	andeq	r0, r0, sl

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000b 	andeq	r0, r0, fp

Disassembly of section .group:

00000000 <Hd44780::~Hd44780()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000c 	andeq	r0, r0, ip
   8:	0000000e 	andeq	r0, r0, lr
   c:	0000000f 	andeq	r0, r0, pc

Disassembly of section .text:

00000000 <Hd44780::SetCursor(unsigned long)>:
   0:	e12fff1e 	bx	lr

00000004 <Hd44780::PrintInfo()>:
   4:	e1a03000 	mov	r3, r0
   8:	e3000000 	movw	r0, #0
   c:	e3400000 	movt	r0, #0
  10:	e5932004 	ldr	r2, [r3, #4]
  14:	e5931008 	ldr	r1, [r3, #8]
  18:	eafffffe 	b	0 <printf>

0000001c <Hd44780::Hd44780()>:
  1c:	e59fc02c 	ldr	ip, [pc, #44]	; 50 <Hd44780::Hd44780()+0x34>
  20:	e3a01000 	mov	r1, #0
  24:	e5c0100c 	strb	r1, [r0, #12]
  28:	e3a02d6a 	mov	r2, #6784	; 0x1a80
  2c:	e3402006 	movt	r2, #6
  30:	e3a01027 	mov	r1, #39	; 0x27
  34:	e5c01010 	strb	r1, [r0, #16]
  38:	e3a01010 	mov	r1, #16
  3c:	e5802014 	str	r2, [r0, #20]
  40:	e3a02002 	mov	r2, #2
  44:	e580c000 	str	ip, [r0]
  48:	e9800006 	stmib	r0, {r1, r2}
  4c:	e12fff1e 	bx	lr
  50:	00000008 	andeq	r0, r0, r8

00000054 <Hd44780::Hd44780(unsigned char, unsigned char)>:
  54:	e59fc048 	ldr	ip, [pc, #72]	; a4 <Hd44780::Hd44780(unsigned char, unsigned char)+0x50>
  58:	e3510010 	cmp	r1, #16
  5c:	33a01010 	movcc	r1, #16
  60:	e580c000 	str	ip, [r0]
  64:	e3510014 	cmp	r1, #20
  68:	23a01014 	movcs	r1, #20
  6c:	e3520002 	cmp	r2, #2
  70:	e5801004 	str	r1, [r0, #4]
  74:	33a02002 	movcc	r2, #2
  78:	e3520004 	cmp	r2, #4
  7c:	e3a0c027 	mov	ip, #39	; 0x27
  80:	e5c0c010 	strb	ip, [r0, #16]
  84:	23a02004 	movcs	r2, #4
  88:	e5802008 	str	r2, [r0, #8]
  8c:	e3a0cd6a 	mov	ip, #6784	; 0x1a80
  90:	e340c006 	movt	ip, #6
  94:	e3a02000 	mov	r2, #0
  98:	e580c014 	str	ip, [r0, #20]
  9c:	e5c0200c 	strb	r2, [r0, #12]
  a0:	e12fff1e 	bx	lr
  a4:	00000008 	andeq	r0, r0, r8

000000a8 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>:
  a8:	e3510000 	cmp	r1, #0
  ac:	03a01027 	moveq	r1, #39	; 0x27
  b0:	e3520010 	cmp	r2, #16
  b4:	e5c01010 	strb	r1, [r0, #16]
  b8:	33a02010 	movcc	r2, #16
  bc:	e3520014 	cmp	r2, #20
  c0:	e3a01d6a 	mov	r1, #6784	; 0x1a80
  c4:	e3401006 	movt	r1, #6
  c8:	23a02014 	movcs	r2, #20
  cc:	e5802004 	str	r2, [r0, #4]
  d0:	e3530002 	cmp	r3, #2
  d4:	e5801014 	str	r1, [r0, #20]
  d8:	33a03002 	movcc	r3, #2
  dc:	e3530004 	cmp	r3, #4
  e0:	23a03004 	movcs	r3, #4
  e4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  e8:	e59fe010 	ldr	lr, [pc, #16]	; 100 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x58>
  ec:	e5803008 	str	r3, [r0, #8]
  f0:	e3a03000 	mov	r3, #0
  f4:	e580e000 	str	lr, [r0]
  f8:	e5c0300c 	strb	r3, [r0, #12]
  fc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 100:	00000008 	andeq	r0, r0, r8

00000104 <Hd44780::Write4bits(unsigned char)>:
 104:	e92d4070 	push	{r4, r5, r6, lr}
 108:	e1a05000 	mov	r5, r0
 10c:	e5900014 	ldr	r0, [r0, #20]
 110:	e3a06901 	mov	r6, #16384	; 0x4000
 114:	e5d53010 	ldrb	r3, [r5, #16]
 118:	e24dd008 	sub	sp, sp, #8
 11c:	e3436f80 	movt	r6, #16256	; 0x3f80
 120:	e1a04001 	mov	r4, r1
 124:	e586300c 	str	r3, [r6, #12]
 128:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 12c:	e5cd4004 	strb	r4, [sp, #4]
 130:	e3a01001 	mov	r1, #1
 134:	e28d0004 	add	r0, sp, #4
 138:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 13c:	e5d53010 	ldrb	r3, [r5, #16]
 140:	e5950014 	ldr	r0, [r5, #20]
 144:	e586300c 	str	r3, [r6, #12]
 148:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 14c:	e384300c 	orr	r3, r4, #12
 150:	e3a01001 	mov	r1, #1
 154:	e5cd3004 	strb	r3, [sp, #4]
 158:	e28d0004 	add	r0, sp, #4
 15c:	e3c4400c 	bic	r4, r4, #12
 160:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 164:	e5d53010 	ldrb	r3, [r5, #16]
 168:	e3844008 	orr	r4, r4, #8
 16c:	e5950014 	ldr	r0, [r5, #20]
 170:	e586300c 	str	r3, [r6, #12]
 174:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 178:	e5cd4004 	strb	r4, [sp, #4]
 17c:	e3a01001 	mov	r1, #1
 180:	e28d0004 	add	r0, sp, #4
 184:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 188:	e28dd008 	add	sp, sp, #8
 18c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000190 <Hd44780::PutString(char const*)>:
 190:	e92d4070 	push	{r4, r5, r6, lr}
 194:	e5d14000 	ldrb	r4, [r1]
 198:	e3540000 	cmp	r4, #0
 19c:	08bd8070 	popeq	{r4, r5, r6, pc}
 1a0:	e1a05001 	mov	r5, r1
 1a4:	e1a06000 	mov	r6, r0
 1a8:	e3c4100f 	bic	r1, r4, #15
 1ac:	e1a00006 	mov	r0, r6
 1b0:	e1a04204 	lsl	r4, r4, #4
 1b4:	e3811001 	orr	r1, r1, #1
 1b8:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 1bc:	e3841001 	orr	r1, r4, #1
 1c0:	e1a00006 	mov	r0, r6
 1c4:	e20110f1 	and	r1, r1, #241	; 0xf1
 1c8:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 1cc:	e3a0002b 	mov	r0, #43	; 0x2b
 1d0:	ebfffffe 	bl	0 <udelay>
 1d4:	e5f54001 	ldrb	r4, [r5, #1]!
 1d8:	e3540000 	cmp	r4, #0
 1dc:	1afffff1 	bne	1a8 <Hd44780::PutString(char const*)+0x18>
 1e0:	e8bd8070 	pop	{r4, r5, r6, pc}

000001e4 <Hd44780::Text(char const*, unsigned long)>:
 1e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 1e8:	e5907004 	ldr	r7, [r0, #4]
 1ec:	e1520007 	cmp	r2, r7
 1f0:	21a02007 	movcs	r2, r7
 1f4:	e3520000 	cmp	r2, #0
 1f8:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
 1fc:	e2415001 	sub	r5, r1, #1
 200:	e1a06000 	mov	r6, r0
 204:	e0857002 	add	r7, r5, r2
 208:	e5f54001 	ldrb	r4, [r5, #1]!
 20c:	e1a00006 	mov	r0, r6
 210:	e3c4100f 	bic	r1, r4, #15
 214:	e3811001 	orr	r1, r1, #1
 218:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 21c:	e1a01204 	lsl	r1, r4, #4
 220:	e1a00006 	mov	r0, r6
 224:	e3811001 	orr	r1, r1, #1
 228:	e20110f1 	and	r1, r1, #241	; 0xf1
 22c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 230:	e3a0002b 	mov	r0, #43	; 0x2b
 234:	ebfffffe 	bl	0 <udelay>
 238:	e1570005 	cmp	r7, r5
 23c:	1afffff1 	bne	208 <Hd44780::Text(char const*, unsigned long)+0x24>
 240:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00000244 <Hd44780::Cls()>:
 244:	e92d4010 	push	{r4, lr}
 248:	e3a01000 	mov	r1, #0
 24c:	e1a04000 	mov	r4, r0
 250:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 254:	e1a00004 	mov	r0, r4
 258:	e3a01010 	mov	r1, #16
 25c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 260:	e3a00025 	mov	r0, #37	; 0x25
 264:	ebfffffe 	bl	0 <udelay>
 268:	e8bd4010 	pop	{r4, lr}
 26c:	e30005cb 	movw	r0, #1483	; 0x5cb
 270:	eafffffe 	b	0 <udelay>

00000274 <Hd44780::PutChar(int)>:
 274:	e92d4070 	push	{r4, r5, r6, lr}
 278:	e1a04001 	mov	r4, r1
 27c:	e20110f0 	and	r1, r1, #240	; 0xf0
 280:	e1a05000 	mov	r5, r0
 284:	e3811001 	orr	r1, r1, #1
 288:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 28c:	e1a01204 	lsl	r1, r4, #4
 290:	e1a00005 	mov	r0, r5
 294:	e20110f0 	and	r1, r1, #240	; 0xf0
 298:	e3811001 	orr	r1, r1, #1
 29c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 2a0:	e8bd4070 	pop	{r4, r5, r6, lr}
 2a4:	e3a0002b 	mov	r0, #43	; 0x2b
 2a8:	eafffffe 	b	0 <udelay>

000002ac <Hd44780::SetCursorPos(unsigned long, unsigned long)>:
 2ac:	e92d4030 	push	{r4, r5, lr}
 2b0:	e24dd00c 	sub	sp, sp, #12
 2b4:	e28dc008 	add	ip, sp, #8
 2b8:	e2022003 	and	r2, r2, #3
 2bc:	e08c2002 	add	r2, ip, r2
 2c0:	e3a03901 	mov	r3, #16384	; 0x4000
 2c4:	e3453414 	movt	r3, #21524	; 0x5414
 2c8:	e1a05000 	mov	r5, r0
 2cc:	e58d3004 	str	r3, [sp, #4]
 2d0:	e5523004 	ldrb	r3, [r2, #-4]
 2d4:	e0831001 	add	r1, r3, r1
 2d8:	e6ef4071 	uxtb	r4, r1
 2dc:	e20110f0 	and	r1, r1, #240	; 0xf0
 2e0:	e3811080 	orr	r1, r1, #128	; 0x80
 2e4:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 2e8:	e1a01204 	lsl	r1, r4, #4
 2ec:	e1a00005 	mov	r0, r5
 2f0:	e20110f0 	and	r1, r1, #240	; 0xf0
 2f4:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 2f8:	e3a00025 	mov	r0, #37	; 0x25
 2fc:	e28dd00c 	add	sp, sp, #12
 300:	e8bd4030 	pop	{r4, r5, lr}
 304:	eafffffe 	b	0 <udelay>

00000308 <Hd44780::TextLine(unsigned long, char const*, unsigned long)>:
 308:	e590c008 	ldr	ip, [r0, #8]
 30c:	e15c0001 	cmp	ip, r1
 310:	312fff1e 	bxcc	lr
 314:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 318:	e2411001 	sub	r1, r1, #1
 31c:	e24dd00c 	sub	sp, sp, #12
 320:	e1a07003 	mov	r7, r3
 324:	e2011003 	and	r1, r1, #3
 328:	e28d3008 	add	r3, sp, #8
 32c:	e0831001 	add	r1, r3, r1
 330:	e3a03901 	mov	r3, #16384	; 0x4000
 334:	e3453414 	movt	r3, #21524	; 0x5414
 338:	e1a06000 	mov	r6, r0
 33c:	e58d3004 	str	r3, [sp, #4]
 340:	e1a05002 	mov	r5, r2
 344:	e5514004 	ldrb	r4, [r1, #-4]
 348:	e3c4100f 	bic	r1, r4, #15
 34c:	e3811080 	orr	r1, r1, #128	; 0x80
 350:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 354:	e1a01204 	lsl	r1, r4, #4
 358:	e1a00006 	mov	r0, r6
 35c:	e20110f0 	and	r1, r1, #240	; 0xf0
 360:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 364:	e3a00025 	mov	r0, #37	; 0x25
 368:	ebfffffe 	bl	0 <udelay>
 36c:	e5963004 	ldr	r3, [r6, #4]
 370:	e1570003 	cmp	r7, r3
 374:	21a07003 	movcs	r7, r3
 378:	e3570000 	cmp	r7, #0
 37c:	0a00000f 	beq	3c0 <Hd44780::TextLine(unsigned long, char const*, unsigned long)+0xb8>
 380:	e2455001 	sub	r5, r5, #1
 384:	e0857007 	add	r7, r5, r7
 388:	e5f54001 	ldrb	r4, [r5, #1]!
 38c:	e1a00006 	mov	r0, r6
 390:	e3c4100f 	bic	r1, r4, #15
 394:	e3811001 	orr	r1, r1, #1
 398:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 39c:	e1a01204 	lsl	r1, r4, #4
 3a0:	e1a00006 	mov	r0, r6
 3a4:	e3811001 	orr	r1, r1, #1
 3a8:	e20110f1 	and	r1, r1, #241	; 0xf1
 3ac:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 3b0:	e3a0002b 	mov	r0, #43	; 0x2b
 3b4:	ebfffffe 	bl	0 <udelay>
 3b8:	e1570005 	cmp	r7, r5
 3bc:	1afffff1 	bne	388 <Hd44780::TextLine(unsigned long, char const*, unsigned long)+0x80>
 3c0:	e28dd00c 	add	sp, sp, #12
 3c4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

000003c8 <Hd44780::Start()>:
 3c8:	e3a03901 	mov	r3, #16384	; 0x4000
 3cc:	e92d4030 	push	{r4, r5, lr}
 3d0:	e1a04000 	mov	r4, r0
 3d4:	e5d05010 	ldrb	r5, [r0, #16]
 3d8:	e24dd00c 	sub	sp, sp, #12
 3dc:	e3433f80 	movt	r3, #16256	; 0x3f80
 3e0:	e5900014 	ldr	r0, [r0, #20]
 3e4:	e583500c 	str	r5, [r3, #12]
 3e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3ec:	e2451030 	sub	r1, r5, #48	; 0x30
 3f0:	e2455050 	sub	r5, r5, #80	; 0x50
 3f4:	e355000f 	cmp	r5, #15
 3f8:	83510007 	cmphi	r1, #7
 3fc:	93a01001 	movls	r1, #1
 400:	83a01000 	movhi	r1, #0
 404:	8a000007 	bhi	428 <Hd44780::Start()+0x60>
 408:	e3a01001 	mov	r1, #1
 40c:	e28d0007 	add	r0, sp, #7
 410:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 414:	e3500000 	cmp	r0, #0
 418:	0a000006 	beq	438 <Hd44780::Start()+0x70>
 41c:	e3a00000 	mov	r0, #0
 420:	e28dd00c 	add	sp, sp, #12
 424:	e8bd8030 	pop	{r4, r5, pc}
 428:	e1a00001 	mov	r0, r1
 42c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 430:	e3500000 	cmp	r0, #0
 434:	1afffff8 	bne	41c <Hd44780::Start()+0x54>
 438:	e1a00004 	mov	r0, r4
 43c:	e3a01030 	mov	r1, #48	; 0x30
 440:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 444:	e3a01030 	mov	r1, #48	; 0x30
 448:	e1a00004 	mov	r0, r4
 44c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 450:	e3a00025 	mov	r0, #37	; 0x25
 454:	ebfffffe 	bl	0 <udelay>
 458:	e1a00004 	mov	r0, r4
 45c:	e3a01030 	mov	r1, #48	; 0x30
 460:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 464:	e3a01020 	mov	r1, #32
 468:	e1a00004 	mov	r0, r4
 46c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 470:	e3a00025 	mov	r0, #37	; 0x25
 474:	ebfffffe 	bl	0 <udelay>
 478:	e1a00004 	mov	r0, r4
 47c:	e3a01020 	mov	r1, #32
 480:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 484:	e3a01080 	mov	r1, #128	; 0x80
 488:	e1a00004 	mov	r0, r4
 48c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 490:	e3a00025 	mov	r0, #37	; 0x25
 494:	ebfffffe 	bl	0 <udelay>
 498:	e1a00004 	mov	r0, r4
 49c:	e3a01000 	mov	r1, #0
 4a0:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 4a4:	e3a010c0 	mov	r1, #192	; 0xc0
 4a8:	e1a00004 	mov	r0, r4
 4ac:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 4b0:	e3a00025 	mov	r0, #37	; 0x25
 4b4:	ebfffffe 	bl	0 <udelay>
 4b8:	e1a00004 	mov	r0, r4
 4bc:	e3a01000 	mov	r1, #0
 4c0:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 4c4:	e3a01010 	mov	r1, #16
 4c8:	e1a00004 	mov	r0, r4
 4cc:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 4d0:	e3a00025 	mov	r0, #37	; 0x25
 4d4:	ebfffffe 	bl	0 <udelay>
 4d8:	e30005cb 	movw	r0, #1483	; 0x5cb
 4dc:	ebfffffe 	bl	0 <udelay>
 4e0:	e1a00004 	mov	r0, r4
 4e4:	e3a01000 	mov	r1, #0
 4e8:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 4ec:	e3a01060 	mov	r1, #96	; 0x60
 4f0:	e1a00004 	mov	r0, r4
 4f4:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 4f8:	e3a00025 	mov	r0, #37	; 0x25
 4fc:	ebfffffe 	bl	0 <udelay>
 500:	e3a00001 	mov	r0, #1
 504:	e28dd00c 	add	sp, sp, #12
 508:	e8bd8030 	pop	{r4, r5, pc}

0000050c <Hd44780::ClearLine(unsigned long)>:
 50c:	e5903008 	ldr	r3, [r0, #8]
 510:	e1530001 	cmp	r3, r1
 514:	312fff1e 	bxcc	lr
 518:	e92d4070 	push	{r4, r5, r6, lr}
 51c:	e2416001 	sub	r6, r1, #1
 520:	e24dd008 	sub	sp, sp, #8
 524:	e2066003 	and	r6, r6, #3
 528:	e28d2008 	add	r2, sp, #8
 52c:	e3a03901 	mov	r3, #16384	; 0x4000
 530:	e0826006 	add	r6, r2, r6
 534:	e1a04000 	mov	r4, r0
 538:	e3453414 	movt	r3, #21524	; 0x5414
 53c:	e58d3004 	str	r3, [sp, #4]
 540:	e5565004 	ldrb	r5, [r6, #-4]
 544:	e3c5100f 	bic	r1, r5, #15
 548:	e3811080 	orr	r1, r1, #128	; 0x80
 54c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 550:	e1a01205 	lsl	r1, r5, #4
 554:	e1a00004 	mov	r0, r4
 558:	e20110f0 	and	r1, r1, #240	; 0xf0
 55c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 560:	e3a00025 	mov	r0, #37	; 0x25
 564:	ebfffffe 	bl	0 <udelay>
 568:	e5943004 	ldr	r3, [r4, #4]
 56c:	e3530000 	cmp	r3, #0
 570:	0a00000c 	beq	5a8 <Hd44780::ClearLine(unsigned long)+0x9c>
 574:	e3a05000 	mov	r5, #0
 578:	e3a01021 	mov	r1, #33	; 0x21
 57c:	e1a00004 	mov	r0, r4
 580:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 584:	e3a01001 	mov	r1, #1
 588:	e1a00004 	mov	r0, r4
 58c:	e0855001 	add	r5, r5, r1
 590:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 594:	e3a0002b 	mov	r0, #43	; 0x2b
 598:	ebfffffe 	bl	0 <udelay>
 59c:	e5943004 	ldr	r3, [r4, #4]
 5a0:	e1530005 	cmp	r3, r5
 5a4:	8afffff3 	bhi	578 <Hd44780::ClearLine(unsigned long)+0x6c>
 5a8:	e3a03901 	mov	r3, #16384	; 0x4000
 5ac:	e1a00004 	mov	r0, r4
 5b0:	e3453414 	movt	r3, #21524	; 0x5414
 5b4:	e58d3004 	str	r3, [sp, #4]
 5b8:	e5565004 	ldrb	r5, [r6, #-4]
 5bc:	e3c5100f 	bic	r1, r5, #15
 5c0:	e3811080 	orr	r1, r1, #128	; 0x80
 5c4:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 5c8:	e1a01205 	lsl	r1, r5, #4
 5cc:	e1a00004 	mov	r0, r4
 5d0:	e20110f0 	and	r1, r1, #240	; 0xf0
 5d4:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 5d8:	e3a00025 	mov	r0, #37	; 0x25
 5dc:	e28dd008 	add	sp, sp, #8
 5e0:	e8bd4070 	pop	{r4, r5, r6, lr}
 5e4:	eafffffe 	b	0 <udelay>

000005e8 <Hd44780::WriteCmd(unsigned char)>:
 5e8:	e92d4070 	push	{r4, r5, r6, lr}
 5ec:	e1a04001 	mov	r4, r1
 5f0:	e20110f0 	and	r1, r1, #240	; 0xf0
 5f4:	e1a05000 	mov	r5, r0
 5f8:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 5fc:	e1a01204 	lsl	r1, r4, #4
 600:	e1a00005 	mov	r0, r5
 604:	e20110f0 	and	r1, r1, #240	; 0xf0
 608:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 60c:	e8bd4070 	pop	{r4, r5, r6, lr}
 610:	e3a00025 	mov	r0, #37	; 0x25
 614:	eafffffe 	b	0 <udelay>

00000618 <Hd44780::WriteReg(unsigned char)>:
 618:	e92d4070 	push	{r4, r5, r6, lr}
 61c:	e1a04001 	mov	r4, r1
 620:	e3c1100f 	bic	r1, r1, #15
 624:	e1a05000 	mov	r5, r0
 628:	e3811001 	orr	r1, r1, #1
 62c:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 630:	e1a01204 	lsl	r1, r4, #4
 634:	e1a00005 	mov	r0, r5
 638:	e3811001 	orr	r1, r1, #1
 63c:	e20110f1 	and	r1, r1, #241	; 0xf1
 640:	ebfffffe 	bl	104 <Hd44780::Write4bits(unsigned char)>
 644:	e8bd4070 	pop	{r4, r5, r6, lr}
 648:	e3a0002b 	mov	r0, #43	; 0x2b
 64c:	eafffffe 	b	0 <udelay>

Disassembly of section .text._ZN10DisplaySet8SetSleepEb:

00000000 <DisplaySet::SetSleep(bool)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN10DisplaySet11SetContrastEh:

00000000 <DisplaySet::SetContrast(unsigned char)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN10DisplaySet17SetFlipVerticallyEb:

00000000 <DisplaySet::SetFlipVertically(bool)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN7Hd44780D2Ev:

00000000 <Hd44780::~Hd44780()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.LC0>:
   0:	34344448 	ldrtcc	r4, [r4], #-1096	; 0xfffffbb8
   4:	20303837 	eorscs	r3, r0, r7, lsr r8
   8:	4643505b 			; <UNDEFINED> instruction: 0x4643505b
   c:	34373538 	ldrtcc	r3, [r7], #-1336	; 0xfffffac8
  10:	28205d54 	stmdacs	r0!, {r2, r4, r6, r8, sl, fp, ip, lr}
  14:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
  18:	000a2964 	andeq	r2, sl, r4, ror #18

Disassembly of section .text._ZN7Hd44780D0Ev:

00000000 <Hd44780::~Hd44780()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

00000000 <vtable for Hd44780>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


ssd1306.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <Ssd1306::~Ssd1306()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000006 	andeq	r0, r0, r6
   8:	00000008 	andeq	r0, r0, r8
   c:	00000009 	andeq	r0, r0, r9

Disassembly of section .text:

00000000 <Ssd1306::SetCursor(unsigned long)>:
   0:	e12fff1e 	bx	lr

00000004 <Ssd1306::PrintInfo()>:
   4:	e1a02000 	mov	r2, r0
   8:	e3003000 	movw	r3, #0
   c:	e5d00019 	ldrb	r0, [r0, #25]
  10:	e3001000 	movw	r1, #0
  14:	e3403000 	movt	r3, #0
  18:	e3401000 	movt	r1, #0
  1c:	e3500000 	cmp	r0, #0
  20:	e3000000 	movw	r0, #0
  24:	01a01003 	moveq	r1, r3
  28:	e3400000 	movt	r0, #0
  2c:	e5923004 	ldr	r3, [r2, #4]
  30:	e5922008 	ldr	r2, [r2, #8]
  34:	eafffffe 	b	0 <printf>

00000038 <Ssd1306::PutChar(int)>:
  38:	e2411020 	sub	r1, r1, #32
  3c:	e351005f 	cmp	r1, #95	; 0x5f
  40:	e92d4010 	push	{r4, lr}
  44:	e3004000 	movw	r4, #0
  48:	93404000 	movtls	r4, #0
  4c:	93a03007 	movls	r3, #7
  50:	90244193 	mlals	r4, r3, r1, r4
  54:	e5d02010 	ldrb	r2, [r0, #16]
  58:	e3a03901 	mov	r3, #16384	; 0x4000
  5c:	e3433f80 	movt	r3, #16256	; 0x3f80
  60:	83404000 	movthi	r4, #0
  64:	e583200c 	str	r2, [r3, #12]
  68:	e5900014 	ldr	r0, [r0, #20]
  6c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  70:	e1a00004 	mov	r0, r4
  74:	e3a01007 	mov	r1, #7
  78:	e8bd4010 	pop	{r4, lr}
  7c:	eafffffe 	b	0 <bcm2835_i2c_write>

00000080 <Ssd1306::PutString(char const*)>:
  80:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  84:	e1a08001 	mov	r8, r1
  88:	e5d13000 	ldrb	r3, [r1]
  8c:	e1a04000 	mov	r4, r0
  90:	e3530000 	cmp	r3, #0
  94:	0a00002c 	beq	14c <Ssd1306::PutString(char const*)+0xcc>
  98:	e3006000 	movw	r6, #0
  9c:	e3a07901 	mov	r7, #16384	; 0x4000
  a0:	e3406000 	movt	r6, #0
  a4:	e1a05001 	mov	r5, r1
  a8:	e3437f80 	movt	r7, #16256	; 0x3f80
  ac:	e3a09007 	mov	r9, #7
  b0:	e2433020 	sub	r3, r3, #32
  b4:	e1a0a006 	mov	sl, r6
  b8:	e353005f 	cmp	r3, #95	; 0x5f
  bc:	902a6399 	mlals	sl, r9, r3, r6
  c0:	e5d43010 	ldrb	r3, [r4, #16]
  c4:	e587300c 	str	r3, [r7, #12]
  c8:	e5940014 	ldr	r0, [r4, #20]
  cc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  d0:	e3a01007 	mov	r1, #7
  d4:	e1a0000a 	mov	r0, sl
  d8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  dc:	e5f53001 	ldrb	r3, [r5, #1]!
  e0:	e3530000 	cmp	r3, #0
  e4:	1afffff1 	bne	b0 <Ssd1306::PutString(char const*)+0x30>
  e8:	e5d4300c 	ldrb	r3, [r4, #12]
  ec:	e3530000 	cmp	r3, #0
  f0:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
  f4:	e5943004 	ldr	r3, [r4, #4]
  f8:	e0455008 	sub	r5, r5, r8
  fc:	e1550003 	cmp	r5, r3
 100:	e3a03000 	mov	r3, #0
 104:	e5c4300c 	strb	r3, [r4, #12]
 108:	28bd87f0 	popcs	{r4, r5, r6, r7, r8, r9, sl, pc}
 10c:	e3a07901 	mov	r7, #16384	; 0x4000
 110:	e3006000 	movw	r6, #0
 114:	e3437f80 	movt	r7, #16256	; 0x3f80
 118:	e3406000 	movt	r6, #0
 11c:	e5d43010 	ldrb	r3, [r4, #16]
 120:	e2855001 	add	r5, r5, #1
 124:	e587300c 	str	r3, [r7, #12]
 128:	e5940014 	ldr	r0, [r4, #20]
 12c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 130:	e3a01007 	mov	r1, #7
 134:	e1a00006 	mov	r0, r6
 138:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 13c:	e5943004 	ldr	r3, [r4, #4]
 140:	e1530005 	cmp	r3, r5
 144:	8afffff4 	bhi	11c <Ssd1306::PutString(char const*)+0x9c>
 148:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 14c:	e1a05001 	mov	r5, r1
 150:	eaffffe4 	b	e8 <Ssd1306::PutString(char const*)+0x68>

00000154 <Ssd1306::SetContrast(unsigned char)>:
 154:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 158:	e3a05901 	mov	r5, #16384	; 0x4000
 15c:	e5d03010 	ldrb	r3, [r0, #16]
 160:	e24dd00c 	sub	sp, sp, #12
 164:	e3435f80 	movt	r5, #16256	; 0x3f80
 168:	e3e0207e 	mvn	r2, #126	; 0x7e
 16c:	e5cd2005 	strb	r2, [sp, #5]
 170:	e3a07000 	mov	r7, #0
 174:	e5cd7004 	strb	r7, [sp, #4]
 178:	e1a04000 	mov	r4, r0
 17c:	e585300c 	str	r3, [r5, #12]
 180:	e1a06001 	mov	r6, r1
 184:	e5900014 	ldr	r0, [r0, #20]
 188:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 18c:	e3a01002 	mov	r1, #2
 190:	e28d0004 	add	r0, sp, #4
 194:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 198:	e5d43010 	ldrb	r3, [r4, #16]
 19c:	e5cd7004 	strb	r7, [sp, #4]
 1a0:	e5cd6005 	strb	r6, [sp, #5]
 1a4:	e585300c 	str	r3, [r5, #12]
 1a8:	e5940014 	ldr	r0, [r4, #20]
 1ac:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1b0:	e3a01002 	mov	r1, #2
 1b4:	e28d0004 	add	r0, sp, #4
 1b8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1bc:	e28dd00c 	add	sp, sp, #12
 1c0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

000001c4 <Ssd1306::SetSleep(bool)>:
 1c4:	e3510000 	cmp	r1, #0
 1c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 1cc:	13a02901 	movne	r2, #16384	; 0x4000
 1d0:	e5d03010 	ldrb	r3, [r0, #16]
 1d4:	e24dd00c 	sub	sp, sp, #12
 1d8:	13432f80 	movtne	r2, #16256	; 0x3f80
 1dc:	03a02901 	moveq	r2, #16384	; 0x4000
 1e0:	03432f80 	movteq	r2, #16256	; 0x3f80
 1e4:	13e01051 	mvnne	r1, #81	; 0x51
 1e8:	05cd1004 	strbeq	r1, [sp, #4]
 1ec:	13a0c000 	movne	ip, #0
 1f0:	15cdc004 	strbne	ip, [sp, #4]
 1f4:	03e01050 	mvneq	r1, #80	; 0x50
 1f8:	e5cd1005 	strb	r1, [sp, #5]
 1fc:	e5900014 	ldr	r0, [r0, #20]
 200:	e582300c 	str	r3, [r2, #12]
 204:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 208:	e3a01002 	mov	r1, #2
 20c:	e28d0004 	add	r0, sp, #4
 210:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 214:	e28dd00c 	add	sp, sp, #12
 218:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000021c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
 21c:	e3510014 	cmp	r1, #20
 220:	812fff1e 	bxhi	lr
 224:	e5903008 	ldr	r3, [r0, #8]
 228:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 22c:	e1a05000 	mov	r5, r0
 230:	e1530002 	cmp	r3, r2
 234:	e24dd008 	sub	sp, sp, #8
 238:	e1a06002 	mov	r6, r2
 23c:	9a00002b 	bls	2f0 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0xd4>
 240:	e1a04081 	lsl	r4, r1, #1
 244:	e3a07901 	mov	r7, #16384	; 0x4000
 248:	e0814004 	add	r4, r1, r4
 24c:	e3a08000 	mov	r8, #0
 250:	e5d03019 	ldrb	r3, [r0, #25]
 254:	e1a04084 	lsl	r4, r4, #1
 258:	e3437f80 	movt	r7, #16256	; 0x3f80
 25c:	e3530000 	cmp	r3, #0
 260:	e5d03010 	ldrb	r3, [r0, #16]
 264:	e6ef4074 	uxtb	r4, r4
 268:	e5cd8004 	strb	r8, [sp, #4]
 26c:	12844004 	addne	r4, r4, #4
 270:	16ef4074 	uxtbne	r4, r4
 274:	e204200f 	and	r2, r4, #15
 278:	e5cd2005 	strb	r2, [sp, #5]
 27c:	e587300c 	str	r3, [r7, #12]
 280:	e5900014 	ldr	r0, [r0, #20]
 284:	e1a04224 	lsr	r4, r4, #4
 288:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 28c:	e3a01002 	mov	r1, #2
 290:	e28d0004 	add	r0, sp, #4
 294:	e3844010 	orr	r4, r4, #16
 298:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 29c:	e5d53010 	ldrb	r3, [r5, #16]
 2a0:	e5cd8004 	strb	r8, [sp, #4]
 2a4:	e5cd4005 	strb	r4, [sp, #5]
 2a8:	e587300c 	str	r3, [r7, #12]
 2ac:	e5950014 	ldr	r0, [r5, #20]
 2b0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2b4:	e3a01002 	mov	r1, #2
 2b8:	e28d0004 	add	r0, sp, #4
 2bc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2c0:	e1e02006 	mvn	r2, r6
 2c4:	e5d53010 	ldrb	r3, [r5, #16]
 2c8:	e202204f 	and	r2, r2, #79	; 0x4f
 2cc:	e1e02002 	mvn	r2, r2
 2d0:	e5cd8004 	strb	r8, [sp, #4]
 2d4:	e5cd2005 	strb	r2, [sp, #5]
 2d8:	e587300c 	str	r3, [r7, #12]
 2dc:	e5950014 	ldr	r0, [r5, #20]
 2e0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2e4:	e3a01002 	mov	r1, #2
 2e8:	e28d0004 	add	r0, sp, #4
 2ec:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2f0:	e28dd008 	add	sp, sp, #8
 2f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000002f8 <Ssd1306::ClearLine(unsigned long)>:
 2f8:	e5903008 	ldr	r3, [r0, #8]
 2fc:	e1530001 	cmp	r3, r1
 300:	312fff1e 	bxcc	lr
 304:	e92d4070 	push	{r4, r5, r6, lr}
 308:	e2414001 	sub	r4, r1, #1
 30c:	e6ef4074 	uxtb	r4, r4
 310:	e1a05000 	mov	r5, r0
 314:	e3a01000 	mov	r1, #0
 318:	e1a02004 	mov	r2, r4
 31c:	ebfffffe 	bl	21c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 320:	e5d52010 	ldrb	r2, [r5, #16]
 324:	e3a03901 	mov	r3, #16384	; 0x4000
 328:	e3433f80 	movt	r3, #16256	; 0x3f80
 32c:	e583200c 	str	r2, [r3, #12]
 330:	e5950014 	ldr	r0, [r5, #20]
 334:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 338:	e3000000 	movw	r0, #0
 33c:	e3a01081 	mov	r1, #129	; 0x81
 340:	e3400000 	movt	r0, #0
 344:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 348:	e1a02004 	mov	r2, r4
 34c:	e1a00005 	mov	r0, r5
 350:	e3a01000 	mov	r1, #0
 354:	e8bd4070 	pop	{r4, r5, r6, lr}
 358:	eafffffe 	b	21c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>

0000035c <Ssd1306::Cls()>:
 35c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 360:	e24dd014 	sub	sp, sp, #20
 364:	e5d07019 	ldrb	r7, [r0, #25]
 368:	e1a04000 	mov	r4, r0
 36c:	e3570000 	cmp	r7, #0
 370:	13a03014 	movne	r3, #20
 374:	03a03010 	moveq	r3, #16
 378:	e58d3004 	str	r3, [sp, #4]
 37c:	13a07004 	movne	r7, #4
 380:	e590301c 	ldr	r3, [r0, #28]
 384:	e3530000 	cmp	r3, #0
 388:	0a000053 	beq	4dc <Ssd1306::Cls()+0x180>
 38c:	e3a05901 	mov	r5, #16384	; 0x4000
 390:	e3009000 	movw	r9, #0
 394:	e3435f80 	movt	r5, #16256	; 0x3f80
 398:	e2878081 	add	r8, r7, #129	; 0x81
 39c:	e3409000 	movt	r9, #0
 3a0:	e3a0b000 	mov	fp, #0
 3a4:	e28d600c 	add	r6, sp, #12
 3a8:	e5d43010 	ldrb	r3, [r4, #16]
 3ac:	e3a0a000 	mov	sl, #0
 3b0:	e5cda00c 	strb	sl, [sp, #12]
 3b4:	e5cd700d 	strb	r7, [sp, #13]
 3b8:	e585300c 	str	r3, [r5, #12]
 3bc:	e5940014 	ldr	r0, [r4, #20]
 3c0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3c4:	e3a01002 	mov	r1, #2
 3c8:	e1a00006 	mov	r0, r6
 3cc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3d0:	e59d2004 	ldr	r2, [sp, #4]
 3d4:	e5d43010 	ldrb	r3, [r4, #16]
 3d8:	e5cd200d 	strb	r2, [sp, #13]
 3dc:	e5cda00c 	strb	sl, [sp, #12]
 3e0:	e585300c 	str	r3, [r5, #12]
 3e4:	e5940014 	ldr	r0, [r4, #20]
 3e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3ec:	e3a01002 	mov	r1, #2
 3f0:	e1a00006 	mov	r0, r6
 3f4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3f8:	e1e0300b 	mvn	r3, fp
 3fc:	e28bb001 	add	fp, fp, #1
 400:	e5d41010 	ldrb	r1, [r4, #16]
 404:	e203304f 	and	r3, r3, #79	; 0x4f
 408:	e1e03003 	mvn	r3, r3
 40c:	e5cd300d 	strb	r3, [sp, #13]
 410:	e5cda00c 	strb	sl, [sp, #12]
 414:	e585100c 	str	r1, [r5, #12]
 418:	e5940014 	ldr	r0, [r4, #20]
 41c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 420:	e3a01002 	mov	r1, #2
 424:	e1a00006 	mov	r0, r6
 428:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 42c:	e5d43010 	ldrb	r3, [r4, #16]
 430:	e585300c 	str	r3, [r5, #12]
 434:	e5940014 	ldr	r0, [r4, #20]
 438:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 43c:	e1a01008 	mov	r1, r8
 440:	e1a00009 	mov	r0, r9
 444:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 448:	e594301c 	ldr	r3, [r4, #28]
 44c:	e153000b 	cmp	r3, fp
 450:	8affffd4 	bhi	3a8 <Ssd1306::Cls()+0x4c>
 454:	e5d43010 	ldrb	r3, [r4, #16]
 458:	e3a05901 	mov	r5, #16384	; 0x4000
 45c:	e3435f80 	movt	r5, #16256	; 0x3f80
 460:	e5cd700d 	strb	r7, [sp, #13]
 464:	e3a07000 	mov	r7, #0
 468:	e5cd700c 	strb	r7, [sp, #12]
 46c:	e585300c 	str	r3, [r5, #12]
 470:	e5940014 	ldr	r0, [r4, #20]
 474:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 478:	e3a01002 	mov	r1, #2
 47c:	e1a00006 	mov	r0, r6
 480:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 484:	e59d3004 	ldr	r3, [sp, #4]
 488:	e5cd700c 	strb	r7, [sp, #12]
 48c:	e5cd300d 	strb	r3, [sp, #13]
 490:	e5d43010 	ldrb	r3, [r4, #16]
 494:	e585300c 	str	r3, [r5, #12]
 498:	e5940014 	ldr	r0, [r4, #20]
 49c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4a0:	e3a01002 	mov	r1, #2
 4a4:	e1a00006 	mov	r0, r6
 4a8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4ac:	e5d43010 	ldrb	r3, [r4, #16]
 4b0:	e3e0204f 	mvn	r2, #79	; 0x4f
 4b4:	e5cd200d 	strb	r2, [sp, #13]
 4b8:	e5cd700c 	strb	r7, [sp, #12]
 4bc:	e585300c 	str	r3, [r5, #12]
 4c0:	e5940014 	ldr	r0, [r4, #20]
 4c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4c8:	e3a01002 	mov	r1, #2
 4cc:	e1a00006 	mov	r0, r6
 4d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4d4:	e28dd014 	add	sp, sp, #20
 4d8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 4dc:	e28d600c 	add	r6, sp, #12
 4e0:	eaffffdb 	b	454 <Ssd1306::Cls()+0xf8>

000004e4 <Ssd1306::SetFlipVertically(bool)>:
 4e4:	e92d4070 	push	{r4, r5, r6, lr}
 4e8:	e2515000 	subs	r5, r1, #0
 4ec:	e5d03010 	ldrb	r3, [r0, #16]
 4f0:	e1a04000 	mov	r4, r0
 4f4:	e5900014 	ldr	r0, [r0, #20]
 4f8:	e24dd008 	sub	sp, sp, #8
 4fc:	0a000016 	beq	55c <Ssd1306::SetFlipVertically(bool)+0x78>
 500:	e3a05901 	mov	r5, #16384	; 0x4000
 504:	e3e0205f 	mvn	r2, #95	; 0x5f
 508:	e3435f80 	movt	r5, #16256	; 0x3f80
 50c:	e3a06000 	mov	r6, #0
 510:	e5cd2005 	strb	r2, [sp, #5]
 514:	e5cd6004 	strb	r6, [sp, #4]
 518:	e585300c 	str	r3, [r5, #12]
 51c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 520:	e3a01002 	mov	r1, #2
 524:	e28d0004 	add	r0, sp, #4
 528:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 52c:	e5d43010 	ldrb	r3, [r4, #16]
 530:	e3e0203f 	mvn	r2, #63	; 0x3f
 534:	e5cd6004 	strb	r6, [sp, #4]
 538:	e5cd2005 	strb	r2, [sp, #5]
 53c:	e585300c 	str	r3, [r5, #12]
 540:	e5940014 	ldr	r0, [r4, #20]
 544:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 548:	e3a01002 	mov	r1, #2
 54c:	e28d0004 	add	r0, sp, #4
 550:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 554:	e28dd008 	add	sp, sp, #8
 558:	e8bd8070 	pop	{r4, r5, r6, pc}
 55c:	e5cd5004 	strb	r5, [sp, #4]
 560:	e3a06901 	mov	r6, #16384	; 0x4000
 564:	e3436f80 	movt	r6, #16256	; 0x3f80
 568:	e3e0205e 	mvn	r2, #94	; 0x5e
 56c:	e5cd2005 	strb	r2, [sp, #5]
 570:	e586300c 	str	r3, [r6, #12]
 574:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 578:	e3a01002 	mov	r1, #2
 57c:	e28d0004 	add	r0, sp, #4
 580:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 584:	e5d43010 	ldrb	r3, [r4, #16]
 588:	e3e02037 	mvn	r2, #55	; 0x37
 58c:	e5cd5004 	strb	r5, [sp, #4]
 590:	e5cd2005 	strb	r2, [sp, #5]
 594:	e586300c 	str	r3, [r6, #12]
 598:	eaffffe8 	b	540 <Ssd1306::SetFlipVertically(bool)+0x5c>

0000059c <Ssd1306::Ssd1306()>:
 59c:	e3002000 	movw	r2, #0
 5a0:	e3a01d6a 	mov	r1, #6784	; 0x1a80
 5a4:	e3402000 	movt	r2, #0
 5a8:	e3a0c000 	mov	ip, #0
 5ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 5b0:	e3401006 	movt	r1, #6
 5b4:	e59fe030 	ldr	lr, [pc, #48]	; 5ec <Ssd1306::Ssd1306()+0x50>
 5b8:	e5801014 	str	r1, [r0, #20]
 5bc:	e3a01008 	mov	r1, #8
 5c0:	e5c0c00c 	strb	ip, [r0, #12]
 5c4:	e1c0c1b8 	strh	ip, [r0, #24]
 5c8:	e3a0c015 	mov	ip, #21
 5cc:	e5820088 	str	r0, [r2, #136]	; 0x88
 5d0:	e3a0203c 	mov	r2, #60	; 0x3c
 5d4:	e580e000 	str	lr, [r0]
 5d8:	e580c004 	str	ip, [r0, #4]
 5dc:	e5801008 	str	r1, [r0, #8]
 5e0:	e580101c 	str	r1, [r0, #28]
 5e4:	e5c02010 	strb	r2, [r0, #16]
 5e8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 5ec:	000002a8 	andeq	r0, r0, r8, lsr #5

000005f0 <Ssd1306::Ssd1306(TOledPanel)>:
 5f0:	e59f2074 	ldr	r2, [pc, #116]	; 66c <Ssd1306::Ssd1306(TOledPanel)+0x7c>
 5f4:	e3003000 	movw	r3, #0
 5f8:	e3403000 	movt	r3, #0
 5fc:	e3a0cd6a 	mov	ip, #6784	; 0x1a80
 600:	e340c006 	movt	ip, #6
 604:	e3510000 	cmp	r1, #0
 608:	e5802000 	str	r2, [r0]
 60c:	e3a02000 	mov	r2, #0
 610:	e580c014 	str	ip, [r0, #20]
 614:	e3a0c015 	mov	ip, #21
 618:	e5830088 	str	r0, [r3, #136]	; 0x88
 61c:	e3a0303c 	mov	r3, #60	; 0x3c
 620:	e5c0200c 	strb	r2, [r0, #12]
 624:	e5c01018 	strb	r1, [r0, #24]
 628:	e5c02019 	strb	r2, [r0, #25]
 62c:	e580c004 	str	ip, [r0, #4]
 630:	e5c03010 	strb	r3, [r0, #16]
 634:	0a000008 	beq	65c <Ssd1306::Ssd1306(TOledPanel)+0x6c>
 638:	e2411001 	sub	r1, r1, #1
 63c:	e3510001 	cmp	r1, #1
 640:	93a03004 	movls	r3, #4
 644:	95803008 	strls	r3, [r0, #8]
 648:	83a03004 	movhi	r3, #4
 64c:	83a02008 	movhi	r2, #8
 650:	85802008 	strhi	r2, [r0, #8]
 654:	e580301c 	str	r3, [r0, #28]
 658:	e12fff1e 	bx	lr
 65c:	e3a03008 	mov	r3, #8
 660:	e5803008 	str	r3, [r0, #8]
 664:	e580301c 	str	r3, [r0, #28]
 668:	e12fff1e 	bx	lr
 66c:	000002a8 	andeq	r0, r0, r8, lsr #5

00000670 <Ssd1306::Ssd1306(unsigned char, TOledPanel)>:
 670:	e59fc078 	ldr	ip, [pc, #120]	; 6f0 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x80>
 674:	e3510000 	cmp	r1, #0
 678:	e5c02018 	strb	r2, [r0, #24]
 67c:	e3003000 	movw	r3, #0
 680:	e580c000 	str	ip, [r0]
 684:	e3a0cd6a 	mov	ip, #6784	; 0x1a80
 688:	e340c006 	movt	ip, #6
 68c:	03a0103c 	moveq	r1, #60	; 0x3c
 690:	e3403000 	movt	r3, #0
 694:	e3520000 	cmp	r2, #0
 698:	e5c01010 	strb	r1, [r0, #16]
 69c:	e3a01000 	mov	r1, #0
 6a0:	e580c014 	str	ip, [r0, #20]
 6a4:	e3a0c015 	mov	ip, #21
 6a8:	e5c0100c 	strb	r1, [r0, #12]
 6ac:	e5c01019 	strb	r1, [r0, #25]
 6b0:	e5830088 	str	r0, [r3, #136]	; 0x88
 6b4:	e580c004 	str	ip, [r0, #4]
 6b8:	0a000008 	beq	6e0 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x70>
 6bc:	e2422001 	sub	r2, r2, #1
 6c0:	e3520001 	cmp	r2, #1
 6c4:	93a03004 	movls	r3, #4
 6c8:	95803008 	strls	r3, [r0, #8]
 6cc:	83a03004 	movhi	r3, #4
 6d0:	83a02008 	movhi	r2, #8
 6d4:	85802008 	strhi	r2, [r0, #8]
 6d8:	e580301c 	str	r3, [r0, #28]
 6dc:	e12fff1e 	bx	lr
 6e0:	e3a03008 	mov	r3, #8
 6e4:	e5803008 	str	r3, [r0, #8]
 6e8:	e580301c 	str	r3, [r0, #28]
 6ec:	e12fff1e 	bx	lr
 6f0:	000002a8 	andeq	r0, r0, r8, lsr #5

000006f4 <Ssd1306::CheckSH1106()>:
 6f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 6f8:	e3a05901 	mov	r5, #16384	; 0x4000
 6fc:	e3435f80 	movt	r5, #16256	; 0x3f80
 700:	e24dd018 	sub	sp, sp, #24
 704:	e5d03010 	ldrb	r3, [r0, #16]
 708:	e3a06000 	mov	r6, #0
 70c:	e5cd6010 	strb	r6, [sp, #16]
 710:	e1a04000 	mov	r4, r0
 714:	e5cd6011 	strb	r6, [sp, #17]
 718:	e3e0806f 	mvn	r8, #111	; 0x6f
 71c:	e585300c 	str	r3, [r5, #12]
 720:	e3e0704f 	mvn	r7, #79	; 0x4f
 724:	e5900014 	ldr	r0, [r0, #20]
 728:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 72c:	e3a01002 	mov	r1, #2
 730:	e28d0010 	add	r0, sp, #16
 734:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 738:	e5d43010 	ldrb	r3, [r4, #16]
 73c:	e5cd6010 	strb	r6, [sp, #16]
 740:	e5cd8011 	strb	r8, [sp, #17]
 744:	e585300c 	str	r3, [r5, #12]
 748:	e5940014 	ldr	r0, [r4, #20]
 74c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 750:	e3a01002 	mov	r1, #2
 754:	e28d0010 	add	r0, sp, #16
 758:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 75c:	e5d43010 	ldrb	r3, [r4, #16]
 760:	e5cd6010 	strb	r6, [sp, #16]
 764:	e5cd7011 	strb	r7, [sp, #17]
 768:	e585300c 	str	r3, [r5, #12]
 76c:	e5940014 	ldr	r0, [r4, #20]
 770:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 774:	e3a01002 	mov	r1, #2
 778:	e28d0010 	add	r0, sp, #16
 77c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 780:	e5d42010 	ldrb	r2, [r4, #16]
 784:	e3003000 	movw	r3, #0
 788:	e3403000 	movt	r3, #0
 78c:	e8930003 	ldm	r3, {r0, r1}
 790:	e58d0008 	str	r0, [sp, #8]
 794:	e5cd100c 	strb	r1, [sp, #12]
 798:	e585200c 	str	r2, [r5, #12]
 79c:	e5940014 	ldr	r0, [r4, #20]
 7a0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7a4:	e3a01005 	mov	r1, #5
 7a8:	e28d0008 	add	r0, sp, #8
 7ac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7b0:	e5d43010 	ldrb	r3, [r4, #16]
 7b4:	e5cd6010 	strb	r6, [sp, #16]
 7b8:	e5cd6011 	strb	r6, [sp, #17]
 7bc:	e585300c 	str	r3, [r5, #12]
 7c0:	e5940014 	ldr	r0, [r4, #20]
 7c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7c8:	e3a01002 	mov	r1, #2
 7cc:	e28d0010 	add	r0, sp, #16
 7d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7d4:	e5d43010 	ldrb	r3, [r4, #16]
 7d8:	e5cd8011 	strb	r8, [sp, #17]
 7dc:	e5cd6010 	strb	r6, [sp, #16]
 7e0:	e585300c 	str	r3, [r5, #12]
 7e4:	e5940014 	ldr	r0, [r4, #20]
 7e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7ec:	e3a01002 	mov	r1, #2
 7f0:	e28d0010 	add	r0, sp, #16
 7f4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7f8:	e5d43010 	ldrb	r3, [r4, #16]
 7fc:	e5cd6010 	strb	r6, [sp, #16]
 800:	e5cd7011 	strb	r7, [sp, #17]
 804:	e585300c 	str	r3, [r5, #12]
 808:	e5940014 	ldr	r0, [r4, #20]
 80c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 810:	e3a01002 	mov	r1, #2
 814:	e28d0010 	add	r0, sp, #16
 818:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 81c:	e5d43010 	ldrb	r3, [r4, #16]
 820:	e5940014 	ldr	r0, [r4, #20]
 824:	e58d6010 	str	r6, [sp, #16]
 828:	e5cd6014 	strb	r6, [sp, #20]
 82c:	e585300c 	str	r3, [r5, #12]
 830:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 834:	e3a01001 	mov	r1, #1
 838:	e3a03040 	mov	r3, #64	; 0x40
 83c:	e5cd3004 	strb	r3, [sp, #4]
 840:	e28d0004 	add	r0, sp, #4
 844:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 848:	e5d43010 	ldrb	r3, [r4, #16]
 84c:	e5940014 	ldr	r0, [r4, #20]
 850:	e585300c 	str	r3, [r5, #12]
 854:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 858:	e3a01005 	mov	r1, #5
 85c:	e28d0010 	add	r0, sp, #16
 860:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 864:	e28d3009 	add	r3, sp, #9
 868:	e28d2011 	add	r2, sp, #17
 86c:	e28dc00d 	add	ip, sp, #13
 870:	ea000001 	b	87c <Ssd1306::CheckSH1106()+0x188>
 874:	e15c0003 	cmp	ip, r3
 878:	0a000007 	beq	89c <Ssd1306::CheckSH1106()+0x1a8>
 87c:	e4d30001 	ldrb	r0, [r3], #1
 880:	e4d21001 	ldrb	r1, [r2], #1
 884:	e1500001 	cmp	r0, r1
 888:	0afffff9 	beq	874 <Ssd1306::CheckSH1106()+0x180>
 88c:	e3a03000 	mov	r3, #0
 890:	e5c43019 	strb	r3, [r4, #25]
 894:	e28dd018 	add	sp, sp, #24
 898:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 89c:	e3a03001 	mov	r3, #1
 8a0:	e5c43019 	strb	r3, [r4, #25]
 8a4:	e28dd018 	add	sp, sp, #24
 8a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000008ac <Ssd1306::Start()>:
 8ac:	e3a03901 	mov	r3, #16384	; 0x4000
 8b0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
 8b4:	e1a05000 	mov	r5, r0
 8b8:	e5d04010 	ldrb	r4, [r0, #16]
 8bc:	e24dd00c 	sub	sp, sp, #12
 8c0:	e3433f80 	movt	r3, #16256	; 0x3f80
 8c4:	e5900014 	ldr	r0, [r0, #20]
 8c8:	e583400c 	str	r4, [r3, #12]
 8cc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 8d0:	e2443030 	sub	r3, r4, #48	; 0x30
 8d4:	e2444050 	sub	r4, r4, #80	; 0x50
 8d8:	e354000f 	cmp	r4, #15
 8dc:	83530007 	cmphi	r3, #7
 8e0:	93a04001 	movls	r4, #1
 8e4:	83a04000 	movhi	r4, #0
 8e8:	8a00003c 	bhi	9e0 <Ssd1306::Start()+0x134>
 8ec:	e3a01001 	mov	r1, #1
 8f0:	e28d0004 	add	r0, sp, #4
 8f4:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 8f8:	e3500000 	cmp	r0, #0
 8fc:	1a000040 	bne	a04 <Ssd1306::Start()+0x158>
 900:	e5d57018 	ldrb	r7, [r5, #24]
 904:	e3570000 	cmp	r7, #0
 908:	0a000041 	beq	a14 <Ssd1306::Start()+0x168>
 90c:	e2477001 	sub	r7, r7, #1
 910:	e3570001 	cmp	r7, #1
 914:	8a00003a 	bhi	a04 <Ssd1306::Start()+0x158>
 918:	e59f4144 	ldr	r4, [pc, #324]	; a64 <Ssd1306::Start()+0x1b8>
 91c:	e3a07901 	mov	r7, #16384	; 0x4000
 920:	e3437f80 	movt	r7, #16256	; 0x3f80
 924:	e3a030ae 	mov	r3, #174	; 0xae
 928:	e28d6004 	add	r6, sp, #4
 92c:	e3a09000 	mov	r9, #0
 930:	e2848017 	add	r8, r4, #23
 934:	ea000000 	b	93c <Ssd1306::Start()+0x90>
 938:	e5f43001 	ldrb	r3, [r4, #1]!
 93c:	e5d52010 	ldrb	r2, [r5, #16]
 940:	e5cd3005 	strb	r3, [sp, #5]
 944:	e5cd9004 	strb	r9, [sp, #4]
 948:	e587200c 	str	r2, [r7, #12]
 94c:	e5950014 	ldr	r0, [r5, #20]
 950:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 954:	e3a01002 	mov	r1, #2
 958:	e1a00006 	mov	r0, r6
 95c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 960:	e1540008 	cmp	r4, r8
 964:	1afffff3 	bne	938 <Ssd1306::Start()+0x8c>
 968:	e59f30f8 	ldr	r3, [pc, #248]	; a68 <Ssd1306::Start()+0x1bc>
 96c:	e3a04000 	mov	r4, #0
 970:	e2832086 	add	r2, r3, #134	; 0x86
 974:	e5e34001 	strb	r4, [r3, #1]!
 978:	e1530002 	cmp	r3, r2
 97c:	1afffffc 	bne	974 <Ssd1306::Start()+0xc8>
 980:	e3003000 	movw	r3, #0
 984:	e3a02040 	mov	r2, #64	; 0x40
 988:	e3403000 	movt	r3, #0
 98c:	e1a00005 	mov	r0, r5
 990:	e5c32000 	strb	r2, [r3]
 994:	ebfffffe 	bl	6f4 <Ssd1306::CheckSH1106()>
 998:	e1a00005 	mov	r0, r5
 99c:	ebfffffe 	bl	35c <Ssd1306::Cls()>
 9a0:	e5d52010 	ldrb	r2, [r5, #16]
 9a4:	e3a03901 	mov	r3, #16384	; 0x4000
 9a8:	e3433f80 	movt	r3, #16256	; 0x3f80
 9ac:	e3e01050 	mvn	r1, #80	; 0x50
 9b0:	e5cd4004 	strb	r4, [sp, #4]
 9b4:	e3a04001 	mov	r4, #1
 9b8:	e5cd1005 	strb	r1, [sp, #5]
 9bc:	e583200c 	str	r2, [r3, #12]
 9c0:	e5950014 	ldr	r0, [r5, #20]
 9c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 9c8:	e3a01002 	mov	r1, #2
 9cc:	e1a00006 	mov	r0, r6
 9d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 9d4:	e1a00004 	mov	r0, r4
 9d8:	e28dd00c 	add	sp, sp, #12
 9dc:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
 9e0:	e1a01004 	mov	r1, r4
 9e4:	e1a00004 	mov	r0, r4
 9e8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 9ec:	e3500000 	cmp	r0, #0
 9f0:	1afffff7 	bne	9d4 <Ssd1306::Start()+0x128>
 9f4:	e5d57018 	ldrb	r7, [r5, #24]
 9f8:	e3570000 	cmp	r7, #0
 9fc:	1affffc2 	bne	90c <Ssd1306::Start()+0x60>
 a00:	ea000003 	b	a14 <Ssd1306::Start()+0x168>
 a04:	e3a04000 	mov	r4, #0
 a08:	e1a00004 	mov	r0, r4
 a0c:	e28dd00c 	add	sp, sp, #12
 a10:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
 a14:	e59f4050 	ldr	r4, [pc, #80]	; a6c <Ssd1306::Start()+0x1c0>
 a18:	e3a08901 	mov	r8, #16384	; 0x4000
 a1c:	e3438f80 	movt	r8, #16256	; 0x3f80
 a20:	e3a030ae 	mov	r3, #174	; 0xae
 a24:	e28d6004 	add	r6, sp, #4
 a28:	e2849017 	add	r9, r4, #23
 a2c:	ea000000 	b	a34 <Ssd1306::Start()+0x188>
 a30:	e5f43001 	ldrb	r3, [r4, #1]!
 a34:	e5d52010 	ldrb	r2, [r5, #16]
 a38:	e5cd3005 	strb	r3, [sp, #5]
 a3c:	e5cd7004 	strb	r7, [sp, #4]
 a40:	e588200c 	str	r2, [r8, #12]
 a44:	e5950014 	ldr	r0, [r5, #20]
 a48:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a4c:	e3a01002 	mov	r1, #2
 a50:	e1a00006 	mov	r0, r6
 a54:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a58:	e1540009 	cmp	r4, r9
 a5c:	1afffff3 	bne	a30 <Ssd1306::Start()+0x184>
 a60:	eaffffc0 	b	968 <Ssd1306::Start()+0xbc>
 a64:	000002e0 	andeq	r0, r0, r0, ror #5
 a68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 a6c:	000002f8 	strdeq	r0, [r0], -r8

00000a70 <Ssd1306::Text(char const*, unsigned long)>:
 a70:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 a74:	e1a04000 	mov	r4, r0
 a78:	e5903004 	ldr	r3, [r0, #4]
 a7c:	e1520003 	cmp	r2, r3
 a80:	31a05002 	movcc	r5, r2
 a84:	21a05003 	movcs	r5, r3
 a88:	e3550000 	cmp	r5, #0
 a8c:	0a000014 	beq	ae4 <Ssd1306::Text(char const*, unsigned long)+0x74>
 a90:	e241a001 	sub	sl, r1, #1
 a94:	e3006000 	movw	r6, #0
 a98:	e08a8005 	add	r8, sl, r5
 a9c:	e3a07901 	mov	r7, #16384	; 0x4000
 aa0:	e3406000 	movt	r6, #0
 aa4:	e3a09007 	mov	r9, #7
 aa8:	e3437f80 	movt	r7, #16256	; 0x3f80
 aac:	e5fa3001 	ldrb	r3, [sl, #1]!
 ab0:	e1a0b006 	mov	fp, r6
 ab4:	e2433020 	sub	r3, r3, #32
 ab8:	e353005f 	cmp	r3, #95	; 0x5f
 abc:	902b6399 	mlals	fp, r9, r3, r6
 ac0:	e5d43010 	ldrb	r3, [r4, #16]
 ac4:	e587300c 	str	r3, [r7, #12]
 ac8:	e5940014 	ldr	r0, [r4, #20]
 acc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 ad0:	e3a01007 	mov	r1, #7
 ad4:	e1a0000b 	mov	r0, fp
 ad8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 adc:	e15a0008 	cmp	sl, r8
 ae0:	1afffff1 	bne	aac <Ssd1306::Text(char const*, unsigned long)+0x3c>
 ae4:	e5d4300c 	ldrb	r3, [r4, #12]
 ae8:	e3530000 	cmp	r3, #0
 aec:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 af0:	e5943004 	ldr	r3, [r4, #4]
 af4:	e3a02000 	mov	r2, #0
 af8:	e5c4200c 	strb	r2, [r4, #12]
 afc:	e1530005 	cmp	r3, r5
 b00:	98bd8ff8 	popls	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 b04:	e3a07901 	mov	r7, #16384	; 0x4000
 b08:	e3006000 	movw	r6, #0
 b0c:	e3437f80 	movt	r7, #16256	; 0x3f80
 b10:	e3406000 	movt	r6, #0
 b14:	e5d43010 	ldrb	r3, [r4, #16]
 b18:	e2855001 	add	r5, r5, #1
 b1c:	e587300c 	str	r3, [r7, #12]
 b20:	e5940014 	ldr	r0, [r4, #20]
 b24:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 b28:	e3a01007 	mov	r1, #7
 b2c:	e1a00006 	mov	r0, r6
 b30:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b34:	e5943004 	ldr	r3, [r4, #4]
 b38:	e1530005 	cmp	r3, r5
 b3c:	8afffff4 	bhi	b14 <Ssd1306::Text(char const*, unsigned long)+0xa4>
 b40:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00000b44 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
 b44:	e590c008 	ldr	ip, [r0, #8]
 b48:	e15c0001 	cmp	ip, r1
 b4c:	312fff1e 	bxcc	lr
 b50:	e2411001 	sub	r1, r1, #1
 b54:	e92d4070 	push	{r4, r5, r6, lr}
 b58:	e1a04000 	mov	r4, r0
 b5c:	e1a05002 	mov	r5, r2
 b60:	e1a06003 	mov	r6, r3
 b64:	e6ef2071 	uxtb	r2, r1
 b68:	e3a01000 	mov	r1, #0
 b6c:	ebfffffe 	bl	21c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 b70:	e1a02006 	mov	r2, r6
 b74:	e1a01005 	mov	r1, r5
 b78:	e1a00004 	mov	r0, r4
 b7c:	e8bd4070 	pop	{r4, r5, r6, lr}
 b80:	eafffffe 	b	a70 <Ssd1306::Text(char const*, unsigned long)>

00000b84 <Ssd1306::InitMembers()>:
 b84:	e5d03018 	ldrb	r3, [r0, #24]
 b88:	e3a02015 	mov	r2, #21
 b8c:	e5802004 	str	r2, [r0, #4]
 b90:	e3530000 	cmp	r3, #0
 b94:	0a000008 	beq	bbc <Ssd1306::InitMembers()+0x38>
 b98:	e2433001 	sub	r3, r3, #1
 b9c:	e3530001 	cmp	r3, #1
 ba0:	93a03004 	movls	r3, #4
 ba4:	95803008 	strls	r3, [r0, #8]
 ba8:	83a03004 	movhi	r3, #4
 bac:	83a02008 	movhi	r2, #8
 bb0:	85802008 	strhi	r2, [r0, #8]
 bb4:	e580301c 	str	r3, [r0, #28]
 bb8:	e12fff1e 	bx	lr
 bbc:	e3a03008 	mov	r3, #8
 bc0:	e5803008 	str	r3, [r0, #8]
 bc4:	e580301c 	str	r3, [r0, #28]
 bc8:	e12fff1e 	bx	lr

00000bcc <Ssd1306::SendCommand(unsigned char)>:
 bcc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 bd0:	e3a03901 	mov	r3, #16384	; 0x4000
 bd4:	e5d02010 	ldrb	r2, [r0, #16]
 bd8:	e24dd00c 	sub	sp, sp, #12
 bdc:	e3433f80 	movt	r3, #16256	; 0x3f80
 be0:	e5cd1005 	strb	r1, [sp, #5]
 be4:	e3a01000 	mov	r1, #0
 be8:	e5cd1004 	strb	r1, [sp, #4]
 bec:	e583200c 	str	r2, [r3, #12]
 bf0:	e5900014 	ldr	r0, [r0, #20]
 bf4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 bf8:	e3a01002 	mov	r1, #2
 bfc:	e28d0004 	add	r0, sp, #4
 c00:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 c04:	e28dd00c 	add	sp, sp, #12
 c08:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000c0c <Ssd1306::SendData(unsigned char const*, unsigned long)>:
 c0c:	e3a03901 	mov	r3, #16384	; 0x4000
 c10:	e92d4070 	push	{r4, r5, r6, lr}
 c14:	e1a04001 	mov	r4, r1
 c18:	e5d0c010 	ldrb	ip, [r0, #16]
 c1c:	e1a05002 	mov	r5, r2
 c20:	e3433f80 	movt	r3, #16256	; 0x3f80
 c24:	e583c00c 	str	ip, [r3, #12]
 c28:	e5900014 	ldr	r0, [r0, #20]
 c2c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 c30:	e1a01005 	mov	r1, r5
 c34:	e1a00004 	mov	r0, r4
 c38:	e8bd4070 	pop	{r4, r5, r6, lr}
 c3c:	eafffffe 	b	0 <bcm2835_i2c_write>

00000c40 <Ssd1306::SetCursorOn()>:
 c40:	e12fff1e 	bx	lr

00000c44 <Ssd1306::SetCursorBlinkOn()>:
 c44:	e12fff1e 	bx	lr

00000c48 <Ssd1306::SetCursorOff()>:
 c48:	e12fff1e 	bx	lr

00000c4c <Ssd1306::SetColumnRow(unsigned char, unsigned char)>:
 c4c:	e12fff1e 	bx	lr

00000c50 <Ssd1306::DumpShadowRam()>:
 c50:	e12fff1e 	bx	lr

Disassembly of section .bss:

00000000 <_ClearBuffer>:
	...

00000088 <Ssd1306::s_pThis>:
  88:	00000000 	andeq	r0, r0, r0

Disassembly of section .text._ZN7Ssd1306D2Ev:

00000000 <Ssd1306::~Ssd1306()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.LC0>:
   0:	31314853 	teqcc	r1, r3, asr r8
   4:	00003630 	andeq	r3, r0, r0, lsr r6

00000008 <.LC1>:
   8:	31445353 	cmpcc	r4, r3, asr r3
   c:	00363033 	eorseq	r3, r6, r3, lsr r0

00000010 <.LC2>:
  10:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
  14:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
  18:	000a2964 	andeq	r2, sl, r4, ror #18

0000001c <.LC3>:
  1c:	aaeeaa40 	bge	ffbaa924 <Ssd1306::DumpShadowRam()+0xffba9cd4>
  20:	Address 0x0000000000000020 is out of bounds.


Disassembly of section .text._ZN7Ssd1306D0Ev:

00000000 <Ssd1306::~Ssd1306()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

00000000 <_OledFont8x6>:
   0:	00000040 	andeq	r0, r0, r0, asr #32
   4:	40000000 	andmi	r0, r0, r0
   8:	005f0000 	subseq	r0, pc, r0
   c:	00400000 	subeq	r0, r0, r0
  10:	00070007 	andeq	r0, r7, r7
  14:	7f144000 	svcvc	0x00144000
  18:	00147f14 	andseq	r7, r4, r4, lsl pc
  1c:	7f2a2440 	svcvc	0x002a2440
  20:	4000122a 	andmi	r1, r0, sl, lsr #4
  24:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
  28:	36400062 	strbcc	r0, [r0], -r2, rrx
  2c:	50205649 	eorpl	r5, r0, r9, asr #12
  30:	08004000 	stmdaeq	r0, {lr}
  34:	00000307 	andeq	r0, r0, r7, lsl #6
  38:	221c0040 	andscs	r0, ip, #64	; 0x40
  3c:	40000041 	andmi	r0, r0, r1, asr #32
  40:	1c224100 	stfnes	f4, [r2], #-0
  44:	2a400000 	bcs	100004c <Ssd1306::DumpShadowRam()+0xfff3fc>
  48:	2a1c7f1c 	bcs	71fcc0 <Ssd1306::DumpShadowRam()+0x71f070>
  4c:	08084000 	stmdaeq	r8, {lr}
  50:	0008083e 	andeq	r0, r8, lr, lsr r8
  54:	70800040 	addvc	r0, r0, r0, asr #32
  58:	40000030 	andmi	r0, r0, r0, lsr r0
  5c:	08080808 	stmdaeq	r8, {r3, fp}
  60:	00400008 	subeq	r0, r0, r8
  64:	00606000 	rsbeq	r6, r0, r0
  68:	10204000 	eorne	r4, r0, r0
  6c:	00020408 	andeq	r0, r2, r8, lsl #8
  70:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
  74:	40003e45 	andmi	r3, r0, r5, asr #28
  78:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
  7c:	72400000 	subvc	r0, r0, #0
  80:	46494949 	strbmi	r4, [r9], -r9, asr #18
  84:	41214000 			; <UNDEFINED> instruction: 0x41214000
  88:	00334d49 	eorseq	r4, r3, r9, asr #26
  8c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
  90:	4000107f 	andmi	r1, r0, pc, ror r0
  94:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
  98:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
  9c:	3149494a 	cmpcc	r9, sl, asr #18
  a0:	21414000 	mrscs	r4, (UNDEF: 65)
  a4:	00070911 	andeq	r0, r7, r1, lsl r9
  a8:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
  ac:	40003649 	andmi	r3, r0, r9, asr #12
  b0:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
  b4:	0040001e 	subeq	r0, r0, lr, lsl r0
  b8:	00001400 	andeq	r1, r0, r0, lsl #8
  bc:	40004000 	andmi	r4, r0, r0
  c0:	00000034 	andeq	r0, r0, r4, lsr r0
  c4:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
  c8:	40004122 	andmi	r4, r0, r2, lsr #2
  cc:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
  d0:	00400014 	subeq	r0, r0, r4, lsl r0
  d4:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
  d8:	01024000 	mrseq	r4, (UNDEF: 2)
  dc:	00060959 	andeq	r0, r6, r9, asr r9
  e0:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
  e4:	40004e59 	andmi	r4, r0, r9, asr lr
  e8:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
  ec:	7f40007c 	svcvc	0x0040007c
  f0:	36494949 	strbcc	r4, [r9], -r9, asr #18
  f4:	413e4000 	teqmi	lr, r0
  f8:	00224141 	eoreq	r4, r2, r1, asr #2
  fc:	41417f40 	cmpmi	r1, r0, asr #30
 100:	40003e41 	andmi	r3, r0, r1, asr #28
 104:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 108:	7f400041 	svcvc	0x00400041
 10c:	01090909 	tsteq	r9, r9, lsl #18
 110:	413e4000 	teqmi	lr, r0
 114:	00735141 	rsbseq	r5, r3, r1, asr #2
 118:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 11c:	40007f08 	andmi	r7, r0, r8, lsl #30
 120:	417f4100 	cmnmi	pc, r0, lsl #2
 124:	20400000 	subcs	r0, r0, r0
 128:	013f4140 	teqeq	pc, r0, asr #2
 12c:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 130:	00412214 	subeq	r2, r1, r4, lsl r2
 134:	40407f40 	submi	r7, r0, r0, asr #30
 138:	40004040 	andmi	r4, r0, r0, asr #32
 13c:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 140:	7f40007f 	svcvc	0x0040007f
 144:	7f100804 	svcvc	0x00100804
 148:	413e4000 	teqmi	lr, r0
 14c:	003e4141 	eorseq	r4, lr, r1, asr #2
 150:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 154:	40000609 	andmi	r0, r0, r9, lsl #12
 158:	2151413e 	cmpcs	r1, lr, lsr r1
 15c:	7f40005e 	svcvc	0x0040005e
 160:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 164:	49264000 	stmdbmi	r6!, {lr}
 168:	00324949 	eorseq	r4, r2, r9, asr #18
 16c:	7f010340 	svcvc	0x00010340
 170:	40000301 	andmi	r0, r0, r1, lsl #6
 174:	4040403f 	submi	r4, r0, pc, lsr r0
 178:	1f40003f 	svcne	0x0040003f
 17c:	1f204020 	svcne	0x00204020
 180:	403f4000 	eorsmi	r4, pc, r0
 184:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 188:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 18c:	40006314 	andmi	r6, r0, r4, lsl r3
 190:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 194:	61400003 	cmpvs	r0, r3
 198:	434d4959 	movtmi	r4, #55641	; 0xd959
 19c:	7f004000 	svcvc	0x00004000
 1a0:	00414141 	subeq	r4, r1, r1, asr #2
 1a4:	08040240 	stmdaeq	r4, {r6, r9}
 1a8:	40002010 	andmi	r2, r0, r0, lsl r0
 1ac:	41414100 	mrsmi	r4, (UNDEF: 81)
 1b0:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 1b4:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 1b8:	40404000 	submi	r4, r0, r0
 1bc:	00404040 	subeq	r4, r0, r0, asr #32
 1c0:	07030040 	streq	r0, [r3, -r0, asr #32]
 1c4:	40000008 	andmi	r0, r0, r8
 1c8:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 1cc:	7f400040 	svcvc	0x00400040
 1d0:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 1d4:	44384000 	ldrtmi	r4, [r8], #-0
 1d8:	00284444 	eoreq	r4, r8, r4, asr #8
 1dc:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 1e0:	40007f28 	andmi	r7, r0, r8, lsr #30
 1e4:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 1e8:	00400018 	subeq	r0, r0, r8, lsl r0
 1ec:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 1f0:	a4184000 	ldrge	r4, [r8], #-0
 1f4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 1f8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 1fc:	40007804 	andmi	r7, r0, r4, lsl #16
 200:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 204:	20400000 	subcs	r0, r0, r0
 208:	003d4040 	eorseq	r4, sp, r0, asr #32
 20c:	107f4000 	rsbsne	r4, pc, r0
 210:	00004428 	andeq	r4, r0, r8, lsr #8
 214:	7f410040 	svcvc	0x00410040
 218:	40000040 	andmi	r0, r0, r0, asr #32
 21c:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 220:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 224:	78040408 	stmdavc	r4, {r3, sl}
 228:	44384000 	ldrtmi	r4, [r8], #-0
 22c:	00384444 	eorseq	r4, r8, r4, asr #8
 230:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 234:	40001824 	andmi	r1, r0, r4, lsr #16
 238:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 23c:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 240:	08040408 	stmdaeq	r4, {r3, sl}
 244:	54484000 	strbpl	r4, [r8], #-0
 248:	00245454 	eoreq	r5, r4, r4, asr r4
 24c:	3f040440 	svccc	0x00040440
 250:	40002444 	andmi	r2, r0, r4, asr #8
 254:	2040403c 	subcs	r4, r0, ip, lsr r0
 258:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 25c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 260:	403c4000 	eorsmi	r4, ip, r0
 264:	003c4030 	eorseq	r4, ip, r0, lsr r0
 268:	10284440 	eorne	r4, r8, r0, asr #8
 26c:	40004428 	andmi	r4, r0, r8, lsr #8
 270:	9090904c 	addsls	r9, r0, ip, asr #32
 274:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 278:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 27c:	08004000 	stmdaeq	r0, {lr}
 280:	00004136 	andeq	r4, r0, r6, lsr r1
 284:	77000040 	strvc	r0, [r0, -r0, asr #32]
 288:	40000000 	andmi	r0, r0, r0
 28c:	08364100 	ldmdaeq	r6!, {r8, lr}
 290:	02400000 	subeq	r0, r0, #0
 294:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 298:	263c4000 	ldrtcs	r4, [ip], -r0
 29c:	003c2623 	eorseq	r2, ip, r3, lsr #12

000002a0 <vtable for Ssd1306>:
	...

000002e0 <oled_128x32_init>:
 2e0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 2e4:	4000d31f 	andmi	sp, r0, pc, lsl r3
 2e8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 2ec:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 2f0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 2f4:	a6a440db 	ssatge	r4, #5, fp, asr #1

000002f8 <oled_128x64_init>:
 2f8:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 2fc:	4000d33f 	andmi	sp, r0, pc, lsr r3
 300:	0020148d 	eoreq	r1, r0, sp, lsl #9
 304:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 308:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 30c:	a6a440db 	ssatge	r4, #5, fp, asr #1

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


ssd1311.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000007 	andeq	r0, r0, r7

Disassembly of section .group:

00000000 <Ssd1311::~Ssd1311()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000008 	andeq	r0, r0, r8
   8:	0000000a 	andeq	r0, r0, sl
   c:	0000000b 	andeq	r0, r0, fp

Disassembly of section .text:

00000000 <Ssd1311::SetCursor(unsigned long)>:
   0:	e12fff1e 	bx	lr

00000004 <Ssd1311::PrintInfo()>:
   4:	e1a03000 	mov	r3, r0
   8:	e3000000 	movw	r0, #0
   c:	e3400000 	movt	r0, #0
  10:	e5932004 	ldr	r2, [r3, #4]
  14:	e5931008 	ldr	r1, [r3, #8]
  18:	eafffffe 	b	0 <printf>

0000001c <Ssd1311::PutString(char const*)>:
  1c:	e92d4070 	push	{r4, r5, r6, lr}
  20:	e1a02001 	mov	r2, r1
  24:	e59fc0c4 	ldr	ip, [pc, #196]	; f0 <Ssd1311::PutString(char const*)+0xd4>
  28:	e2814014 	add	r4, r1, #20
  2c:	ea000003 	b	40 <Ssd1311::PutString(char const*)+0x24>
  30:	e1520004 	cmp	r2, r4
  34:	e1a03002 	mov	r3, r2
  38:	e4cce001 	strb	lr, [ip], #1
  3c:	0a000029 	beq	e8 <Ssd1311::PutString(char const*)+0xcc>
  40:	e5d2e000 	ldrb	lr, [r2]
  44:	e1a03002 	mov	r3, r2
  48:	e0445002 	sub	r5, r4, r2
  4c:	e2822001 	add	r2, r2, #1
  50:	e35e0000 	cmp	lr, #0
  54:	1afffff5 	bne	30 <Ssd1311::PutString(char const*)+0x14>
  58:	e5d0200c 	ldrb	r2, [r0, #12]
  5c:	e3520000 	cmp	r2, #0
  60:	0a000015 	beq	bc <Ssd1311::PutString(char const*)+0xa0>
  64:	e0433001 	sub	r3, r3, r1
  68:	e3a02000 	mov	r2, #0
  6c:	e5c0200c 	strb	r2, [r0, #12]
  70:	e3530013 	cmp	r3, #19
  74:	8a000005 	bhi	90 <Ssd1311::PutString(char const*)+0x74>
  78:	e2633014 	rsb	r3, r3, #20
  7c:	e3a02020 	mov	r2, #32
  80:	e08c3003 	add	r3, ip, r3
  84:	e4cc2001 	strb	r2, [ip], #1
  88:	e153000c 	cmp	r3, ip
  8c:	1afffffc 	bne	84 <Ssd1311::PutString(char const*)+0x68>
  90:	e5d02010 	ldrb	r2, [r0, #16]
  94:	e3a03901 	mov	r3, #16384	; 0x4000
  98:	e3433f80 	movt	r3, #16256	; 0x3f80
  9c:	e583200c 	str	r2, [r3, #12]
  a0:	e5900014 	ldr	r0, [r0, #20]
  a4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  a8:	e3000000 	movw	r0, #0
  ac:	e3a01015 	mov	r1, #21
  b0:	e8bd4070 	pop	{r4, r5, r6, lr}
  b4:	e3400000 	movt	r0, #0
  b8:	eafffffe 	b	0 <bcm2835_i2c_write>
  bc:	e5d02010 	ldrb	r2, [r0, #16]
  c0:	e3a03901 	mov	r3, #16384	; 0x4000
  c4:	e3433f80 	movt	r3, #16256	; 0x3f80
  c8:	e583200c 	str	r2, [r3, #12]
  cc:	e5900014 	ldr	r0, [r0, #20]
  d0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  d4:	e3000000 	movw	r0, #0
  d8:	e2651015 	rsb	r1, r5, #21
  dc:	e3400000 	movt	r0, #0
  e0:	e8bd4070 	pop	{r4, r5, r6, lr}
  e4:	eafffffe 	b	0 <bcm2835_i2c_write>
  e8:	e3a05000 	mov	r5, #0
  ec:	eaffffd9 	b	58 <Ssd1311::PutString(char const*)+0x3c>
  f0:	00000001 	andeq	r0, r0, r1

000000f4 <Ssd1311::Cls()>:
  f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  f8:	e3a03901 	mov	r3, #16384	; 0x4000
  fc:	e5d02010 	ldrb	r2, [r0, #16]
 100:	e24dd00c 	sub	sp, sp, #12
 104:	e3433f80 	movt	r3, #16256	; 0x3f80
 108:	e3e0107f 	mvn	r1, #127	; 0x7f
 10c:	e5cd1004 	strb	r1, [sp, #4]
 110:	e3a01001 	mov	r1, #1
 114:	e5cd1005 	strb	r1, [sp, #5]
 118:	e583200c 	str	r2, [r3, #12]
 11c:	e5900014 	ldr	r0, [r0, #20]
 120:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 124:	e3a01002 	mov	r1, #2
 128:	e28d0004 	add	r0, sp, #4
 12c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 130:	e28dd00c 	add	sp, sp, #12
 134:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000138 <Ssd1311::PutChar(int)>:
 138:	e3a03901 	mov	r3, #16384	; 0x4000
 13c:	e3a0c040 	mov	ip, #64	; 0x40
 140:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 144:	e24dd00c 	sub	sp, sp, #12
 148:	e5d02010 	ldrb	r2, [r0, #16]
 14c:	e201107f 	and	r1, r1, #127	; 0x7f
 150:	e3433f80 	movt	r3, #16256	; 0x3f80
 154:	e5cdc004 	strb	ip, [sp, #4]
 158:	e5cd1005 	strb	r1, [sp, #5]
 15c:	e583200c 	str	r2, [r3, #12]
 160:	e5900014 	ldr	r0, [r0, #20]
 164:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 168:	e3a01002 	mov	r1, #2
 16c:	e28d0004 	add	r0, sp, #4
 170:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 174:	e28dd00c 	add	sp, sp, #12
 178:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000017c <Ssd1311::SetSleep(bool)>:
 17c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 180:	e3a02901 	mov	r2, #16384	; 0x4000
 184:	e5d03018 	ldrb	r3, [r0, #24]
 188:	e24dd00c 	sub	sp, sp, #12
 18c:	e3432f80 	movt	r2, #16256	; 0x3f80
 190:	e3510000 	cmp	r1, #0
 194:	e5d01010 	ldrb	r1, [r0, #16]
 198:	120330fb 	andne	r3, r3, #251	; 0xfb
 19c:	03833004 	orreq	r3, r3, #4
 1a0:	e3e0c07f 	mvn	ip, #127	; 0x7f
 1a4:	e5c03018 	strb	r3, [r0, #24]
 1a8:	e5cdc004 	strb	ip, [sp, #4]
 1ac:	e5cd3005 	strb	r3, [sp, #5]
 1b0:	e582100c 	str	r1, [r2, #12]
 1b4:	e5900014 	ldr	r0, [r0, #20]
 1b8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1bc:	e3a01002 	mov	r1, #2
 1c0:	e28d0004 	add	r0, sp, #4
 1c4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1c8:	e28dd00c 	add	sp, sp, #12
 1cc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000001d0 <Ssd1311::SetCursorPos(unsigned long, unsigned long)>:
 1d0:	e3520003 	cmp	r2, #3
 1d4:	93510013 	cmpls	r1, #19
 1d8:	812fff1e 	bxhi	lr
 1dc:	e3a0c901 	mov	ip, #16384	; 0x4000
 1e0:	e3e0307f 	mvn	r3, #127	; 0x7f
 1e4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 1e8:	e24dd00c 	sub	sp, sp, #12
 1ec:	e5d0e010 	ldrb	lr, [r0, #16]
 1f0:	e343cf80 	movt	ip, #16256	; 0x3f80
 1f4:	e0811282 	add	r1, r1, r2, lsl #5
 1f8:	e1831001 	orr	r1, r3, r1
 1fc:	e5cd3004 	strb	r3, [sp, #4]
 200:	e5cd1005 	strb	r1, [sp, #5]
 204:	e58ce00c 	str	lr, [ip, #12]
 208:	e5900014 	ldr	r0, [r0, #20]
 20c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 210:	e3a01002 	mov	r1, #2
 214:	e28d0004 	add	r0, sp, #4
 218:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 21c:	e28dd00c 	add	sp, sp, #12
 220:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000224 <Ssd1311::ClearLine(unsigned long)>:
 224:	e2411001 	sub	r1, r1, #1
 228:	e3510003 	cmp	r1, #3
 22c:	812fff1e 	bxhi	lr
 230:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 234:	e3e0707f 	mvn	r7, #127	; 0x7f
 238:	e5d03010 	ldrb	r3, [r0, #16]
 23c:	e3a06901 	mov	r6, #16384	; 0x4000
 240:	e3436f80 	movt	r6, #16256	; 0x3f80
 244:	e24dd00c 	sub	sp, sp, #12
 248:	e1871281 	orr	r1, r7, r1, lsl #5
 24c:	e1a05000 	mov	r5, r0
 250:	e5cd7004 	strb	r7, [sp, #4]
 254:	e6ef4071 	uxtb	r4, r1
 258:	e5cd4005 	strb	r4, [sp, #5]
 25c:	e586300c 	str	r3, [r6, #12]
 260:	e5900014 	ldr	r0, [r0, #20]
 264:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 268:	e3a01002 	mov	r1, #2
 26c:	e28d0004 	add	r0, sp, #4
 270:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 274:	e5d53010 	ldrb	r3, [r5, #16]
 278:	e586300c 	str	r3, [r6, #12]
 27c:	e5950014 	ldr	r0, [r5, #20]
 280:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 284:	e59f0030 	ldr	r0, [pc, #48]	; 2bc <Ssd1311::ClearLine(unsigned long)+0x98>
 288:	e3a01015 	mov	r1, #21
 28c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 290:	e5d53010 	ldrb	r3, [r5, #16]
 294:	e5cd7004 	strb	r7, [sp, #4]
 298:	e5cd4005 	strb	r4, [sp, #5]
 29c:	e586300c 	str	r3, [r6, #12]
 2a0:	e5950014 	ldr	r0, [r5, #20]
 2a4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2a8:	e3a01002 	mov	r1, #2
 2ac:	e28d0004 	add	r0, sp, #4
 2b0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2b4:	e28dd00c 	add	sp, sp, #12
 2b8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 2bc:	00000018 	andeq	r0, r0, r8, lsl r0

000002c0 <Ssd1311::SetContrast(unsigned char)>:
 2c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 2c4:	e3a05901 	mov	r5, #16384	; 0x4000
 2c8:	e3435f80 	movt	r5, #16256	; 0x3f80
 2cc:	e24dd008 	sub	sp, sp, #8
 2d0:	e5d03010 	ldrb	r3, [r0, #16]
 2d4:	e3e0607f 	mvn	r6, #127	; 0x7f
 2d8:	e5cd6004 	strb	r6, [sp, #4]
 2dc:	e3a0702a 	mov	r7, #42	; 0x2a
 2e0:	e5cd7005 	strb	r7, [sp, #5]
 2e4:	e1a04000 	mov	r4, r0
 2e8:	e585300c 	str	r3, [r5, #12]
 2ec:	e1a08001 	mov	r8, r1
 2f0:	e5900014 	ldr	r0, [r0, #20]
 2f4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2f8:	e3a01002 	mov	r1, #2
 2fc:	e28d0004 	add	r0, sp, #4
 300:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 304:	e5d43010 	ldrb	r3, [r4, #16]
 308:	e5cd6004 	strb	r6, [sp, #4]
 30c:	e5cd7005 	strb	r7, [sp, #5]
 310:	e585300c 	str	r3, [r5, #12]
 314:	e5940014 	ldr	r0, [r4, #20]
 318:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 31c:	e3a01002 	mov	r1, #2
 320:	e28d0004 	add	r0, sp, #4
 324:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 328:	e5d43010 	ldrb	r3, [r4, #16]
 32c:	e3a02079 	mov	r2, #121	; 0x79
 330:	e5cd2005 	strb	r2, [sp, #5]
 334:	e5cd6004 	strb	r6, [sp, #4]
 338:	e585300c 	str	r3, [r5, #12]
 33c:	e5940014 	ldr	r0, [r4, #20]
 340:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 344:	e3a01002 	mov	r1, #2
 348:	e28d0004 	add	r0, sp, #4
 34c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 350:	e5d43010 	ldrb	r3, [r4, #16]
 354:	e3e0207e 	mvn	r2, #126	; 0x7e
 358:	e5cd2005 	strb	r2, [sp, #5]
 35c:	e5cd6004 	strb	r6, [sp, #4]
 360:	e585300c 	str	r3, [r5, #12]
 364:	e5940014 	ldr	r0, [r4, #20]
 368:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 36c:	e3a01002 	mov	r1, #2
 370:	e28d0004 	add	r0, sp, #4
 374:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 378:	e5d43010 	ldrb	r3, [r4, #16]
 37c:	e5cd8005 	strb	r8, [sp, #5]
 380:	e5cd6004 	strb	r6, [sp, #4]
 384:	e585300c 	str	r3, [r5, #12]
 388:	e5940014 	ldr	r0, [r4, #20]
 38c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 390:	e3a01002 	mov	r1, #2
 394:	e28d0004 	add	r0, sp, #4
 398:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 39c:	e5d43010 	ldrb	r3, [r4, #16]
 3a0:	e5cd6004 	strb	r6, [sp, #4]
 3a4:	e5cd7005 	strb	r7, [sp, #5]
 3a8:	e585300c 	str	r3, [r5, #12]
 3ac:	e5940014 	ldr	r0, [r4, #20]
 3b0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3b4:	e3a01002 	mov	r1, #2
 3b8:	e28d0004 	add	r0, sp, #4
 3bc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3c0:	e5cd6004 	strb	r6, [sp, #4]
 3c4:	e3a03078 	mov	r3, #120	; 0x78
 3c8:	e5cd3005 	strb	r3, [sp, #5]
 3cc:	e5d43010 	ldrb	r3, [r4, #16]
 3d0:	e585300c 	str	r3, [r5, #12]
 3d4:	e5940014 	ldr	r0, [r4, #20]
 3d8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3dc:	e3a01002 	mov	r1, #2
 3e0:	e28d0004 	add	r0, sp, #4
 3e4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3e8:	e5d43010 	ldrb	r3, [r4, #16]
 3ec:	e3a02028 	mov	r2, #40	; 0x28
 3f0:	e5cd2005 	strb	r2, [sp, #5]
 3f4:	e5cd6004 	strb	r6, [sp, #4]
 3f8:	e585300c 	str	r3, [r5, #12]
 3fc:	e5940014 	ldr	r0, [r4, #20]
 400:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 404:	e3a01002 	mov	r1, #2
 408:	e28d0004 	add	r0, sp, #4
 40c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 410:	e28dd008 	add	sp, sp, #8
 414:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00000418 <Ssd1311::Ssd1311()>:
 418:	e59fc048 	ldr	ip, [pc, #72]	; 468 <Ssd1311::Ssd1311()+0x50>
 41c:	e3a01d6a 	mov	r1, #6784	; 0x1a80
 420:	e3401006 	movt	r1, #6
 424:	e3002000 	movw	r2, #0
 428:	e3402000 	movt	r2, #0
 42c:	e5801014 	str	r1, [r0, #20]
 430:	e3a0103c 	mov	r1, #60	; 0x3c
 434:	e5c01010 	strb	r1, [r0, #16]
 438:	e3a01008 	mov	r1, #8
 43c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 440:	e3a0e000 	mov	lr, #0
 444:	e5c01018 	strb	r1, [r0, #24]
 448:	e3a01004 	mov	r1, #4
 44c:	e5820030 	str	r0, [r2, #48]	; 0x30
 450:	e3a02014 	mov	r2, #20
 454:	e5c0e00c 	strb	lr, [r0, #12]
 458:	e580c000 	str	ip, [r0]
 45c:	e5801008 	str	r1, [r0, #8]
 460:	e5802004 	str	r2, [r0, #4]
 464:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 468:	00000008 	andeq	r0, r0, r8

0000046c <Ssd1311::Text(char const*, unsigned long)>:
 46c:	e3520014 	cmp	r2, #20
 470:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 474:	31a06002 	movcc	r6, r2
 478:	23a06014 	movcs	r6, #20
 47c:	e3520000 	cmp	r2, #0
 480:	e2867001 	add	r7, r6, #1
 484:	0a000043 	beq	598 <Ssd1311::Text(char const*, unsigned long)+0x12c>
 488:	e0815006 	add	r5, r1, r6
 48c:	e300c000 	movw	ip, #0
 490:	e340c000 	movt	ip, #0
 494:	e1a03001 	mov	r3, r1
 498:	e1a0e00c 	mov	lr, ip
 49c:	e4d34001 	ldrb	r4, [r3], #1
 4a0:	e1530005 	cmp	r3, r5
 4a4:	e5ee4001 	strb	r4, [lr, #1]!
 4a8:	1afffffb 	bne	49c <Ssd1311::Text(char const*, unsigned long)+0x30>
 4ac:	e5d0300c 	ldrb	r3, [r0, #12]
 4b0:	e3530000 	cmp	r3, #0
 4b4:	0a00002c 	beq	56c <Ssd1311::Text(char const*, unsigned long)+0x100>
 4b8:	e08c1007 	add	r1, ip, r7
 4bc:	e3520013 	cmp	r2, #19
 4c0:	e3a03000 	mov	r3, #0
 4c4:	e2666013 	rsb	r6, r6, #19
 4c8:	e5c0300c 	strb	r3, [r0, #12]
 4cc:	8a00003f 	bhi	5d0 <Ssd1311::Text(char const*, unsigned long)+0x164>
 4d0:	e356001f 	cmp	r6, #31
 4d4:	9a000037 	bls	5b8 <Ssd1311::Text(char const*, unsigned long)+0x14c>
 4d8:	e2811020 	add	r1, r1, #32
 4dc:	e3a03020 	mov	r3, #32
 4e0:	f5d1f008 	pld	[r1, #8]
 4e4:	e2811020 	add	r1, r1, #32
 4e8:	e5413040 	strb	r3, [r1, #-64]	; 0xffffffc0
 4ec:	e541303f 	strb	r3, [r1, #-63]	; 0xffffffc1
 4f0:	e541303e 	strb	r3, [r1, #-62]	; 0xffffffc2
 4f4:	e541303d 	strb	r3, [r1, #-61]	; 0xffffffc3
 4f8:	e541303c 	strb	r3, [r1, #-60]	; 0xffffffc4
 4fc:	e541303b 	strb	r3, [r1, #-59]	; 0xffffffc5
 500:	e541303a 	strb	r3, [r1, #-58]	; 0xffffffc6
 504:	e5413039 	strb	r3, [r1, #-57]	; 0xffffffc7
 508:	e5413038 	strb	r3, [r1, #-56]	; 0xffffffc8
 50c:	e5413037 	strb	r3, [r1, #-55]	; 0xffffffc9
 510:	e5413036 	strb	r3, [r1, #-54]	; 0xffffffca
 514:	e5413035 	strb	r3, [r1, #-53]	; 0xffffffcb
 518:	e5413034 	strb	r3, [r1, #-52]	; 0xffffffcc
 51c:	e5413033 	strb	r3, [r1, #-51]	; 0xffffffcd
 520:	e5413032 	strb	r3, [r1, #-50]	; 0xffffffce
 524:	e5413031 	strb	r3, [r1, #-49]	; 0xffffffcf
 528:	e5413030 	strb	r3, [r1, #-48]	; 0xffffffd0
 52c:	e541302f 	strb	r3, [r1, #-47]	; 0xffffffd1
 530:	e541302e 	strb	r3, [r1, #-46]	; 0xffffffd2
 534:	e541302d 	strb	r3, [r1, #-45]	; 0xffffffd3
 538:	e541302c 	strb	r3, [r1, #-44]	; 0xffffffd4
 53c:	e541302b 	strb	r3, [r1, #-43]	; 0xffffffd5
 540:	e541302a 	strb	r3, [r1, #-42]	; 0xffffffd6
 544:	e5413029 	strb	r3, [r1, #-41]	; 0xffffffd7
 548:	e5413028 	strb	r3, [r1, #-40]	; 0xffffffd8
 54c:	e5413027 	strb	r3, [r1, #-39]	; 0xffffffd9
 550:	e5413026 	strb	r3, [r1, #-38]	; 0xffffffda
 554:	e5413025 	strb	r3, [r1, #-37]	; 0xffffffdb
 558:	e5413024 	strb	r3, [r1, #-36]	; 0xffffffdc
 55c:	e5413023 	strb	r3, [r1, #-35]	; 0xffffffdd
 560:	e5413022 	strb	r3, [r1, #-34]	; 0xffffffde
 564:	e5413021 	strb	r3, [r1, #-33]	; 0xffffffdf
 568:	eaffffdc 	b	4e0 <Ssd1311::Text(char const*, unsigned long)+0x74>
 56c:	e5d02010 	ldrb	r2, [r0, #16]
 570:	e3a03901 	mov	r3, #16384	; 0x4000
 574:	e3433f80 	movt	r3, #16256	; 0x3f80
 578:	e583200c 	str	r2, [r3, #12]
 57c:	e5900014 	ldr	r0, [r0, #20]
 580:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 584:	e3000000 	movw	r0, #0
 588:	e1a01007 	mov	r1, r7
 58c:	e3400000 	movt	r0, #0
 590:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 594:	eafffffe 	b	0 <bcm2835_i2c_write>
 598:	e5d0300c 	ldrb	r3, [r0, #12]
 59c:	e3530000 	cmp	r3, #0
 5a0:	0afffff1 	beq	56c <Ssd1311::Text(char const*, unsigned long)+0x100>
 5a4:	e5c0200c 	strb	r2, [r0, #12]
 5a8:	e3003000 	movw	r3, #0
 5ac:	e3403000 	movt	r3, #0
 5b0:	e3a06013 	mov	r6, #19
 5b4:	e0831007 	add	r1, r3, r7
 5b8:	e2866001 	add	r6, r6, #1
 5bc:	e3a02020 	mov	r2, #32
 5c0:	e0813006 	add	r3, r1, r6
 5c4:	e4c12001 	strb	r2, [r1], #1
 5c8:	e1510003 	cmp	r1, r3
 5cc:	1afffffc 	bne	5c4 <Ssd1311::Text(char const*, unsigned long)+0x158>
 5d0:	e5d02010 	ldrb	r2, [r0, #16]
 5d4:	e3a03901 	mov	r3, #16384	; 0x4000
 5d8:	e3433f80 	movt	r3, #16256	; 0x3f80
 5dc:	e583200c 	str	r2, [r3, #12]
 5e0:	e5900014 	ldr	r0, [r0, #20]
 5e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5e8:	e3000000 	movw	r0, #0
 5ec:	e3a01015 	mov	r1, #21
 5f0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 5f4:	e3400000 	movt	r0, #0
 5f8:	eafffffe 	b	0 <bcm2835_i2c_write>

000005fc <Ssd1311::TextLine(unsigned long, char const*, unsigned long)>:
 5fc:	e241c001 	sub	ip, r1, #1
 600:	e35c0003 	cmp	ip, #3
 604:	812fff1e 	bxhi	lr
 608:	e92d4070 	push	{r4, r5, r6, lr}
 60c:	e24dd008 	sub	sp, sp, #8
 610:	e1a06003 	mov	r6, r3
 614:	e3e0307f 	mvn	r3, #127	; 0x7f
 618:	e183c28c 	orr	ip, r3, ip, lsl #5
 61c:	e1a05002 	mov	r5, r2
 620:	e5cd3004 	strb	r3, [sp, #4]
 624:	e3a03901 	mov	r3, #16384	; 0x4000
 628:	e5d02010 	ldrb	r2, [r0, #16]
 62c:	e1a04000 	mov	r4, r0
 630:	e3433f80 	movt	r3, #16256	; 0x3f80
 634:	e5cdc005 	strb	ip, [sp, #5]
 638:	e583200c 	str	r2, [r3, #12]
 63c:	e5900014 	ldr	r0, [r0, #20]
 640:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 644:	e3a01002 	mov	r1, #2
 648:	e28d0004 	add	r0, sp, #4
 64c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 650:	e1a02006 	mov	r2, r6
 654:	e1a01005 	mov	r1, r5
 658:	e1a00004 	mov	r0, r4
 65c:	e28dd008 	add	sp, sp, #8
 660:	e8bd4070 	pop	{r4, r5, r6, lr}
 664:	eafffffe 	b	46c <Ssd1311::Text(char const*, unsigned long)>

00000668 <Ssd1311::SelectRamRom(unsigned long, unsigned long)>:
 668:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 66c:	e3a06901 	mov	r6, #16384	; 0x4000
 670:	e5d03018 	ldrb	r3, [r0, #24]
 674:	e24dd008 	sub	sp, sp, #8
 678:	e3436f80 	movt	r6, #16256	; 0x3f80
 67c:	e1a04000 	mov	r4, r0
 680:	e5d00010 	ldrb	r0, [r0, #16]
 684:	e3e0707f 	mvn	r7, #127	; 0x7f
 688:	e5cd7004 	strb	r7, [sp, #4]
 68c:	e20330fb 	and	r3, r3, #251	; 0xfb
 690:	e5c43018 	strb	r3, [r4, #24]
 694:	e1a05002 	mov	r5, r2
 698:	e5cd3005 	strb	r3, [sp, #5]
 69c:	e1a08001 	mov	r8, r1
 6a0:	e586000c 	str	r0, [r6, #12]
 6a4:	e2088003 	and	r8, r8, #3
 6a8:	e5940014 	ldr	r0, [r4, #20]
 6ac:	e1a05105 	lsl	r5, r5, #2
 6b0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6b4:	e3a01002 	mov	r1, #2
 6b8:	e28d0004 	add	r0, sp, #4
 6bc:	e205500c 	and	r5, r5, #12
 6c0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 6c4:	e5d43010 	ldrb	r3, [r4, #16]
 6c8:	e3a0202a 	mov	r2, #42	; 0x2a
 6cc:	e5cd2005 	strb	r2, [sp, #5]
 6d0:	e5cd7004 	strb	r7, [sp, #4]
 6d4:	e586300c 	str	r3, [r6, #12]
 6d8:	e5940014 	ldr	r0, [r4, #20]
 6dc:	e1855008 	orr	r5, r5, r8
 6e0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6e4:	e3a01002 	mov	r1, #2
 6e8:	e28d0004 	add	r0, sp, #4
 6ec:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 6f0:	e5d43010 	ldrb	r3, [r4, #16]
 6f4:	e3a02072 	mov	r2, #114	; 0x72
 6f8:	e5cd2005 	strb	r2, [sp, #5]
 6fc:	e5cd7004 	strb	r7, [sp, #4]
 700:	e586300c 	str	r3, [r6, #12]
 704:	e5940014 	ldr	r0, [r4, #20]
 708:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 70c:	e3a01002 	mov	r1, #2
 710:	e28d0004 	add	r0, sp, #4
 714:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 718:	e5d43010 	ldrb	r3, [r4, #16]
 71c:	e5cd7004 	strb	r7, [sp, #4]
 720:	e5cd5005 	strb	r5, [sp, #5]
 724:	e586300c 	str	r3, [r6, #12]
 728:	e5940014 	ldr	r0, [r4, #20]
 72c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 730:	e3a01002 	mov	r1, #2
 734:	e28d0004 	add	r0, sp, #4
 738:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 73c:	e5cd7004 	strb	r7, [sp, #4]
 740:	e3a03028 	mov	r3, #40	; 0x28
 744:	e5cd3005 	strb	r3, [sp, #5]
 748:	e5d43010 	ldrb	r3, [r4, #16]
 74c:	e586300c 	str	r3, [r6, #12]
 750:	e5940014 	ldr	r0, [r4, #20]
 754:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 758:	e3a01002 	mov	r1, #2
 75c:	e28d0004 	add	r0, sp, #4
 760:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 764:	e5d43018 	ldrb	r3, [r4, #24]
 768:	e5d42010 	ldrb	r2, [r4, #16]
 76c:	e5cd7004 	strb	r7, [sp, #4]
 770:	e3833004 	orr	r3, r3, #4
 774:	e5c43018 	strb	r3, [r4, #24]
 778:	e5cd3005 	strb	r3, [sp, #5]
 77c:	e586200c 	str	r2, [r6, #12]
 780:	e5940014 	ldr	r0, [r4, #20]
 784:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 788:	e3a01002 	mov	r1, #2
 78c:	e28d0004 	add	r0, sp, #4
 790:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 794:	e5d43010 	ldrb	r3, [r4, #16]
 798:	e3a02001 	mov	r2, #1
 79c:	e5cd2005 	strb	r2, [sp, #5]
 7a0:	e5cd7004 	strb	r7, [sp, #4]
 7a4:	e586300c 	str	r3, [r6, #12]
 7a8:	e5940014 	ldr	r0, [r4, #20]
 7ac:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7b0:	e3a01002 	mov	r1, #2
 7b4:	e28d0004 	add	r0, sp, #4
 7b8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7bc:	e28dd008 	add	sp, sp, #8
 7c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000007c4 <Ssd1311::SetDDRAM(unsigned char)>:
 7c4:	e3a03901 	mov	r3, #16384	; 0x4000
 7c8:	e3e0207f 	mvn	r2, #127	; 0x7f
 7cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 7d0:	e24dd00c 	sub	sp, sp, #12
 7d4:	e5d0c010 	ldrb	ip, [r0, #16]
 7d8:	e3433f80 	movt	r3, #16256	; 0x3f80
 7dc:	e1811002 	orr	r1, r1, r2
 7e0:	e5cd2004 	strb	r2, [sp, #4]
 7e4:	e5cd1005 	strb	r1, [sp, #5]
 7e8:	e583c00c 	str	ip, [r3, #12]
 7ec:	e5900014 	ldr	r0, [r0, #20]
 7f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7f4:	e3a01002 	mov	r1, #2
 7f8:	e28d0004 	add	r0, sp, #4
 7fc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 800:	e28dd00c 	add	sp, sp, #12
 804:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000808 <Ssd1311::SetCGRAM(unsigned char)>:
 808:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 80c:	e3a03901 	mov	r3, #16384	; 0x4000
 810:	e5d02010 	ldrb	r2, [r0, #16]
 814:	e24dd00c 	sub	sp, sp, #12
 818:	e3433f80 	movt	r3, #16256	; 0x3f80
 81c:	e201103f 	and	r1, r1, #63	; 0x3f
 820:	e3811040 	orr	r1, r1, #64	; 0x40
 824:	e5cd1005 	strb	r1, [sp, #5]
 828:	e3e0107f 	mvn	r1, #127	; 0x7f
 82c:	e5cd1004 	strb	r1, [sp, #4]
 830:	e583200c 	str	r2, [r3, #12]
 834:	e5900014 	ldr	r0, [r0, #20]
 838:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 83c:	e3a01002 	mov	r1, #2
 840:	e28d0004 	add	r0, sp, #4
 844:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 848:	e28dd00c 	add	sp, sp, #12
 84c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000850 <Ssd1311::SetRE(Ssd1311::FunctionSet)>:
 850:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 854:	e3510000 	cmp	r1, #0
 858:	e5d02010 	ldrb	r2, [r0, #16]
 85c:	e24dd00c 	sub	sp, sp, #12
 860:	e3a03901 	mov	r3, #16384	; 0x4000
 864:	03a01028 	moveq	r1, #40	; 0x28
 868:	e3433f80 	movt	r3, #16256	; 0x3f80
 86c:	13a0102a 	movne	r1, #42	; 0x2a
 870:	e5cd1005 	strb	r1, [sp, #5]
 874:	e3e0107f 	mvn	r1, #127	; 0x7f
 878:	e5cd1004 	strb	r1, [sp, #4]
 87c:	e583200c 	str	r2, [r3, #12]
 880:	e5900014 	ldr	r0, [r0, #20]
 884:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 888:	e3a01002 	mov	r1, #2
 88c:	e28d0004 	add	r0, sp, #4
 890:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 894:	e28dd00c 	add	sp, sp, #12
 898:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000089c <Ssd1311::SetSD(Ssd1311::CommandSet)>:
 89c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 8a0:	e3a05901 	mov	r5, #16384	; 0x4000
 8a4:	e5d03010 	ldrb	r3, [r0, #16]
 8a8:	e24dd00c 	sub	sp, sp, #12
 8ac:	e3435f80 	movt	r5, #16256	; 0x3f80
 8b0:	e3a0202a 	mov	r2, #42	; 0x2a
 8b4:	e5cd2005 	strb	r2, [sp, #5]
 8b8:	e3e0707f 	mvn	r7, #127	; 0x7f
 8bc:	e5cd7004 	strb	r7, [sp, #4]
 8c0:	e1a04000 	mov	r4, r0
 8c4:	e585300c 	str	r3, [r5, #12]
 8c8:	e1a06001 	mov	r6, r1
 8cc:	e5900014 	ldr	r0, [r0, #20]
 8d0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 8d4:	e3a01002 	mov	r1, #2
 8d8:	e28d0004 	add	r0, sp, #4
 8dc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 8e0:	e5d43010 	ldrb	r3, [r4, #16]
 8e4:	e3560000 	cmp	r6, #0
 8e8:	e5cd7004 	strb	r7, [sp, #4]
 8ec:	03a02078 	moveq	r2, #120	; 0x78
 8f0:	13a02079 	movne	r2, #121	; 0x79
 8f4:	e5cd2005 	strb	r2, [sp, #5]
 8f8:	e585300c 	str	r3, [r5, #12]
 8fc:	e5940014 	ldr	r0, [r4, #20]
 900:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 904:	e3a01002 	mov	r1, #2
 908:	e28d0004 	add	r0, sp, #4
 90c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 910:	e28dd00c 	add	sp, sp, #12
 914:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00000918 <Ssd1311::SendCommand(unsigned char)>:
 918:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 91c:	e3a03901 	mov	r3, #16384	; 0x4000
 920:	e5d02010 	ldrb	r2, [r0, #16]
 924:	e24dd00c 	sub	sp, sp, #12
 928:	e3433f80 	movt	r3, #16256	; 0x3f80
 92c:	e5cd1005 	strb	r1, [sp, #5]
 930:	e3e0107f 	mvn	r1, #127	; 0x7f
 934:	e5cd1004 	strb	r1, [sp, #4]
 938:	e583200c 	str	r2, [r3, #12]
 93c:	e5900014 	ldr	r0, [r0, #20]
 940:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 944:	e3a01002 	mov	r1, #2
 948:	e28d0004 	add	r0, sp, #4
 94c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 950:	e28dd00c 	add	sp, sp, #12
 954:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000958 <Ssd1311::SendData(unsigned char)>:
 958:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 95c:	e3a03901 	mov	r3, #16384	; 0x4000
 960:	e5d02010 	ldrb	r2, [r0, #16]
 964:	e24dd00c 	sub	sp, sp, #12
 968:	e3433f80 	movt	r3, #16256	; 0x3f80
 96c:	e5cd1005 	strb	r1, [sp, #5]
 970:	e3a01040 	mov	r1, #64	; 0x40
 974:	e5cd1004 	strb	r1, [sp, #4]
 978:	e583200c 	str	r2, [r3, #12]
 97c:	e5900014 	ldr	r0, [r0, #20]
 980:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 984:	e3a01002 	mov	r1, #2
 988:	e28d0004 	add	r0, sp, #4
 98c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 990:	e28dd00c 	add	sp, sp, #12
 994:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000998 <Ssd1311::SendData(unsigned char const*, unsigned long)>:
 998:	e3a03901 	mov	r3, #16384	; 0x4000
 99c:	e92d4070 	push	{r4, r5, r6, lr}
 9a0:	e1a04001 	mov	r4, r1
 9a4:	e5d0c010 	ldrb	ip, [r0, #16]
 9a8:	e1a05002 	mov	r5, r2
 9ac:	e3433f80 	movt	r3, #16256	; 0x3f80
 9b0:	e583c00c 	str	ip, [r3, #12]
 9b4:	e5900014 	ldr	r0, [r0, #20]
 9b8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 9bc:	e1a01005 	mov	r1, r5
 9c0:	e1a00004 	mov	r0, r4
 9c4:	e8bd4070 	pop	{r4, r5, r6, lr}
 9c8:	eafffffe 	b	0 <bcm2835_i2c_write>

000009cc <Ssd1311::CheckSSD1311()>:
 9cc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 9d0:	e3a05901 	mov	r5, #16384	; 0x4000
 9d4:	e3435f80 	movt	r5, #16256	; 0x3f80
 9d8:	e24dd01c 	sub	sp, sp, #28
 9dc:	e5d03010 	ldrb	r3, [r0, #16]
 9e0:	e3a06040 	mov	r6, #64	; 0x40
 9e4:	e5cd6011 	strb	r6, [sp, #17]
 9e8:	e3e0707f 	mvn	r7, #127	; 0x7f
 9ec:	e5cd7010 	strb	r7, [sp, #16]
 9f0:	e1a04000 	mov	r4, r0
 9f4:	e585300c 	str	r3, [r5, #12]
 9f8:	e5900014 	ldr	r0, [r0, #20]
 9fc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a00:	e3a01002 	mov	r1, #2
 a04:	e28d0010 	add	r0, sp, #16
 a08:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a0c:	e5d42010 	ldrb	r2, [r4, #16]
 a10:	e3003000 	movw	r3, #0
 a14:	e3403000 	movt	r3, #0
 a18:	e8930003 	ldm	r3, {r0, r1}
 a1c:	e58d0008 	str	r0, [sp, #8]
 a20:	e5cd100c 	strb	r1, [sp, #12]
 a24:	e585200c 	str	r2, [r5, #12]
 a28:	e5940014 	ldr	r0, [r4, #20]
 a2c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a30:	e3a01005 	mov	r1, #5
 a34:	e28d0008 	add	r0, sp, #8
 a38:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a3c:	e59f30a8 	ldr	r3, [pc, #168]	; aec <Ssd1311::CheckSSD1311()+0x120>
 a40:	e5d42010 	ldrb	r2, [r4, #16]
 a44:	e8930003 	ldm	r3, {r0, r1}
 a48:	e5cd7004 	strb	r7, [sp, #4]
 a4c:	e58d0010 	str	r0, [sp, #16]
 a50:	e1cd11b4 	strh	r1, [sp, #20]
 a54:	e5cd6005 	strb	r6, [sp, #5]
 a58:	e585200c 	str	r2, [r5, #12]
 a5c:	e5940014 	ldr	r0, [r4, #20]
 a60:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a64:	e3a01002 	mov	r1, #2
 a68:	e28d0004 	add	r0, sp, #4
 a6c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a70:	e5d43010 	ldrb	r3, [r4, #16]
 a74:	e5940014 	ldr	r0, [r4, #20]
 a78:	e585300c 	str	r3, [r5, #12]
 a7c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a80:	e5cd6004 	strb	r6, [sp, #4]
 a84:	e3a01001 	mov	r1, #1
 a88:	e28d0004 	add	r0, sp, #4
 a8c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a90:	e5d43010 	ldrb	r3, [r4, #16]
 a94:	e5940014 	ldr	r0, [r4, #20]
 a98:	e585300c 	str	r3, [r5, #12]
 a9c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 aa0:	e3a01006 	mov	r1, #6
 aa4:	e28d0010 	add	r0, sp, #16
 aa8:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 aac:	e28d3009 	add	r3, sp, #9
 ab0:	e28d2011 	add	r2, sp, #17
 ab4:	e28dc00d 	add	ip, sp, #13
 ab8:	ea000001 	b	ac4 <Ssd1311::CheckSSD1311()+0xf8>
 abc:	e153000c 	cmp	r3, ip
 ac0:	0a000006 	beq	ae0 <Ssd1311::CheckSSD1311()+0x114>
 ac4:	e4d30001 	ldrb	r0, [r3], #1
 ac8:	e4d21001 	ldrb	r1, [r2], #1
 acc:	e1500001 	cmp	r0, r1
 ad0:	0afffff9 	beq	abc <Ssd1311::CheckSSD1311()+0xf0>
 ad4:	e3a00000 	mov	r0, #0
 ad8:	e28dd01c 	add	sp, sp, #28
 adc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 ae0:	e3a00001 	mov	r0, #1
 ae4:	e28dd01c 	add	sp, sp, #28
 ae8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 aec:	00000040 	andeq	r0, r0, r0, asr #32

00000af0 <Ssd1311::Start()>:
 af0:	e3a03901 	mov	r3, #16384	; 0x4000
 af4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 af8:	e1a04000 	mov	r4, r0
 afc:	e5d05010 	ldrb	r5, [r0, #16]
 b00:	e24dd008 	sub	sp, sp, #8
 b04:	e3433f80 	movt	r3, #16256	; 0x3f80
 b08:	e5900014 	ldr	r0, [r0, #20]
 b0c:	e583500c 	str	r5, [r3, #12]
 b10:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 b14:	e2451030 	sub	r1, r5, #48	; 0x30
 b18:	e2455050 	sub	r5, r5, #80	; 0x50
 b1c:	e355000f 	cmp	r5, #15
 b20:	83510007 	cmphi	r1, #7
 b24:	93a01001 	movls	r1, #1
 b28:	83a01000 	movhi	r1, #0
 b2c:	8a000008 	bhi	b54 <Ssd1311::Start()+0x64>
 b30:	e3a01001 	mov	r1, #1
 b34:	e28d0004 	add	r0, sp, #4
 b38:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 b3c:	e3500000 	cmp	r0, #0
 b40:	0a000007 	beq	b64 <Ssd1311::Start()+0x74>
 b44:	e3a05000 	mov	r5, #0
 b48:	e1a00005 	mov	r0, r5
 b4c:	e28dd008 	add	sp, sp, #8
 b50:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 b54:	e1a00001 	mov	r0, r1
 b58:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b5c:	e3500000 	cmp	r0, #0
 b60:	1afffff7 	bne	b44 <Ssd1311::Start()+0x54>
 b64:	e1a00004 	mov	r0, r4
 b68:	ebfffffe 	bl	9cc <Ssd1311::CheckSSD1311()>
 b6c:	e2505000 	subs	r5, r0, #0
 b70:	0afffff3 	beq	b44 <Ssd1311::Start()+0x54>
 b74:	e59f31fc 	ldr	r3, [pc, #508]	; d78 <Ssd1311::Start()+0x288>
 b78:	e3a01020 	mov	r1, #32
 b7c:	e2832015 	add	r2, r3, #21
 b80:	e5e31001 	strb	r1, [r3, #1]!
 b84:	e1520003 	cmp	r2, r3
 b88:	1afffffc 	bne	b80 <Ssd1311::Start()+0x90>
 b8c:	e5d42010 	ldrb	r2, [r4, #16]
 b90:	e3003000 	movw	r3, #0
 b94:	e3403000 	movt	r3, #0
 b98:	e3a06901 	mov	r6, #16384	; 0x4000
 b9c:	e3436f80 	movt	r6, #16256	; 0x3f80
 ba0:	e3e0707f 	mvn	r7, #127	; 0x7f
 ba4:	e5cd7004 	strb	r7, [sp, #4]
 ba8:	e3a08040 	mov	r8, #64	; 0x40
 bac:	e5c38018 	strb	r8, [r3, #24]
 bb0:	e3a0a03a 	mov	sl, #58	; 0x3a
 bb4:	e5c38000 	strb	r8, [r3]
 bb8:	e3a0903c 	mov	r9, #60	; 0x3c
 bbc:	e5cda005 	strb	sl, [sp, #5]
 bc0:	e586200c 	str	r2, [r6, #12]
 bc4:	e5940014 	ldr	r0, [r4, #20]
 bc8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 bcc:	e3a01002 	mov	r1, #2
 bd0:	e28d0004 	add	r0, sp, #4
 bd4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 bd8:	e5d43010 	ldrb	r3, [r4, #16]
 bdc:	e3a02009 	mov	r2, #9
 be0:	e5cd2005 	strb	r2, [sp, #5]
 be4:	e5cd7004 	strb	r7, [sp, #4]
 be8:	e586300c 	str	r3, [r6, #12]
 bec:	e5940014 	ldr	r0, [r4, #20]
 bf0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 bf4:	e3a01002 	mov	r1, #2
 bf8:	e28d0004 	add	r0, sp, #4
 bfc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 c00:	e5d43010 	ldrb	r3, [r4, #16]
 c04:	e3a02005 	mov	r2, #5
 c08:	e5cd2005 	strb	r2, [sp, #5]
 c0c:	e5cd7004 	strb	r7, [sp, #4]
 c10:	e586300c 	str	r3, [r6, #12]
 c14:	e5940014 	ldr	r0, [r4, #20]
 c18:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 c1c:	e3a01002 	mov	r1, #2
 c20:	e28d0004 	add	r0, sp, #4
 c24:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 c28:	e5d43010 	ldrb	r3, [r4, #16]
 c2c:	e3a0201c 	mov	r2, #28
 c30:	e5cd2005 	strb	r2, [sp, #5]
 c34:	e5cd7004 	strb	r7, [sp, #4]
 c38:	e586300c 	str	r3, [r6, #12]
 c3c:	e5940014 	ldr	r0, [r4, #20]
 c40:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 c44:	e3a01002 	mov	r1, #2
 c48:	e28d0004 	add	r0, sp, #4
 c4c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 c50:	e5d43010 	ldrb	r3, [r4, #16]
 c54:	e5cd7004 	strb	r7, [sp, #4]
 c58:	e5cd9005 	strb	r9, [sp, #5]
 c5c:	e586300c 	str	r3, [r6, #12]
 c60:	e5940014 	ldr	r0, [r4, #20]
 c64:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 c68:	e3a01002 	mov	r1, #2
 c6c:	e28d0004 	add	r0, sp, #4
 c70:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 c74:	e5d43010 	ldrb	r3, [r4, #16]
 c78:	e5cda005 	strb	sl, [sp, #5]
 c7c:	e5cd7004 	strb	r7, [sp, #4]
 c80:	e586300c 	str	r3, [r6, #12]
 c84:	e5940014 	ldr	r0, [r4, #20]
 c88:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 c8c:	e3a01002 	mov	r1, #2
 c90:	e28d0004 	add	r0, sp, #4
 c94:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 c98:	e5d43010 	ldrb	r3, [r4, #16]
 c9c:	e3a02072 	mov	r2, #114	; 0x72
 ca0:	e5cd2005 	strb	r2, [sp, #5]
 ca4:	e5cd7004 	strb	r7, [sp, #4]
 ca8:	e586300c 	str	r3, [r6, #12]
 cac:	e5940014 	ldr	r0, [r4, #20]
 cb0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 cb4:	e3a01002 	mov	r1, #2
 cb8:	e28d0004 	add	r0, sp, #4
 cbc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 cc0:	e5d43010 	ldrb	r3, [r4, #16]
 cc4:	e5cd8004 	strb	r8, [sp, #4]
 cc8:	e3a08000 	mov	r8, #0
 ccc:	e5cd8005 	strb	r8, [sp, #5]
 cd0:	e586300c 	str	r3, [r6, #12]
 cd4:	e5940014 	ldr	r0, [r4, #20]
 cd8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 cdc:	e3a01002 	mov	r1, #2
 ce0:	e28d0004 	add	r0, sp, #4
 ce4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 ce8:	e5d43010 	ldrb	r3, [r4, #16]
 cec:	e5cd9005 	strb	r9, [sp, #5]
 cf0:	e5cd7004 	strb	r7, [sp, #4]
 cf4:	e586300c 	str	r3, [r6, #12]
 cf8:	e5940014 	ldr	r0, [r4, #20]
 cfc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 d00:	e3a01002 	mov	r1, #2
 d04:	e28d0004 	add	r0, sp, #4
 d08:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 d0c:	e5d43010 	ldrb	r3, [r4, #16]
 d10:	e3a0200c 	mov	r2, #12
 d14:	e5cd2005 	strb	r2, [sp, #5]
 d18:	e5cd7004 	strb	r7, [sp, #4]
 d1c:	e586300c 	str	r3, [r6, #12]
 d20:	e5940014 	ldr	r0, [r4, #20]
 d24:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 d28:	e3a01002 	mov	r1, #2
 d2c:	e28d0004 	add	r0, sp, #4
 d30:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 d34:	e5d43010 	ldrb	r3, [r4, #16]
 d38:	e3a02001 	mov	r2, #1
 d3c:	e5cd2005 	strb	r2, [sp, #5]
 d40:	e5cd7004 	strb	r7, [sp, #4]
 d44:	e586300c 	str	r3, [r6, #12]
 d48:	e5940014 	ldr	r0, [r4, #20]
 d4c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 d50:	e3a01002 	mov	r1, #2
 d54:	e28d0004 	add	r0, sp, #4
 d58:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 d5c:	e1a00004 	mov	r0, r4
 d60:	e1a02008 	mov	r2, r8
 d64:	e1a01008 	mov	r1, r8
 d68:	ebfffffe 	bl	668 <Ssd1311::SelectRamRom(unsigned long, unsigned long)>
 d6c:	e1a00005 	mov	r0, r5
 d70:	e28dd008 	add	sp, sp, #8
 d74:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 d78:	00000017 	andeq	r0, r0, r7, lsl r0

Disassembly of section .bss:

00000000 <_TextBuffer>:
	...

00000018 <_ClearBuffer>:
	...

00000030 <Ssd1311::s_pThis>:
  30:	00000000 	andeq	r0, r0, r0

Disassembly of section .text._ZN10DisplaySet17SetFlipVerticallyEb:

00000000 <DisplaySet::SetFlipVertically(bool)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN7Ssd1311D2Ev:

00000000 <Ssd1311::~Ssd1311()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.LC0>:
   0:	31445353 	cmpcc	r4, r3, asr r3
   4:	20313133 	eorscs	r3, r1, r3, lsr r1
   8:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
   c:	0a296425 	beq	a590a8 <Ssd1311::Start()+0xa585b8>
  10:	00000000 	andeq	r0, r0, r0

00000014 <.LC1>:
  14:	aa55aa40 	bge	156a91c <Ssd1311::Start()+0x1569e2c>
  18:	Address 0x0000000000000018 is out of bounds.


Disassembly of section .text._ZN7Ssd1311D0Ev:

00000000 <Ssd1311::~Ssd1311()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

00000000 <vtable for Ssd1311>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.

