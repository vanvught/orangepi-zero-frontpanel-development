In archive lib_linux/libdebug.a:

debug_dump.o:     file format elf64-x86-64


Disassembly of section .text.debug_dump:

0000000000000000 <debug_dump>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 c4          	mov    %ax,-0x3c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	66 c7 45 de 00 00    	movw   $0x0,-0x22(%rbp)
  2b:	66 c7 45 e0 00 00    	movw   $0x0,-0x20(%rbp)
  31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  35:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  39:	0f b7 55 c4          	movzwl -0x3c(%rbp),%edx
  3d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41:	48 89 c6             	mov    %rax,%rsi
  44:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4b <debug_dump+0x4b>
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	b8 00 00 00 00       	mov    $0x0,%eax
  53:	e8 00 00 00 00       	call   58 <debug_dump+0x58>
  58:	66 c7 45 e0 00 00    	movw   $0x0,-0x20(%rbp)
  5e:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
  62:	89 c6                	mov    %eax,%esi
  64:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6b <debug_dump+0x6b>
  6b:	48 89 c7             	mov    %rax,%rdi
  6e:	b8 00 00 00 00       	mov    $0x0,%eax
  73:	e8 00 00 00 00       	call   78 <debug_dump+0x78>
  78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  80:	eb 51                	jmp    d3 <debug_dump+0xd3>
  82:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  86:	83 e0 07             	and    $0x7,%eax
  89:	66 85 c0             	test   %ax,%ax
  8c:	75 0a                	jne    98 <debug_dump+0x98>
  8e:	bf 20 00 00 00       	mov    $0x20,%edi
  93:	e8 00 00 00 00       	call   98 <debug_dump+0x98>
  98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9c:	0f b6 00             	movzbl (%rax),%eax
  9f:	0f b6 c0             	movzbl %al,%eax
  a2:	89 c6                	mov    %eax,%esi
  a4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ab <debug_dump+0xab>
  ab:	48 89 c7             	mov    %rax,%rdi
  ae:	b8 00 00 00 00       	mov    $0x0,%eax
  b3:	e8 00 00 00 00       	call   b8 <debug_dump+0xb8>
  b8:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  bc:	83 c0 01             	add    $0x1,%eax
  bf:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  c3:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
  c7:	83 c0 01             	add    $0x1,%eax
  ca:	66 89 45 de          	mov    %ax,-0x22(%rbp)
  ce:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  d3:	66 83 7d e0 0f       	cmpw   $0xf,-0x20(%rbp)
  d8:	77 0a                	ja     e4 <debug_dump+0xe4>
  da:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
  de:	66 3b 45 c4          	cmp    -0x3c(%rbp),%ax
  e2:	72 9e                	jb     82 <debug_dump+0x82>
  e4:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  e8:	66 89 45 e2          	mov    %ax,-0x1e(%rbp)
  ec:	eb 35                	jmp    123 <debug_dump+0x123>
  ee:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  f2:	83 e0 07             	and    $0x7,%eax
  f5:	66 85 c0             	test   %ax,%ax
  f8:	75 0a                	jne    104 <debug_dump+0x104>
  fa:	bf 20 00 00 00       	mov    $0x20,%edi
  ff:	e8 00 00 00 00       	call   104 <debug_dump+0x104>
 104:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 10b <debug_dump+0x10b>
 10b:	48 89 c7             	mov    %rax,%rdi
 10e:	b8 00 00 00 00       	mov    $0x0,%eax
 113:	e8 00 00 00 00       	call   118 <debug_dump+0x118>
 118:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
 11c:	83 c0 01             	add    $0x1,%eax
 11f:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
 123:	66 83 7d e0 0f       	cmpw   $0xf,-0x20(%rbp)
 128:	76 c4                	jbe    ee <debug_dump+0xee>
 12a:	66 c7 45 e0 00 00    	movw   $0x0,-0x20(%rbp)
 130:	eb 6b                	jmp    19d <debug_dump+0x19d>
 132:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
 136:	83 e0 07             	and    $0x7,%eax
 139:	66 85 c0             	test   %ax,%ax
 13c:	75 0a                	jne    148 <debug_dump+0x148>
 13e:	bf 20 00 00 00       	mov    $0x20,%edi
 143:	e8 00 00 00 00       	call   148 <debug_dump+0x148>
 148:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 14c:	0f b6 00             	movzbl (%rax),%eax
 14f:	0f b6 c0             	movzbl %al,%eax
 152:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 155:	e8 00 00 00 00       	call   15a <debug_dump+0x15a>
 15a:	48 8b 10             	mov    (%rax),%rdx
 15d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 160:	48 98                	cltq   
 162:	48 01 c0             	add    %rax,%rax
 165:	48 01 d0             	add    %rdx,%rax
 168:	0f b7 00             	movzwl (%rax),%eax
 16b:	0f b7 c0             	movzwl %ax,%eax
 16e:	25 00 40 00 00       	and    $0x4000,%eax
 173:	85 c0                	test   %eax,%eax
 175:	74 0c                	je     183 <debug_dump+0x183>
 177:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 17a:	89 c7                	mov    %eax,%edi
 17c:	e8 00 00 00 00       	call   181 <debug_dump+0x181>
 181:	eb 0a                	jmp    18d <debug_dump+0x18d>
 183:	bf 2e 00 00 00       	mov    $0x2e,%edi
 188:	e8 00 00 00 00       	call   18d <debug_dump+0x18d>
 18d:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
 191:	83 c0 01             	add    $0x1,%eax
 194:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
 198:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 19d:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
 1a1:	66 3b 45 e2          	cmp    -0x1e(%rbp),%ax
 1a5:	72 8b                	jb     132 <debug_dump+0x132>
 1a7:	bf 0a 00 00 00       	mov    $0xa,%edi
 1ac:	e8 00 00 00 00       	call   1b1 <debug_dump+0x1b1>
 1b1:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
 1b5:	66 3b 45 c4          	cmp    -0x3c(%rbp),%ax
 1b9:	0f 82 99 fe ff ff    	jb     58 <debug_dump+0x58>
 1bf:	90                   	nop
 1c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1c4:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1cb:	00 00 
 1cd:	74 05                	je     1d4 <debug_dump+0x1d4>
 1cf:	e8 00 00 00 00       	call   1d4 <debug_dump+0x1d4>
 1d4:	c9                   	leave  
 1d5:	c3                   	ret    

debug_exception.o:     file format elf64-x86-64


debug_print_bits.o:     file format elf64-x86-64


Disassembly of section .text.debug_print_bits:

0000000000000000 <debug_print_bits>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	89 7d dc             	mov    %edi,-0x24(%rbp)
   f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  16:	00 00 
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	c7 45 f0 00 00 00 80 	movl   $0x80000000,-0x10(%rbp)
  25:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  2c:	eb 36                	jmp    64 <debug_print_bits+0x64>
  2e:	8b 45 f0             	mov    -0x10(%rbp),%eax
  31:	23 45 dc             	and    -0x24(%rbp),%eax
  34:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  37:	75 24                	jne    5d <debug_print_bits+0x5d>
  39:	b8 1f 00 00 00       	mov    $0x1f,%eax
  3e:	2b 45 ec             	sub    -0x14(%rbp),%eax
  41:	89 45 f4             	mov    %eax,-0xc(%rbp)
  44:	8b 45 f4             	mov    -0xc(%rbp),%eax
  47:	89 c6                	mov    %eax,%esi
  49:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 50 <debug_print_bits+0x50>
  50:	48 89 c7             	mov    %rax,%rdi
  53:	b8 00 00 00 00       	mov    $0x0,%eax
  58:	e8 00 00 00 00       	call   5d <debug_print_bits+0x5d>
  5d:	d1 6d f0             	shrl   -0x10(%rbp)
  60:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  64:	83 7d ec 1f          	cmpl   $0x1f,-0x14(%rbp)
  68:	76 c4                	jbe    2e <debug_print_bits+0x2e>
  6a:	bf 0a 00 00 00       	mov    $0xa,%edi
  6f:	e8 00 00 00 00       	call   74 <debug_print_bits+0x74>
  74:	90                   	nop
  75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  79:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  80:	00 00 
  82:	74 05                	je     89 <debug_print_bits+0x89>
  84:	e8 00 00 00 00       	call   89 <debug_print_bits+0x89>
  89:	c9                   	leave  
  8a:	c3                   	ret    
