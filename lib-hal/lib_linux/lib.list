In archive lib_linux/libhal.a:

console_status.o:     file format elf64-x86-64


Disassembly of section .text.console_status:

0000000000000000 <console_status>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  26:	48 89 c7             	mov    %rax,%rdi
  29:	e8 00 00 00 00       	call   2e <console_status+0x2e>
  2e:	90                   	nop
  2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  33:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  3a:	00 00 
  3c:	74 05                	je     43 <console_status+0x43>
  3e:	e8 00 00 00 00       	call   43 <console_status+0x43>
  43:	c9                   	leave  
  44:	c3                   	ret    

firmwareversion.o:     file format elf64-x86-64


Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1d <Hardware::Get()+0x1d>
  1d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  22:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  29:	00 00 
  2b:	74 05                	je     32 <Hardware::Get()+0x32>
  2d:	e8 00 00 00 00       	call   32 <Hardware::Get()+0x32>
  32:	48 83 c4 18          	add    $0x18,%rsp
  36:	c3                   	ret    

Disassembly of section .text._ZN15FirmwareVersionC2EPKcS1_S1_:

0000000000000000 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	49 89 c8             	mov    %rcx,%r8
   8:	53                   	push   %rbx
   9:	48 8d 1d 00 00 00 00 	lea    0x0(%rip),%rbx        # 10 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x10>
  10:	48 83 ec 18          	sub    $0x18,%rsp
  14:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
  1b:	00 00 
  1d:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  22:	31 c9                	xor    %ecx,%ecx
  24:	48 89 3d 00 00 00 00 	mov    %rdi,0x0(%rip)        # 2b <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x2b>
  2b:	66 8b 0e             	mov    (%rsi),%cx
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	66 89 0d 00 00 00 00 	mov    %cx,0x0(%rip)        # 38 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x38>
  38:	8a 46 02             	mov    0x2(%rsi),%al
  3b:	b9 0b 00 00 00       	mov    $0xb,%ecx
  40:	48 89 d6             	mov    %rdx,%rsi
  43:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 49 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x49>
  49:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
  4b:	49 8b 00             	mov    (%r8),%rax
  4e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 55 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x55>
  55:	48 89 fd             	mov    %rdi,%rbp
  58:	e8 00 00 00 00       	call   5d <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5d>
  5d:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6a>
  6a:	55                   	push   %rbp
  6b:	4c 8d 43 fd          	lea    -0x3(%rbx),%r8
  6f:	b9 03 00 00 00       	mov    $0x3,%ecx
  74:	6a 08                	push   $0x8
  76:	49 89 c1             	mov    %rax,%r9
  79:	31 c0                	xor    %eax,%eax
  7b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 82 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x82>
  82:	53                   	push   %rbx
  83:	be 3f 00 00 00       	mov    $0x3f,%esi
  88:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 8f <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x8f>
  8f:	6a 0b                	push   $0xb
  91:	e8 00 00 00 00       	call   96 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  9f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  a6:	00 00 
  a8:	74 05                	je     af <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xaf>
  aa:	e8 00 00 00 00       	call   af <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0xaf>
  af:	48 83 c4 18          	add    $0x18,%rsp
  b3:	5b                   	pop    %rbx
  b4:	5d                   	pop    %rbp
  b5:	c3                   	ret    

hardware.o:     file format elf64-x86-64


Disassembly of section .text._ZN8Hardware12SetFrequencyEj:

0000000000000000 <Hardware::SetFrequency(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  26:	75 13                	jne    3b <Hardware::SetFrequency(unsigned int)+0x3b>
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	be 00 00 00 00       	mov    $0x0,%esi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	call   39 <Hardware::SetFrequency(unsigned int)+0x39>
  39:	eb 43                	jmp    7e <Hardware::SetFrequency(unsigned int)+0x7e>
  3b:	83 7d e4 14          	cmpl   $0x14,-0x1c(%rbp)
  3f:	76 13                	jbe    54 <Hardware::SetFrequency(unsigned int)+0x54>
  41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  45:	be 01 00 00 00       	mov    $0x1,%esi
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	call   52 <Hardware::SetFrequency(unsigned int)+0x52>
  52:	eb 2a                	jmp    7e <Hardware::SetFrequency(unsigned int)+0x7e>
  54:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  58:	76 13                	jbe    6d <Hardware::SetFrequency(unsigned int)+0x6d>
  5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5e:	be 02 00 00 00       	mov    $0x2,%esi
  63:	48 89 c7             	mov    %rax,%rdi
  66:	e8 00 00 00 00       	call   6b <Hardware::SetFrequency(unsigned int)+0x6b>
  6b:	eb 11                	jmp    7e <Hardware::SetFrequency(unsigned int)+0x7e>
  6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  71:	be 03 00 00 00       	mov    $0x3,%esi
  76:	48 89 c7             	mov    %rax,%rdi
  79:	e8 00 00 00 00       	call   7e <Hardware::SetFrequency(unsigned int)+0x7e>
  7e:	90                   	nop
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8a:	00 00 
  8c:	74 05                	je     93 <Hardware::SetFrequency(unsigned int)+0x93>
  8e:	e8 00 00 00 00       	call   93 <Hardware::SetFrequency(unsigned int)+0x93>
  93:	c9                   	leave  
  94:	c3                   	ret    

Disassembly of section .text._ZN8hardware8ledblink7displayEj:

0000000000000000 <hardware::ledblink::display(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  16:	00 00 
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	90                   	nop
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  2a:	00 00 
  2c:	74 05                	je     33 <hardware::ledblink::display(unsigned int)+0x33>
  2e:	e8 00 00 00 00       	call   33 <hardware::ledblink::display(unsigned int)+0x33>
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN8Hardware15SetModeWithLockEN8hardware8ledblink4ModeEb:

0000000000000000 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 e0             	mov    %al,-0x20(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2b:	c6 80 54 02 00 00 00 	movb   $0x0,0x254(%rax)
  32:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	89 d6                	mov    %edx,%esi
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)+0x43>
  43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  47:	0f b6 55 e0          	movzbl -0x20(%rbp),%edx
  4b:	88 90 54 02 00 00    	mov    %dl,0x254(%rax)
  51:	90                   	nop
  52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  56:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5d:	00 00 
  5f:	74 05                	je     66 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)+0x66>
  61:	e8 00 00 00 00       	call   66 <Hardware::SetModeWithLock(hardware::ledblink::Mode, bool)+0x66>
  66:	c9                   	leave  
  67:	c3                   	ret    

Disassembly of section .text._ZN8Hardware7SetModeEN8hardware8ledblink4ModeE:

0000000000000000 <Hardware::SetMode(hardware::ledblink::Mode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	0f b6 80 54 02 00 00 	movzbl 0x254(%rax),%eax
  2d:	84 c0                	test   %al,%al
  2f:	0f 85 ed 00 00 00    	jne    122 <Hardware::SetMode(hardware::ledblink::Mode)+0x122>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	8b 80 50 02 00 00    	mov    0x250(%rax),%eax
  3f:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  42:	0f 84 da 00 00 00    	je     122 <Hardware::SetMode(hardware::ledblink::Mode)+0x122>
  48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4f:	89 90 50 02 00 00    	mov    %edx,0x250(%rax)
  55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  59:	8b 80 50 02 00 00    	mov    0x250(%rax),%eax
  5f:	83 f8 05             	cmp    $0x5,%eax
  62:	0f 87 95 00 00 00    	ja     fd <Hardware::SetMode(hardware::ledblink::Mode)+0xfd>
  68:	89 c0                	mov    %eax,%eax
  6a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  71:	00 
  72:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 79 <Hardware::SetMode(hardware::ledblink::Mode)+0x79>
  79:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  7c:	48 98                	cltq   
  7e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 85 <Hardware::SetMode(hardware::ledblink::Mode)+0x85>
  85:	48 01 d0             	add    %rdx,%rax
  88:	3e ff e0             	notrack jmp *%rax
  8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  8f:	be 00 00 00 00       	mov    $0x0,%esi
  94:	48 89 c7             	mov    %rax,%rdi
  97:	e8 00 00 00 00       	call   9c <Hardware::SetMode(hardware::ledblink::Mode)+0x9c>
  9c:	eb 71                	jmp    10f <Hardware::SetMode(hardware::ledblink::Mode)+0x10f>
  9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a2:	be ff 00 00 00       	mov    $0xff,%esi
  a7:	48 89 c7             	mov    %rax,%rdi
  aa:	e8 00 00 00 00       	call   af <Hardware::SetMode(hardware::ledblink::Mode)+0xaf>
  af:	eb 5e                	jmp    10f <Hardware::SetMode(hardware::ledblink::Mode)+0x10f>
  b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b5:	be 01 00 00 00       	mov    $0x1,%esi
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	call   c2 <Hardware::SetMode(hardware::ledblink::Mode)+0xc2>
  c2:	eb 4b                	jmp    10f <Hardware::SetMode(hardware::ledblink::Mode)+0x10f>
  c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c8:	be 03 00 00 00       	mov    $0x3,%esi
  cd:	48 89 c7             	mov    %rax,%rdi
  d0:	e8 00 00 00 00       	call   d5 <Hardware::SetMode(hardware::ledblink::Mode)+0xd5>
  d5:	eb 38                	jmp    10f <Hardware::SetMode(hardware::ledblink::Mode)+0x10f>
  d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  db:	be 05 00 00 00       	mov    $0x5,%esi
  e0:	48 89 c7             	mov    %rax,%rdi
  e3:	e8 00 00 00 00       	call   e8 <Hardware::SetMode(hardware::ledblink::Mode)+0xe8>
  e8:	eb 25                	jmp    10f <Hardware::SetMode(hardware::ledblink::Mode)+0x10f>
  ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ee:	be 08 00 00 00       	mov    $0x8,%esi
  f3:	48 89 c7             	mov    %rax,%rdi
  f6:	e8 00 00 00 00       	call   fb <Hardware::SetMode(hardware::ledblink::Mode)+0xfb>
  fb:	eb 12                	jmp    10f <Hardware::SetMode(hardware::ledblink::Mode)+0x10f>
  fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 101:	be 00 00 00 00       	mov    $0x0,%esi
 106:	48 89 c7             	mov    %rax,%rdi
 109:	e8 00 00 00 00       	call   10e <Hardware::SetMode(hardware::ledblink::Mode)+0x10e>
 10e:	90                   	nop
 10f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 113:	8b 80 50 02 00 00    	mov    0x250(%rax),%eax
 119:	89 c7                	mov    %eax,%edi
 11b:	e8 00 00 00 00       	call   120 <Hardware::SetMode(hardware::ledblink::Mode)+0x120>
 120:	eb 01                	jmp    123 <Hardware::SetMode(hardware::ledblink::Mode)+0x123>
 122:	90                   	nop
 123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 127:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 12e:	00 00 
 130:	74 05                	je     137 <Hardware::SetMode(hardware::ledblink::Mode)+0x137>
 132:	e8 00 00 00 00       	call   137 <Hardware::SetMode(hardware::ledblink::Mode)+0x137>
 137:	c9                   	leave  
 138:	c3                   	ret    

panel_led.o:     file format elf64-x86-64


utc.o:     file format elf64-x86-64


Disassembly of section .text._ZN3Utc8ValidateEf:

0000000000000000 <Utc::Validate(float)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
  25:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  29:	89 45 f4             	mov    %eax,-0xc(%rbp)
  2c:	83 7d f4 f4          	cmpl   $0xfffffff4,-0xc(%rbp)
  30:	7c 73                	jl     a5 <Utc::Validate(float)+0xa5>
  32:	83 7d f4 0e          	cmpl   $0xe,-0xc(%rbp)
  36:	7f 6d                	jg     a5 <Utc::Validate(float)+0xa5>
  38:	66 0f ef c0          	pxor   %xmm0,%xmm0
  3c:	f3 0f 2a 45 f4       	cvtsi2ssl -0xc(%rbp),%xmm0
  41:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
  45:	7a 11                	jp     58 <Utc::Validate(float)+0x58>
  47:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
  4b:	75 0b                	jne    58 <Utc::Validate(float)+0x58>
  4d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  50:	69 c0 10 0e 00 00    	imul   $0xe10,%eax,%eax
  56:	eb 52                	jmp    aa <Utc::Validate(float)+0xaa>
  58:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  5f:	eb 3e                	jmp    9f <Utc::Validate(float)+0x9f>
  61:	8b 45 f0             	mov    -0x10(%rbp),%eax
  64:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  6b:	00 
  6c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 73 <Utc::Validate(float)+0x73>
  73:	f3 0f 10 04 02       	movss  (%rdx,%rax,1),%xmm0
  78:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
  7c:	7a 1d                	jp     9b <Utc::Validate(float)+0x9b>
  7e:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
  82:	75 17                	jne    9b <Utc::Validate(float)+0x9b>
  84:	f3 0f 10 4d ec       	movss  -0x14(%rbp),%xmm1
  89:	f3 0f 10 05 00 00 00 	movss  0x0(%rip),%xmm0        # 91 <Utc::Validate(float)+0x91>
  90:	00 
  91:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
  95:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  99:	eb 0f                	jmp    aa <Utc::Validate(float)+0xaa>
  9b:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  9f:	83 7d f0 0a          	cmpl   $0xa,-0x10(%rbp)
  a3:	76 bc                	jbe    61 <Utc::Validate(float)+0x61>
  a5:	b8 00 00 00 00       	mov    $0x0,%eax
  aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  ae:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  b5:	00 00 
  b7:	74 05                	je     be <Utc::Validate(float)+0xbe>
  b9:	e8 00 00 00 00       	call   be <Utc::Validate(float)+0xbe>
  be:	c9                   	leave  
  bf:	c3                   	ret    

hardware.o:     file format elf64-x86-64


Disassembly of section .text._ZL9i2c_beginv:

0000000000000000 <i2c_begin()>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  15:	31 c0                	xor    %eax,%eax
  17:	90                   	nop
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  23:	00 00 
  25:	74 05                	je     2c <i2c_begin()+0x2c>
  27:	e8 00 00 00 00       	call   2c <i2c_begin()+0x2c>
  2c:	c9                   	leave  
  2d:	c3                   	ret    

Disassembly of section .text.spi_begin:

0000000000000000 <spi_begin>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  15:	31 c0                	xor    %eax,%eax
  17:	90                   	nop
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  23:	00 00 
  25:	74 05                	je     2c <spi_begin+0x2c>
  27:	e8 00 00 00 00       	call   2c <spi_begin+0x2c>
  2c:	c9                   	leave  
  2d:	c3                   	ret    

Disassembly of section .text._ZL16str_find_replacePcPKcS1_:

0000000000000000 <str_find_replace(char*, char const*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  2e:	8b 45 f0             	mov    -0x10(%rbp),%eax
  31:	89 45 f4             	mov    %eax,-0xc(%rbp)
  34:	8b 45 f4             	mov    -0xc(%rbp),%eax
  37:	89 45 e8             	mov    %eax,-0x18(%rbp)
  3a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  3d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40:	e9 af 00 00 00       	jmp    f4 <str_find_replace(char*, char const*, char const*)+0xf4>
  45:	8b 55 f4             	mov    -0xc(%rbp),%edx
  48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4c:	48 01 d0             	add    %rdx,%rax
  4f:	0f b6 10             	movzbl (%rax),%edx
  52:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  59:	48 01 c8             	add    %rcx,%rax
  5c:	0f b6 00             	movzbl (%rax),%eax
  5f:	38 c2                	cmp    %al,%dl
  61:	75 63                	jne    c6 <str_find_replace(char*, char const*, char const*)+0xc6>
  63:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  67:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  6b:	8b 55 f0             	mov    -0x10(%rbp),%edx
  6e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  72:	48 01 d0             	add    %rdx,%rax
  75:	0f b6 00             	movzbl (%rax),%eax
  78:	84 c0                	test   %al,%al
  7a:	75 78                	jne    f4 <str_find_replace(char*, char const*, char const*)+0xf4>
  7c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  83:	eb 21                	jmp    a6 <str_find_replace(char*, char const*, char const*)+0xa6>
  85:	8b 55 ec             	mov    -0x14(%rbp),%edx
  88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  8c:	48 01 d0             	add    %rdx,%rax
  8f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  92:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  96:	48 01 ca             	add    %rcx,%rdx
  99:	0f b6 00             	movzbl (%rax),%eax
  9c:	88 02                	mov    %al,(%rdx)
  9e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  a2:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  a6:	8b 55 ec             	mov    -0x14(%rbp),%edx
  a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  ad:	48 01 d0             	add    %rdx,%rax
  b0:	0f b6 00             	movzbl (%rax),%eax
  b3:	84 c0                	test   %al,%al
  b5:	75 ce                	jne    85 <str_find_replace(char*, char const*, char const*)+0x85>
  b7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  be:	8b 45 f4             	mov    -0xc(%rbp),%eax
  c1:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  c4:	eb 2e                	jmp    f4 <str_find_replace(char*, char const*, char const*)+0xf4>
  c6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  cd:	48 01 d0             	add    %rdx,%rax
  d0:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  d7:	48 01 ca             	add    %rcx,%rdx
  da:	0f b6 00             	movzbl (%rax),%eax
  dd:	88 02                	mov    %al,(%rdx)
  df:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  e3:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  e7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  ea:	89 45 f4             	mov    %eax,-0xc(%rbp)
  ed:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  f4:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  fb:	48 01 d0             	add    %rdx,%rax
  fe:	0f b6 00             	movzbl (%rax),%eax
 101:	84 c0                	test   %al,%al
 103:	0f 85 3c ff ff ff    	jne    45 <str_find_replace(char*, char const*, char const*)+0x45>
 109:	eb 11                	jmp    11c <str_find_replace(char*, char const*, char const*)+0x11c>
 10b:	8b 55 e8             	mov    -0x18(%rbp),%edx
 10e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 112:	48 01 d0             	add    %rdx,%rax
 115:	c6 00 00             	movb   $0x0,(%rax)
 118:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 11c:	8b 45 e8             	mov    -0x18(%rbp),%eax
 11f:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
 122:	72 e7                	jb     10b <str_find_replace(char*, char const*, char const*)+0x10b>
 124:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 128:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 12c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 133:	00 00 
 135:	74 05                	je     13c <str_find_replace(char*, char const*, char const*)+0x13c>
 137:	e8 00 00 00 00       	call   13c <str_find_replace(char*, char const*, char const*)+0x13c>
 13c:	c9                   	leave  
 13d:	c3                   	ret    

Disassembly of section .text._ZN8HardwareC2Ev:

0000000000000000 <Hardware::Hardware()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 57                	push   %r15
   a:	41 56                	push   %r14
   c:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  13:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  1a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  21:	00 00 
  23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  27:	31 c0                	xor    %eax,%eax
  29:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  30:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  36:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  3d:	c7 80 50 02 00 00 06 	movl   $0x6,0x250(%rax)
  44:	00 00 00 
  47:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4e:	c6 80 54 02 00 00 00 	movb   $0x0,0x254(%rax)
  55:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  5c:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 63 <Hardware::Hardware()+0x63>
  63:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  6a:	48 83 c0 04          	add    $0x4,%rax
  6e:	ba 86 01 00 00       	mov    $0x186,%edx
  73:	be 00 00 00 00       	mov    $0x0,%esi
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	e8 00 00 00 00       	call   80 <Hardware::Hardware()+0x80>
  80:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  87:	48 8d 90 8a 01 00 00 	lea    0x18a(%rax),%rdx
  8e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 95 <Hardware::Hardware()+0x95>
  95:	48 89 02             	mov    %rax,(%rdx)
  98:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  9f:	48 8d 90 0a 02 00 00 	lea    0x20a(%rax),%rdx
  a6:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # ad <Hardware::Hardware()+0xad>
  ad:	48 89 02             	mov    %rax,(%rdx)
  b0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  b7:	c6 80 ca 01 00 00 00 	movb   $0x0,0x1ca(%rax)
  be:	48 b8 77 68 69 63 68 	movabs $0x6376206863696877,%rax
  c5:	20 76 63 
  c8:	48 89 85 31 ff ff ff 	mov    %rax,-0xcf(%rbp)
  cf:	c7 85 39 ff ff ff 67 	movl   $0x636e6567,-0xc7(%rbp)
  d6:	65 6e 63 
  d9:	66 c7 85 3d ff ff ff 	movw   $0x646d,-0xc3(%rbp)
  e0:	6d 64 
  e2:	c6 85 3f ff ff ff 00 	movb   $0x0,-0xc1(%rbp)
  e9:	48 8d 85 31 ff ff ff 	lea    -0xcf(%rbp),%rax
  f0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # f7 <Hardware::Hardware()+0xf7>
  f7:	48 89 d6             	mov    %rdx,%rsi
  fa:	48 89 c7             	mov    %rax,%rdi
  fd:	e8 00 00 00 00       	call   102 <Hardware::Hardware()+0x102>
 102:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 109:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
 110:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
 117:	be 0f 00 00 00       	mov    $0xf,%esi
 11c:	48 89 c7             	mov    %rax,%rdi
 11f:	e8 00 00 00 00       	call   124 <Hardware::Hardware()+0x124>
 124:	48 85 c0             	test   %rax,%rax
 127:	0f 95 c0             	setne  %al
 12a:	84 c0                	test   %al,%al
 12c:	74 1e                	je     14c <Hardware::Hardware()+0x14c>
 12e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 135:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 13b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 142 <Hardware::Hardware()+0x142>
 142:	48 89 c7             	mov    %rax,%rdi
 145:	e8 00 00 00 00       	call   14a <Hardware::Hardware()+0x14a>
 14a:	85 c0                	test   %eax,%eax
 14c:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
 153:	00 
 154:	74 0f                	je     165 <Hardware::Hardware()+0x165>
 156:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 15d:	48 89 c7             	mov    %rax,%rdi
 160:	e8 00 00 00 00       	call   165 <Hardware::Hardware()+0x165>
 165:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 16c:	8b 00                	mov    (%rax),%eax
 16e:	83 f8 03             	cmp    $0x3,%eax
 171:	74 13                	je     186 <Hardware::Hardware()+0x186>
 173:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 17a:	48 83 c0 04          	add    $0x4,%rax
 17e:	48 89 c7             	mov    %rax,%rdi
 181:	e8 00 00 00 00       	call   186 <Hardware::Hardware()+0x186>
 186:	48 b8 63 61 74 20 2f 	movabs $0x7379732f20746163,%rax
 18d:	73 79 73 
 190:	48 ba 2f 66 69 72 6d 	movabs $0x7261776d7269662f,%rdx
 197:	77 61 72 
 19a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 19e:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
 1a2:	48 b8 65 2f 64 65 76 	movabs $0x6563697665642f65,%rax
 1a9:	69 63 65 
 1ac:	48 ba 74 72 65 65 2f 	movabs $0x7361622f65657274,%rdx
 1b3:	62 61 73 
 1b6:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 1ba:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
 1be:	48 b8 65 2f 6d 6f 64 	movabs $0x6c65646f6d2f65,%rax
 1c5:	65 6c 00 
 1c8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 1cc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 1d3:	48 8d 90 0a 02 00 00 	lea    0x20a(%rax),%rdx
 1da:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
 1de:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 1e5:	b9 40 00 00 00       	mov    $0x40,%ecx
 1ea:	48 89 c7             	mov    %rax,%rdi
 1ed:	e8 00 00 00 00       	call   1f2 <Hardware::Hardware()+0x1f2>
 1f2:	83 f0 01             	xor    $0x1,%eax
 1f5:	84 c0                	test   %al,%al
 1f7:	74 74                	je     26d <Hardware::Hardware()+0x26d>
 1f9:	48 b8 63 61 74 20 2f 	movabs $0x7379732f20746163,%rax
 200:	73 79 73 
 203:	48 ba 2f 63 6c 61 73 	movabs $0x642f7373616c632f,%rdx
 20a:	73 2f 64 
 20d:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 214:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
 21b:	48 b8 6d 69 2f 69 64 	movabs $0x6f622f64692f696d,%rax
 222:	2f 62 6f 
 225:	48 ba 61 72 64 5f 6e 	movabs $0x656d616e5f647261,%rdx
 22c:	61 6d 65 
 22f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 236:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
 23d:	c6 85 70 ff ff ff 00 	movb   $0x0,-0x90(%rbp)
 244:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 24b:	48 8d 90 0a 02 00 00 	lea    0x20a(%rax),%rdx
 252:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
 259:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 260:	b9 40 00 00 00       	mov    $0x40,%ecx
 265:	48 89 c7             	mov    %rax,%rdi
 268:	e8 00 00 00 00       	call   26d <Hardware::Hardware()+0x26d>
 26d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 274:	48 05 0a 02 00 00    	add    $0x20a,%rax
 27a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 281 <Hardware::Hardware()+0x281>
 281:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 288 <Hardware::Hardware()+0x288>
 288:	48 89 ce             	mov    %rcx,%rsi
 28b:	48 89 c7             	mov    %rax,%rdi
 28e:	e8 00 00 00 00       	call   293 <Hardware::Hardware()+0x293>
 293:	49 be 63 61 74 20 2f 	movabs $0x6f72702f20746163,%r14
 29a:	70 72 6f 
 29d:	49 bf 63 2f 63 70 75 	movabs $0x666e697570632f63,%r15
 2a4:	69 6e 66 
 2a7:	4c 89 75 80          	mov    %r14,-0x80(%rbp)
 2ab:	4c 89 7d 88          	mov    %r15,-0x78(%rbp)
 2af:	48 b8 6f 20 7c 20 67 	movabs $0x70657267207c206f,%rax
 2b6:	72 65 70 
 2b9:	48 ba 20 27 6d 6f 64 	movabs $0x206c65646f6d2720,%rdx
 2c0:	65 6c 20 
 2c3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 2c7:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
 2cb:	48 b8 6e 61 6d 65 27 	movabs $0x207c2027656d616e,%rax
 2d2:	20 7c 20 
 2d5:	48 ba 68 65 61 64 20 	movabs $0x206e2d2064616568,%rdx
 2dc:	2d 6e 20 
 2df:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 2e3:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
 2e7:	48 b8 31 20 7c 20 73 	movabs $0x20646573207c2031,%rax
 2ee:	65 64 20 
 2f1:	48 ba 27 73 2f 5e 5b 	movabs $0x5d3a5e5b5e2f7327,%rdx
 2f8:	5e 3a 5d 
 2fb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 2ff:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 303:	48 b8 2a 3a 2f 2f 67 	movabs $0x7c2027672f2f3a2a,%rax
 30a:	27 20 7c 
 30d:	48 ba 20 20 73 65 64 	movabs $0x7327206465732020,%rdx
 314:	20 27 73 
 317:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 31b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 31f:	48 b8 2f 5e 5b 5e 20 	movabs $0x202a5d205e5b5e2f,%rax
 326:	5d 2a 20 
 329:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 32d:	c7 45 d8 2f 2f 67 27 	movl   $0x27672f2f,-0x28(%rbp)
 334:	c6 45 dc 00          	movb   $0x0,-0x24(%rbp)
 338:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 33f:	48 8d 90 8a 01 00 00 	lea    0x18a(%rax),%rdx
 346:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
 34a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 351:	b9 40 00 00 00       	mov    $0x40,%ecx
 356:	48 89 c7             	mov    %rax,%rdi
 359:	e8 00 00 00 00       	call   35e <Hardware::Hardware()+0x35e>
 35e:	4c 89 75 80          	mov    %r14,-0x80(%rbp)
 362:	4c 89 7d 88          	mov    %r15,-0x78(%rbp)
 366:	48 b8 6f 20 7c 20 67 	movabs $0x70657267207c206f,%rax
 36d:	72 65 70 
 370:	48 ba 20 27 48 61 72 	movabs $0x6177647261482720,%rdx
 377:	64 77 61 
 37a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 37e:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
 382:	48 b8 72 65 27 20 7c 	movabs $0x7761207c20276572,%rax
 389:	20 61 77 
 38c:	48 ba 6b 20 27 7b 70 	movabs $0x6e6972707b27206b,%rdx
 393:	72 69 6e 
 396:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 39a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
 39e:	c7 45 b0 74 20 24 33 	movl   $0x33242074,-0x50(%rbp)
 3a5:	66 c7 45 b4 7d 27    	movw   $0x277d,-0x4c(%rbp)
 3ab:	c6 45 b6 00          	movb   $0x0,-0x4a(%rbp)
 3af:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 3b6:	48 8d 90 ca 01 00 00 	lea    0x1ca(%rax),%rdx
 3bd:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
 3c1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 3c8:	b9 40 00 00 00       	mov    $0x40,%ecx
 3cd:	48 89 c7             	mov    %rax,%rdi
 3d0:	e8 00 00 00 00       	call   3d5 <Hardware::Hardware()+0x3d5>
 3d5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 3dc:	8b 00                	mov    (%rax),%eax
 3de:	83 f8 01             	cmp    $0x1,%eax
 3e1:	0f 85 98 00 00 00    	jne    47f <Hardware::Hardware()+0x47f>
 3e7:	4c 89 75 80          	mov    %r14,-0x80(%rbp)
 3eb:	4c 89 7d 88          	mov    %r15,-0x78(%rbp)
 3ef:	48 b8 6f 20 7c 20 67 	movabs $0x70657267207c206f,%rax
 3f6:	72 65 70 
 3f9:	48 ba 20 27 52 65 76 	movabs $0x6973697665522720,%rdx
 400:	69 73 69 
 403:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 407:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
 40b:	48 b8 6f 6e 27 20 7c 	movabs $0x7761207c20276e6f,%rax
 412:	20 61 77 
 415:	48 ba 6b 20 27 7b 70 	movabs $0x6e6972707b27206b,%rdx
 41c:	72 69 6e 
 41f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 423:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
 427:	c7 45 b0 74 20 24 33 	movl   $0x33242074,-0x50(%rbp)
 42e:	66 c7 45 b4 7d 27    	movw   $0x277d,-0x4c(%rbp)
 434:	c6 45 b6 00          	movb   $0x0,-0x4a(%rbp)
 438:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
 43f:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
 443:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 44a:	b9 10 00 00 00       	mov    $0x10,%ecx
 44f:	48 89 c7             	mov    %rax,%rdi
 452:	e8 00 00 00 00       	call   457 <Hardware::Hardware()+0x457>
 457:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 45e:	ba 10 00 00 00       	mov    $0x10,%edx
 463:	be 00 00 00 00       	mov    $0x0,%esi
 468:	48 89 c7             	mov    %rax,%rdi
 46b:	e8 00 00 00 00       	call   470 <Hardware::Hardware()+0x470>
 470:	89 c2                	mov    %eax,%edx
 472:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 479:	89 90 4c 02 00 00    	mov    %edx,0x24c(%rax)
 47f:	e8 00 00 00 00       	call   484 <Hardware::Hardware()+0x484>
 484:	e8 00 00 00 00       	call   489 <Hardware::Hardware()+0x489>
 489:	90                   	nop
 48a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 48e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 495:	00 00 
 497:	74 05                	je     49e <Hardware::Hardware()+0x49e>
 499:	e8 00 00 00 00       	call   49e <Hardware::Hardware()+0x49e>
 49e:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
 4a5:	41 5e                	pop    %r14
 4a7:	41 5f                	pop    %r15
 4a9:	5d                   	pop    %rbp
 4aa:	c3                   	ret    

Disassembly of section .text._ZN8Hardware10GetMachineERh:

0000000000000000 <Hardware::GetMachine(unsigned char&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 05 08 01 00 00    	add    $0x108,%rax
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Hardware::GetMachine(unsigned char&)+0x35>
  35:	89 c2                	mov    %eax,%edx
  37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3b:	88 10                	mov    %dl,(%rax)
  3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41:	48 05 08 01 00 00    	add    $0x108,%rax
  47:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  52:	00 00 
  54:	74 05                	je     5b <Hardware::GetMachine(unsigned char&)+0x5b>
  56:	e8 00 00 00 00       	call   5b <Hardware::GetMachine(unsigned char&)+0x5b>
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN8Hardware10GetSysNameERh:

0000000000000000 <Hardware::GetSysName(unsigned char&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 83 c0 04          	add    $0x4,%rax
  2b:	48 89 c7             	mov    %rax,%rdi
  2e:	e8 00 00 00 00       	call   33 <Hardware::GetSysName(unsigned char&)+0x33>
  33:	89 c2                	mov    %eax,%edx
  35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  39:	88 10                	mov    %dl,(%rax)
  3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3f:	48 83 c0 04          	add    $0x4,%rax
  43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  47:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4e:	00 00 
  50:	74 05                	je     57 <Hardware::GetSysName(unsigned char&)+0x57>
  52:	e8 00 00 00 00       	call   57 <Hardware::GetSysName(unsigned char&)+0x57>
  57:	c9                   	leave  
  58:	c3                   	ret    

Disassembly of section .text._ZN8Hardware10GetCpuNameERh:

0000000000000000 <Hardware::GetCpuName(unsigned char&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 05 8a 01 00 00    	add    $0x18a,%rax
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Hardware::GetCpuName(unsigned char&)+0x35>
  35:	89 c2                	mov    %eax,%edx
  37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3b:	88 10                	mov    %dl,(%rax)
  3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41:	48 05 8a 01 00 00    	add    $0x18a,%rax
  47:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  52:	00 00 
  54:	74 05                	je     5b <Hardware::GetCpuName(unsigned char&)+0x5b>
  56:	e8 00 00 00 00       	call   5b <Hardware::GetCpuName(unsigned char&)+0x5b>
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN8Hardware10GetSocNameERh:

0000000000000000 <Hardware::GetSocName(unsigned char&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 05 ca 01 00 00    	add    $0x1ca,%rax
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Hardware::GetSocName(unsigned char&)+0x35>
  35:	89 c2                	mov    %eax,%edx
  37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3b:	88 10                	mov    %dl,(%rax)
  3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41:	48 05 ca 01 00 00    	add    $0x1ca,%rax
  47:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  52:	00 00 
  54:	74 05                	je     5b <Hardware::GetSocName(unsigned char&)+0x5b>
  56:	e8 00 00 00 00       	call   5b <Hardware::GetSocName(unsigned char&)+0x5b>
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN8Hardware12GetReleaseIdEv:

0000000000000000 <Hardware::GetReleaseId()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 05 86 00 00 00    	add    $0x86,%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	call   31 <Hardware::GetReleaseId()+0x31>
  31:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  35:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  3c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  43:	00 
  44:	eb 5d                	jmp    a3 <Hardware::GetReleaseId()+0xa3>
  46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	48 01 d0             	add    %rdx,%rax
  51:	48 05 86 00 00 00    	add    $0x86,%rax
  57:	0f b6 00             	movzbl (%rax),%eax
  5a:	0f be c0             	movsbl %al,%eax
  5d:	83 e8 30             	sub    $0x30,%eax
  60:	83 f8 09             	cmp    $0x9,%eax
  63:	0f 96 c0             	setbe  %al
  66:	0f b6 c0             	movzbl %al,%eax
  69:	85 c0                	test   %eax,%eax
  6b:	74 31                	je     9e <Hardware::GetReleaseId()+0x9e>
  6d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  70:	89 d0                	mov    %edx,%eax
  72:	c1 e0 02             	shl    $0x2,%eax
  75:	01 d0                	add    %edx,%eax
  77:	01 c0                	add    %eax,%eax
  79:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  7c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  84:	48 01 d0             	add    %rdx,%rax
  87:	48 05 86 00 00 00    	add    $0x86,%rax
  8d:	0f b6 00             	movzbl (%rax),%eax
  90:	0f be d0             	movsbl %al,%edx
  93:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  96:	01 d0                	add    %edx,%eax
  98:	83 e8 30             	sub    $0x30,%eax
  9b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  9e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  ab:	72 99                	jb     46 <Hardware::GetReleaseId()+0x46>
  ad:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  b0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  b4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  bb:	00 00 
  bd:	74 05                	je     c4 <Hardware::GetReleaseId()+0xc4>
  bf:	e8 00 00 00 00       	call   c4 <Hardware::GetReleaseId()+0xc4>
  c4:	c9                   	leave  
  c5:	c3                   	ret    

Disassembly of section .text._ZN8Hardware12GetBoardNameERh:

0000000000000000 <Hardware::GetBoardName(unsigned char&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	48 05 0a 02 00 00    	add    $0x20a,%rax
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Hardware::GetBoardName(unsigned char&)+0x35>
  35:	89 c2                	mov    %eax,%edx
  37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3b:	88 10                	mov    %dl,(%rax)
  3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41:	48 05 0a 02 00 00    	add    $0x20a,%rax
  47:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  52:	00 00 
  54:	74 05                	je     5b <Hardware::GetBoardName(unsigned char&)+0x5b>
  56:	e8 00 00 00 00       	call   5b <Hardware::GetBoardName(unsigned char&)+0x5b>
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN8Hardware9GetUpTimeEv:

0000000000000000 <Hardware::GetUpTime()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   f:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	call   31 <Hardware::GetUpTime()+0x31>
  31:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  37:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
  3e:	74 1c                	je     5c <Hardware::GetUpTime()+0x5c>
  40:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  46:	89 c6                	mov    %eax,%esi
  48:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4f <Hardware::GetUpTime()+0x4f>
  4f:	48 89 c7             	mov    %rax,%rdi
  52:	b8 00 00 00 00       	mov    $0x0,%eax
  57:	e8 00 00 00 00       	call   5c <Hardware::GetUpTime()+0x5c>
  5c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  60:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  64:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  6b:	00 00 
  6d:	74 05                	je     74 <Hardware::GetUpTime()+0x74>
  6f:	e8 00 00 00 00       	call   74 <Hardware::GetUpTime()+0x74>
  74:	c9                   	leave  
  75:	c3                   	ret    

Disassembly of section .text._ZN8Hardware7SetTimeEPK2tm:

0000000000000000 <Hardware::SetTime(tm const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	b8 01 00 00 00       	mov    $0x1,%eax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  33:	00 00 
  35:	74 05                	je     3c <Hardware::SetTime(tm const*)+0x3c>
  37:	e8 00 00 00 00       	call   3c <Hardware::SetTime(tm const*)+0x3c>
  3c:	c9                   	leave  
  3d:	c3                   	ret    

Disassembly of section .text._ZN8Hardware7GetTimeEP2tm:

0000000000000000 <Hardware::GetTime(tm*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	bf 00 00 00 00       	mov    $0x0,%edi
  28:	e8 00 00 00 00       	call   2d <Hardware::GetTime(tm*)+0x2d>
  2d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  31:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <Hardware::GetTime(tm*)+0x3d>
  3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  45:	8b 50 14             	mov    0x14(%rax),%edx
  48:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4c:	89 50 14             	mov    %edx,0x14(%rax)
  4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  53:	8b 50 10             	mov    0x10(%rax),%edx
  56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  5a:	89 50 10             	mov    %edx,0x10(%rax)
  5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  61:	8b 50 0c             	mov    0xc(%rax),%edx
  64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  68:	89 50 0c             	mov    %edx,0xc(%rax)
  6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6f:	8b 50 08             	mov    0x8(%rax),%edx
  72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  76:	89 50 08             	mov    %edx,0x8(%rax)
  79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7d:	8b 50 04             	mov    0x4(%rax),%edx
  80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  84:	89 50 04             	mov    %edx,0x4(%rax)
  87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  8b:	8b 10                	mov    (%rax),%edx
  8d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  91:	89 10                	mov    %edx,(%rax)
  93:	90                   	nop
  94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  98:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  9f:	00 00 
  a1:	74 05                	je     a8 <Hardware::GetTime(tm*)+0xa8>
  a3:	e8 00 00 00 00       	call   a8 <Hardware::GetTime(tm*)+0xa8>
  a8:	c9                   	leave  
  a9:	c3                   	ret    

Disassembly of section .text._ZN8Hardware6RebootEv:

0000000000000000 <Hardware::Reboot()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	e8 00 00 00 00       	call   24 <Hardware::Reboot()+0x24>
  24:	85 c0                	test   %eax,%eax
  26:	0f 94 c0             	sete   %al
  29:	84 c0                	test   %al,%al
  2b:	74 2e                	je     5b <Hardware::Reboot()+0x5b>
  2d:	e8 00 00 00 00       	call   32 <Hardware::Reboot()+0x32>
  32:	bf 67 45 23 01       	mov    $0x1234567,%edi
  37:	e8 00 00 00 00       	call   3c <Hardware::Reboot()+0x3c>
  3c:	85 c0                	test   %eax,%eax
  3e:	0f 94 c0             	sete   %al
  41:	84 c0                	test   %al,%al
  43:	74 07                	je     4c <Hardware::Reboot()+0x4c>
  45:	b8 01 00 00 00       	mov    $0x1,%eax
  4a:	eb 23                	jmp    6f <Hardware::Reboot()+0x6f>
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <Hardware::Reboot()+0x53>
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	call   5b <Hardware::Reboot()+0x5b>
  5b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 62 <Hardware::Reboot()+0x62>
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <Hardware::Reboot()+0x6a>
  6a:	b8 00 00 00 00       	mov    $0x0,%eax
  6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  73:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  7a:	00 00 
  7c:	74 05                	je     83 <Hardware::Reboot()+0x83>
  7e:	e8 00 00 00 00       	call   83 <Hardware::Reboot()+0x83>
  83:	c9                   	leave  
  84:	c3                   	ret    

Disassembly of section .text._ZN8Hardware8PowerOffEv:

0000000000000000 <Hardware::PowerOff()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	e8 00 00 00 00       	call   24 <Hardware::PowerOff()+0x24>
  24:	85 c0                	test   %eax,%eax
  26:	0f 94 c0             	sete   %al
  29:	84 c0                	test   %al,%al
  2b:	74 35                	je     62 <Hardware::PowerOff()+0x62>
  2d:	e8 00 00 00 00       	call   32 <Hardware::PowerOff()+0x32>
  32:	bf dc fe 21 43       	mov    $0x4321fedc,%edi
  37:	e8 00 00 00 00       	call   3c <Hardware::PowerOff()+0x3c>
  3c:	85 c0                	test   %eax,%eax
  3e:	0f 94 c0             	sete   %al
  41:	84 c0                	test   %al,%al
  43:	74 07                	je     4c <Hardware::PowerOff()+0x4c>
  45:	b8 01 00 00 00       	mov    $0x1,%eax
  4a:	eb 2a                	jmp    76 <Hardware::PowerOff()+0x76>
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <Hardware::PowerOff()+0x53>
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	call   5b <Hardware::PowerOff()+0x5b>
  5b:	b8 00 00 00 00       	mov    $0x0,%eax
  60:	eb 14                	jmp    76 <Hardware::PowerOff()+0x76>
  62:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 69 <Hardware::PowerOff()+0x69>
  69:	48 89 c7             	mov    %rax,%rdi
  6c:	e8 00 00 00 00       	call   71 <Hardware::PowerOff()+0x71>
  71:	b8 00 00 00 00       	mov    $0x0,%eax
  76:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  7a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  81:	00 00 
  83:	74 05                	je     8a <Hardware::PowerOff()+0x8a>
  85:	e8 00 00 00 00       	call   8a <Hardware::PowerOff()+0x8a>
  8a:	c9                   	leave  
  8b:	c3                   	ret    

Disassembly of section .text._ZN8Hardware18GetCoreTemperatureEv:

0000000000000000 <Hardware::GetCoreTemperature()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  23:	8b 00                	mov    (%rax),%eax
  25:	83 f8 01             	cmp    $0x1,%eax
  28:	75 7f                	jne    a9 <Hardware::GetCoreTemperature()+0xa9>
  2a:	48 b8 76 63 67 65 6e 	movabs $0x646d636e65676376,%rax
  31:	63 6d 64 
  34:	48 ba 20 6d 65 61 73 	movabs $0x6572757361656d20,%rdx
  3b:	75 72 65 
  3e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  42:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  46:	48 b8 5f 74 65 6d 70 	movabs $0x65207c706d65745f,%rax
  4d:	7c 20 65 
  50:	48 ba 67 72 65 70 20 	movabs $0x305b222070657267,%rdx
  57:	22 5b 30 
  5a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  5e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  62:	48 b8 2d 39 2e 5d 7b 	movabs $0x7d2c347b5d2e392d,%rax
  69:	34 2c 7d 
  6c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  70:	c7 45 e8 22 20 2d 6f 	movl   $0x6f2d2022,-0x18(%rbp)
  77:	c6 45 ec 00          	movb   $0x0,-0x14(%rbp)
  7b:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
  7f:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
  83:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  87:	b9 08 00 00 00       	mov    $0x8,%ecx
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <Hardware::GetCoreTemperature()+0x94>
  94:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
  98:	48 89 c7             	mov    %rax,%rdi
  9b:	e8 00 00 00 00       	call   a0 <Hardware::GetCoreTemperature()+0xa0>
  a0:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
  a4:	e9 8e 00 00 00       	jmp    137 <Hardware::GetCoreTemperature()+0x137>
  a9:	48 b8 73 65 6e 73 6f 	movabs $0x2073726f736e6573,%rax
  b0:	72 73 20 
  b3:	48 ba 7c 20 67 72 65 	movabs $0x272070657267207c,%rdx
  ba:	70 20 27 
  bd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  c1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  c5:	48 b8 43 6f 72 65 20 	movabs $0x2027302065726f43,%rax
  cc:	30 27 20 
  cf:	48 ba 7c 20 61 77 6b 	movabs $0x7b27206b7761207c,%rdx
  d6:	20 27 7b 
  d9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  e1:	48 b8 70 72 69 6e 74 	movabs $0x332420746e697270,%rax
  e8:	20 24 33 
  eb:	48 ba 7d 27 20 7c 20 	movabs $0x747563207c20277d,%rdx
  f2:	63 75 74 
  f5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  f9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  fd:	c7 45 f0 20 2d 63 32 	movl   $0x32632d20,-0x10(%rbp)
 104:	66 c7 45 f4 2d 33    	movw   $0x332d,-0xc(%rbp)
 10a:	c6 45 f6 00          	movb   $0x0,-0xa(%rbp)
 10e:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
 112:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
 116:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 11a:	b9 06 00 00 00       	mov    $0x6,%ecx
 11f:	48 89 c7             	mov    %rax,%rdi
 122:	e8 00 00 00 00       	call   127 <Hardware::GetCoreTemperature()+0x127>
 127:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 12b:	48 89 c7             	mov    %rax,%rdi
 12e:	e8 00 00 00 00       	call   133 <Hardware::GetCoreTemperature()+0x133>
 133:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
 137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 13b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 142:	00 00 
 144:	74 05                	je     14b <Hardware::GetCoreTemperature()+0x14b>
 146:	e8 00 00 00 00       	call   14b <Hardware::GetCoreTemperature()+0x14b>
 14b:	c9                   	leave  
 14c:	c3                   	ret    

Disassembly of section .text._ZN8Hardware21GetCoreTemperatureMaxEv:

0000000000000000 <Hardware::GetCoreTemperatureMax()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	f3 0f 10 05 00 00 00 	movss  0x0(%rip),%xmm0        # 27 <Hardware::GetCoreTemperatureMax()+0x27>
  26:	00 
  27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  32:	00 00 
  34:	74 05                	je     3b <Hardware::GetCoreTemperatureMax()+0x3b>
  36:	e8 00 00 00 00       	call   3b <Hardware::GetCoreTemperatureMax()+0x3b>
  3b:	c9                   	leave  
  3c:	c3                   	ret    

Disassembly of section .text._ZN8Hardware6SetLedEN8hardware9LedStatusE:

0000000000000000 <Hardware::SetLed(hardware::LedStatus)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	8b 00                	mov    (%rax),%eax
  28:	83 f8 01             	cmp    $0x1,%eax
  2b:	0f 85 93 00 00 00    	jne    c4 <Hardware::SetLed(hardware::LedStatus)+0xc4>
  31:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 37 <Hardware::SetLed(hardware::LedStatus)+0x37>
  37:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  3a:	0f 84 83 00 00 00    	je     c3 <Hardware::SetLed(hardware::LedStatus)+0xc3>
  40:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  43:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 49 <Hardware::SetLed(hardware::LedStatus)+0x49>
  49:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  50:	00 
  51:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
  55:	74 47                	je     9e <Hardware::SetLed(hardware::LedStatus)+0x9e>
  57:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
  5b:	7f 4e                	jg     ab <Hardware::SetLed(hardware::LedStatus)+0xab>
  5d:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
  61:	74 2e                	je     91 <Hardware::SetLed(hardware::LedStatus)+0x91>
  63:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
  67:	7f 42                	jg     ab <Hardware::SetLed(hardware::LedStatus)+0xab>
  69:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  6d:	74 08                	je     77 <Hardware::SetLed(hardware::LedStatus)+0x77>
  6f:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  73:	74 0f                	je     84 <Hardware::SetLed(hardware::LedStatus)+0x84>
  75:	eb 34                	jmp    ab <Hardware::SetLed(hardware::LedStatus)+0xab>
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <Hardware::SetLed(hardware::LedStatus)+0x7e>
  7e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  82:	eb 28                	jmp    ac <Hardware::SetLed(hardware::LedStatus)+0xac>
  84:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8b <Hardware::SetLed(hardware::LedStatus)+0x8b>
  8b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  8f:	eb 1b                	jmp    ac <Hardware::SetLed(hardware::LedStatus)+0xac>
  91:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 98 <Hardware::SetLed(hardware::LedStatus)+0x98>
  98:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  9c:	eb 0e                	jmp    ac <Hardware::SetLed(hardware::LedStatus)+0xac>
  9e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a5 <Hardware::SetLed(hardware::LedStatus)+0xa5>
  a5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  a9:	eb 01                	jmp    ac <Hardware::SetLed(hardware::LedStatus)+0xac>
  ab:	90                   	nop
  ac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  b1:	74 11                	je     c4 <Hardware::SetLed(hardware::LedStatus)+0xc4>
  b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  b7:	48 89 c7             	mov    %rax,%rdi
  ba:	e8 00 00 00 00       	call   bf <Hardware::SetLed(hardware::LedStatus)+0xbf>
  bf:	85 c0                	test   %eax,%eax
  c1:	eb 01                	jmp    c4 <Hardware::SetLed(hardware::LedStatus)+0xc4>
  c3:	90                   	nop
  c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  cf:	00 00 
  d1:	74 05                	je     d8 <Hardware::SetLed(hardware::LedStatus)+0xd8>
  d3:	e8 00 00 00 00       	call   d8 <Hardware::SetLed(hardware::LedStatus)+0xd8>
  d8:	c9                   	leave  
  d9:	c3                   	ret    

Disassembly of section .text._ZN8Hardware7ExecCmdEPKcPci:

0000000000000000 <Hardware::ExecCmd(char const*, char*, int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  18:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  1b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  22:	00 00 
  24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  28:	31 c0                	xor    %eax,%eax
  2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  2e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 35 <Hardware::ExecCmd(char const*, char*, int)+0x35>
  35:	48 89 d6             	mov    %rdx,%rsi
  38:	48 89 c7             	mov    %rax,%rdi
  3b:	e8 00 00 00 00       	call   40 <Hardware::ExecCmd(char const*, char*, int)+0x40>
  40:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  44:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  47:	8d 48 ff             	lea    -0x1(%rax),%ecx
  4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  52:	89 ce                	mov    %ecx,%esi
  54:	48 89 c7             	mov    %rax,%rdi
  57:	e8 00 00 00 00       	call   5c <Hardware::ExecCmd(char const*, char*, int)+0x5c>
  5c:	48 85 c0             	test   %rax,%rax
  5f:	0f 94 c0             	sete   %al
  62:	84 c0                	test   %al,%al
  64:	74 13                	je     79 <Hardware::ExecCmd(char const*, char*, int)+0x79>
  66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <Hardware::ExecCmd(char const*, char*, int)+0x72>
  72:	b8 00 00 00 00       	mov    $0x0,%eax
  77:	eb 49                	jmp    c2 <Hardware::ExecCmd(char const*, char*, int)+0xc2>
  79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  7d:	48 89 c7             	mov    %rax,%rdi
  80:	e8 00 00 00 00       	call   85 <Hardware::ExecCmd(char const*, char*, int)+0x85>
  85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  8d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  91:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  95:	48 01 d0             	add    %rdx,%rax
  98:	0f b6 00             	movzbl (%rax),%eax
  9b:	3c 1f                	cmp    $0x1f,%al
  9d:	7f 12                	jg     b1 <Hardware::ExecCmd(char const*, char*, int)+0xb1>
  9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  a3:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  ab:	48 01 d0             	add    %rdx,%rax
  ae:	c6 00 00             	movb   $0x0,(%rax)
  b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b5:	48 89 c7             	mov    %rax,%rdi
  b8:	e8 00 00 00 00       	call   bd <Hardware::ExecCmd(char const*, char*, int)+0xbd>
  bd:	b8 01 00 00 00       	mov    $0x1,%eax
  c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  c6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  cd:	00 00 
  cf:	74 05                	je     d6 <Hardware::ExecCmd(char const*, char*, int)+0xd6>
  d1:	e8 00 00 00 00       	call   d6 <Hardware::ExecCmd(char const*, char*, int)+0xd6>
  d6:	c9                   	leave  
  d7:	c3                   	ret    

Disassembly of section .text._ZN8Hardware6MicrosEv:

0000000000000000 <Hardware::Micros()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  23:	be 00 00 00 00       	mov    $0x0,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <Hardware::Micros()+0x30>
  30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  34:	69 d0 40 42 0f 00    	imul   $0xf4240,%eax,%edx
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	01 d0                	add    %edx,%eax
  40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  44:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4b:	00 00 
  4d:	74 05                	je     54 <Hardware::Micros()+0x54>
  4f:	e8 00 00 00 00       	call   54 <Hardware::Micros()+0x54>
  54:	c9                   	leave  
  55:	c3                   	ret    

Disassembly of section .text._ZN8Hardware6MillisEv:

0000000000000000 <Hardware::Millis()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  23:	be 00 00 00 00       	mov    $0x0,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <Hardware::Millis()+0x30>
  30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  34:	69 f0 e8 03 00 00    	imul   $0x3e8,%eax,%esi
  3a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  3e:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
  45:	9b c4 20 
  48:	48 89 c8             	mov    %rcx,%rax
  4b:	48 f7 ea             	imul   %rdx
  4e:	48 89 d0             	mov    %rdx,%rax
  51:	48 c1 f8 07          	sar    $0x7,%rax
  55:	48 c1 f9 3f          	sar    $0x3f,%rcx
  59:	48 89 ca             	mov    %rcx,%rdx
  5c:	48 29 d0             	sub    %rdx,%rax
  5f:	01 f0                	add    %esi,%eax
  61:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  65:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  6c:	00 00 
  6e:	74 05                	je     75 <Hardware::Millis()+0x75>
  70:	e8 00 00 00 00       	call   75 <Hardware::Millis()+0x75>
  75:	c9                   	leave  
  76:	c3                   	ret    

Disassembly of section .text._ZN8Hardware7GetUuidEPh:

0000000000000000 <Hardware::GetUuid(unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 70          	sub    $0x70,%rsp
   c:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  10:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 b8 63 61 74 20 2f 	movabs $0x6374652f20746163,%rax
  2a:	65 74 63 
  2d:	48 ba 2f 6d 61 63 68 	movabs $0x656e696863616d2f,%rdx
  34:	69 6e 65 
  37:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  3b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  3f:	c7 45 c0 2d 69 64 00 	movl   $0x64692d,-0x40(%rbp)
  46:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  4a:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
  4e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  52:	b9 26 00 00 00       	mov    $0x26,%ecx
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	call   5f <Hardware::GetUuid(unsigned char*)+0x5f>
  5f:	c7 45 a0 0d 00 00 00 	movl   $0xd,-0x60(%rbp)
  66:	eb 1d                	jmp    85 <Hardware::GetUuid(unsigned char*)+0x85>
  68:	8b 45 a0             	mov    -0x60(%rbp),%eax
  6b:	8d 48 13             	lea    0x13(%rax),%ecx
  6e:	8b 45 a0             	mov    -0x60(%rbp),%eax
  71:	8d 50 17             	lea    0x17(%rax),%edx
  74:	89 c8                	mov    %ecx,%eax
  76:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax
  7b:	89 d2                	mov    %edx,%edx
  7d:	88 44 15 d0          	mov    %al,-0x30(%rbp,%rdx,1)
  81:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
  85:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
  89:	75 dd                	jne    68 <Hardware::GetUuid(unsigned char*)+0x68>
  8b:	c7 45 a4 05 00 00 00 	movl   $0x5,-0x5c(%rbp)
  92:	eb 1d                	jmp    b1 <Hardware::GetUuid(unsigned char*)+0xb1>
  94:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  97:	8d 48 0f             	lea    0xf(%rax),%ecx
  9a:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  9d:	8d 50 12             	lea    0x12(%rax),%edx
  a0:	89 c8                	mov    %ecx,%eax
  a2:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax
  a7:	89 d2                	mov    %edx,%edx
  a9:	88 44 15 d0          	mov    %al,-0x30(%rbp,%rdx,1)
  ad:	83 6d a4 01          	subl   $0x1,-0x5c(%rbp)
  b1:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
  b5:	75 dd                	jne    94 <Hardware::GetUuid(unsigned char*)+0x94>
  b7:	c7 45 a8 05 00 00 00 	movl   $0x5,-0x58(%rbp)
  be:	eb 1d                	jmp    dd <Hardware::GetUuid(unsigned char*)+0xdd>
  c0:	8b 45 a8             	mov    -0x58(%rbp),%eax
  c3:	8d 48 0b             	lea    0xb(%rax),%ecx
  c6:	8b 45 a8             	mov    -0x58(%rbp),%eax
  c9:	8d 50 0d             	lea    0xd(%rax),%edx
  cc:	89 c8                	mov    %ecx,%eax
  ce:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax
  d3:	89 d2                	mov    %edx,%edx
  d5:	88 44 15 d0          	mov    %al,-0x30(%rbp,%rdx,1)
  d9:	83 6d a8 01          	subl   $0x1,-0x58(%rbp)
  dd:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
  e1:	75 dd                	jne    c0 <Hardware::GetUuid(unsigned char*)+0xc0>
  e3:	c7 45 ac 05 00 00 00 	movl   $0x5,-0x54(%rbp)
  ea:	eb 1d                	jmp    109 <Hardware::GetUuid(unsigned char*)+0x109>
  ec:	8b 45 ac             	mov    -0x54(%rbp),%eax
  ef:	8d 48 07             	lea    0x7(%rax),%ecx
  f2:	8b 45 ac             	mov    -0x54(%rbp),%eax
  f5:	8d 50 08             	lea    0x8(%rax),%edx
  f8:	89 c8                	mov    %ecx,%eax
  fa:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax
  ff:	89 d2                	mov    %edx,%edx
 101:	88 44 15 d0          	mov    %al,-0x30(%rbp,%rdx,1)
 105:	83 6d ac 01          	subl   $0x1,-0x54(%rbp)
 109:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
 10d:	75 dd                	jne    ec <Hardware::GetUuid(unsigned char*)+0xec>
 10f:	c6 45 e7 2d          	movb   $0x2d,-0x19(%rbp)
 113:	c6 45 e2 2d          	movb   $0x2d,-0x1e(%rbp)
 117:	c6 45 dd 2d          	movb   $0x2d,-0x23(%rbp)
 11b:	c6 45 d8 2d          	movb   $0x2d,-0x28(%rbp)
 11f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
 123:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 127:	48 89 d6             	mov    %rdx,%rsi
 12a:	48 89 c7             	mov    %rax,%rdi
 12d:	e8 00 00 00 00       	call   132 <Hardware::GetUuid(unsigned char*)+0x132>
 132:	90                   	nop
 133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 137:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 13e:	00 00 
 140:	74 05                	je     147 <Hardware::GetUuid(unsigned char*)+0x147>
 142:	e8 00 00 00 00       	call   147 <Hardware::GetUuid(unsigned char*)+0x147>
 147:	c9                   	leave  
 148:	c3                   	ret    

Disassembly of section .text._ZN8Hardware5PrintEv:

0000000000000000 <Hardware::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 50          	sub    $0x50,%rsp
   c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	c6 45 f4 00          	movb   $0x0,-0xc(%rbp)
  23:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  27:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  2b:	48 89 d6             	mov    %rdx,%rsi
  2e:	48 89 c7             	mov    %rax,%rdi
  31:	e8 00 00 00 00       	call   36 <Hardware::Print()+0x36>
  36:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  3a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  3e:	48 89 d6             	mov    %rdx,%rsi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <Hardware::Print()+0x49>
  49:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4d:	48 05 8a 01 00 00    	add    $0x18a,%rax
  53:	48 89 c6             	mov    %rax,%rsi
  56:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5d <Hardware::Print()+0x5d>
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	b8 00 00 00 00       	mov    $0x0,%eax
  65:	e8 00 00 00 00       	call   6a <Hardware::Print()+0x6a>
  6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  6e:	48 05 ca 01 00 00    	add    $0x1ca,%rax
  74:	48 89 c6             	mov    %rax,%rsi
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <Hardware::Print()+0x7e>
  7e:	48 89 c7             	mov    %rax,%rdi
  81:	b8 00 00 00 00       	mov    $0x0,%eax
  86:	e8 00 00 00 00       	call   8b <Hardware::Print()+0x8b>
  8b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  8f:	48 05 0a 02 00 00    	add    $0x20a,%rax
  95:	48 89 c6             	mov    %rax,%rsi
  98:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9f <Hardware::Print()+0x9f>
  9f:	48 89 c7             	mov    %rax,%rdi
  a2:	b8 00 00 00 00       	mov    $0x0,%eax
  a7:	e8 00 00 00 00       	call   ac <Hardware::Print()+0xac>
  ac:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  b0:	48 89 c6             	mov    %rax,%rsi
  b3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ba <Hardware::Print()+0xba>
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	b8 00 00 00 00       	mov    $0x0,%eax
  c2:	e8 00 00 00 00       	call   c7 <Hardware::Print()+0xc7>
  c7:	90                   	nop
  c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  cc:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  d3:	00 00 
  d5:	74 05                	je     dc <Hardware::Print()+0xdc>
  d7:	e8 00 00 00 00       	call   dc <Hardware::Print()+0xdc>
  dc:	c9                   	leave  
  dd:	c3                   	ret    

uart.o:     file format elf64-x86-64


Disassembly of section .text._ZL19s_configure_termiosv:

0000000000000000 <s_configure_termios()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 25 <s_configure_termios()+0x25>
  25:	83 f8 02             	cmp    $0x2,%eax
  28:	76 0a                	jbe    34 <s_configure_termios()+0x34>
  2a:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 34 <s_configure_termios()+0x34>
  31:	00 00 00 
  34:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 3a <s_configure_termios()+0x3a>
  3a:	89 c0                	mov    %eax,%eax
  3c:	48 c1 e0 06          	shl    $0x6,%rax
  40:	48 89 c2             	mov    %rax,%rdx
  43:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4a <s_configure_termios()+0x4a>
  4a:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
  4e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  55:	48 89 c1             	mov    %rax,%rcx
  58:	ba 00 00 00 00       	mov    $0x0,%edx
  5d:	be 00 00 00 00       	mov    $0x0,%esi
  62:	e8 00 00 00 00       	call   67 <s_configure_termios()+0x67>
  67:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 6d <s_configure_termios()+0x6d>
  6d:	85 c0                	test   %eax,%eax
  6f:	7e 0d                	jle    7e <s_configure_termios()+0x7e>
  71:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 77 <s_configure_termios()+0x77>
  77:	89 c7                	mov    %eax,%edi
  79:	e8 00 00 00 00       	call   7e <s_configure_termios()+0x7e>
  7e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  85:	48 85 c0             	test   %rax,%rax
  88:	74 2e                	je     b8 <s_configure_termios()+0xb8>
  8a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  91:	48 8b 00             	mov    (%rax),%rax
  94:	be 02 09 00 00       	mov    $0x902,%esi
  99:	48 89 c7             	mov    %rax,%rdi
  9c:	b8 00 00 00 00       	mov    $0x0,%eax
  a1:	e8 00 00 00 00       	call   a6 <s_configure_termios()+0xa6>
  a6:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # ac <s_configure_termios()+0xac>
  ac:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # b2 <s_configure_termios()+0xb2>
  b2:	85 c0                	test   %eax,%eax
  b4:	79 74                	jns    12a <s_configure_termios()+0x12a>
  b6:	eb 3c                	jmp    f4 <s_configure_termios()+0xf4>
  b8:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # be <s_configure_termios()+0xbe>
  be:	89 c0                	mov    %eax,%eax
  c0:	48 c1 e0 06          	shl    $0x6,%rax
  c4:	48 89 c2             	mov    %rax,%rdx
  c7:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ce <s_configure_termios()+0xce>
  ce:	48 01 c2             	add    %rax,%rdx
  d1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # d8 <s_configure_termios()+0xd8>
  d8:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # df <s_configure_termios()+0xdf>
  df:	48 89 ce             	mov    %rcx,%rsi
  e2:	48 89 c7             	mov    %rax,%rdi
  e5:	b8 00 00 00 00       	mov    $0x0,%eax
  ea:	e8 00 00 00 00       	call   ef <s_configure_termios()+0xef>
  ef:	e9 13 02 00 00       	jmp    307 <s_configure_termios()+0x307>
  f4:	e8 00 00 00 00       	call   f9 <s_configure_termios()+0xf9>
  f9:	8b 00                	mov    (%rax),%eax
  fb:	89 c7                	mov    %eax,%edi
  fd:	e8 00 00 00 00       	call   102 <s_configure_termios()+0x102>
 102:	48 89 c3             	mov    %rax,%rbx
 105:	e8 00 00 00 00       	call   10a <s_configure_termios()+0x10a>
 10a:	8b 00                	mov    (%rax),%eax
 10c:	48 89 da             	mov    %rbx,%rdx
 10f:	89 c6                	mov    %eax,%esi
 111:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 118 <s_configure_termios()+0x118>
 118:	48 89 c7             	mov    %rax,%rdi
 11b:	b8 00 00 00 00       	mov    $0x0,%eax
 120:	e8 00 00 00 00       	call   125 <s_configure_termios()+0x125>
 125:	e9 dd 01 00 00       	jmp    307 <s_configure_termios()+0x307>
 12a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 131:	48 8b 00             	mov    (%rax),%rax
 134:	48 89 c6             	mov    %rax,%rsi
 137:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 13e <s_configure_termios()+0x13e>
 13e:	48 89 c7             	mov    %rax,%rdi
 141:	b8 00 00 00 00       	mov    $0x0,%eax
 146:	e8 00 00 00 00       	call   14b <s_configure_termios()+0x14b>
 14b:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 152:	48 89 c7             	mov    %rax,%rdi
 155:	e8 00 00 00 00       	call   15a <s_configure_termios()+0x15a>
 15a:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 160 <s_configure_termios()+0x160>
 160:	ba 00 00 00 00       	mov    $0x0,%edx
 165:	be 04 00 00 00       	mov    $0x4,%esi
 16a:	89 c7                	mov    %eax,%edi
 16c:	b8 00 00 00 00       	mov    $0x0,%eax
 171:	e8 00 00 00 00       	call   176 <s_configure_termios()+0x176>
 176:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 17c <s_configure_termios()+0x17c>
 17c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
 180:	48 89 d6             	mov    %rdx,%rsi
 183:	89 c7                	mov    %eax,%edi
 185:	e8 00 00 00 00       	call   18a <s_configure_termios()+0x18a>
 18a:	85 c0                	test   %eax,%eax
 18c:	0f 95 c0             	setne  %al
 18f:	84 c0                	test   %al,%al
 191:	74 36                	je     1c9 <s_configure_termios()+0x1c9>
 193:	e8 00 00 00 00       	call   198 <s_configure_termios()+0x198>
 198:	8b 00                	mov    (%rax),%eax
 19a:	89 c7                	mov    %eax,%edi
 19c:	e8 00 00 00 00       	call   1a1 <s_configure_termios()+0x1a1>
 1a1:	48 89 c3             	mov    %rax,%rbx
 1a4:	e8 00 00 00 00       	call   1a9 <s_configure_termios()+0x1a9>
 1a9:	8b 00                	mov    (%rax),%eax
 1ab:	48 89 da             	mov    %rbx,%rdx
 1ae:	89 c6                	mov    %eax,%esi
 1b0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1b7 <s_configure_termios()+0x1b7>
 1b7:	48 89 c7             	mov    %rax,%rdi
 1ba:	b8 00 00 00 00       	mov    $0x0,%eax
 1bf:	e8 00 00 00 00       	call   1c4 <s_configure_termios()+0x1c4>
 1c4:	e9 3e 01 00 00       	jmp    307 <s_configure_termios()+0x307>
 1c9:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1cf <s_configure_termios()+0x1cf>
 1cf:	3d 00 c2 01 00       	cmp    $0x1c200,%eax
 1d4:	75 24                	jne    1fa <s_configure_termios()+0x1fa>
 1d6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 1da:	be 02 10 00 00       	mov    $0x1002,%esi
 1df:	48 89 c7             	mov    %rax,%rdi
 1e2:	e8 00 00 00 00       	call   1e7 <s_configure_termios()+0x1e7>
 1e7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 1eb:	be 02 10 00 00       	mov    $0x1002,%esi
 1f0:	48 89 c7             	mov    %rax,%rdi
 1f3:	e8 00 00 00 00       	call   1f8 <s_configure_termios()+0x1f8>
 1f8:	eb 53                	jmp    24d <s_configure_termios()+0x24d>
 1fa:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 200 <s_configure_termios()+0x200>
 200:	3d 00 96 00 00       	cmp    $0x9600,%eax
 205:	75 24                	jne    22b <s_configure_termios()+0x22b>
 207:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 20b:	be 0f 00 00 00       	mov    $0xf,%esi
 210:	48 89 c7             	mov    %rax,%rdi
 213:	e8 00 00 00 00       	call   218 <s_configure_termios()+0x218>
 218:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 21c:	be 0f 00 00 00       	mov    $0xf,%esi
 221:	48 89 c7             	mov    %rax,%rdi
 224:	e8 00 00 00 00       	call   229 <s_configure_termios()+0x229>
 229:	eb 22                	jmp    24d <s_configure_termios()+0x24d>
 22b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 22f:	be 0d 00 00 00       	mov    $0xd,%esi
 234:	48 89 c7             	mov    %rax,%rdi
 237:	e8 00 00 00 00       	call   23c <s_configure_termios()+0x23c>
 23c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 240:	be 0d 00 00 00       	mov    $0xd,%esi
 245:	48 89 c7             	mov    %rax,%rdi
 248:	e8 00 00 00 00       	call   24d <s_configure_termios()+0x24d>
 24d:	8b 45 a8             	mov    -0x58(%rbp),%eax
 250:	80 e4 fe             	and    $0xfe,%ah
 253:	89 45 a8             	mov    %eax,-0x58(%rbp)
 256:	8b 45 a8             	mov    -0x58(%rbp),%eax
 259:	83 e0 bf             	and    $0xffffffbf,%eax
 25c:	89 45 a8             	mov    %eax,-0x58(%rbp)
 25f:	8b 45 a8             	mov    -0x58(%rbp),%eax
 262:	83 e0 cf             	and    $0xffffffcf,%eax
 265:	89 45 a8             	mov    %eax,-0x58(%rbp)
 268:	8b 45 a8             	mov    -0x58(%rbp),%eax
 26b:	83 c8 30             	or     $0x30,%eax
 26e:	89 45 a8             	mov    %eax,-0x58(%rbp)
 271:	8b 45 a8             	mov    -0x58(%rbp),%eax
 274:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
 279:	89 45 a8             	mov    %eax,-0x58(%rbp)
 27c:	8b 45 a8             	mov    -0x58(%rbp),%eax
 27f:	0d 80 08 00 00       	or     $0x880,%eax
 284:	89 45 a8             	mov    %eax,-0x58(%rbp)
 287:	8b 45 ac             	mov    -0x54(%rbp),%eax
 28a:	83 e0 fd             	and    $0xfffffffd,%eax
 28d:	89 45 ac             	mov    %eax,-0x54(%rbp)
 290:	8b 45 ac             	mov    -0x54(%rbp),%eax
 293:	83 e0 f7             	and    $0xfffffff7,%eax
 296:	89 45 ac             	mov    %eax,-0x54(%rbp)
 299:	8b 45 ac             	mov    -0x54(%rbp),%eax
 29c:	83 e0 ef             	and    $0xffffffef,%eax
 29f:	89 45 ac             	mov    %eax,-0x54(%rbp)
 2a2:	8b 45 ac             	mov    -0x54(%rbp),%eax
 2a5:	83 e0 bf             	and    $0xffffffbf,%eax
 2a8:	89 45 ac             	mov    %eax,-0x54(%rbp)
 2ab:	8b 45 ac             	mov    -0x54(%rbp),%eax
 2ae:	83 e0 fe             	and    $0xfffffffe,%eax
 2b1:	89 45 ac             	mov    %eax,-0x54(%rbp)
 2b4:	8b 45 a0             	mov    -0x60(%rbp),%eax
 2b7:	80 e4 e3             	and    $0xe3,%ah
 2ba:	89 45 a0             	mov    %eax,-0x60(%rbp)
 2bd:	8b 45 a0             	mov    -0x60(%rbp),%eax
 2c0:	25 14 fe ff ff       	and    $0xfffffe14,%eax
 2c5:	89 45 a0             	mov    %eax,-0x60(%rbp)
 2c8:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 2cb:	83 e0 fe             	and    $0xfffffffe,%eax
 2ce:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 2d1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
 2d4:	83 e0 fb             	and    $0xfffffffb,%eax
 2d7:	89 45 a4             	mov    %eax,-0x5c(%rbp)
 2da:	c6 45 b6 01          	movb   $0x1,-0x4a(%rbp)
 2de:	c6 45 b7 00          	movb   $0x0,-0x49(%rbp)
 2e2:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2e8 <s_configure_termios()+0x2e8>
 2e8:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
 2ec:	be 00 00 00 00       	mov    $0x0,%esi
 2f1:	89 c7                	mov    %eax,%edi
 2f3:	e8 00 00 00 00       	call   2f8 <s_configure_termios()+0x2f8>
 2f8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2ff <s_configure_termios()+0x2ff>
 2ff:	48 89 c7             	mov    %rax,%rdi
 302:	e8 00 00 00 00       	call   307 <s_configure_termios()+0x307>
 307:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 30b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 312:	00 00 
 314:	74 05                	je     31b <s_configure_termios()+0x31b>
 316:	e8 00 00 00 00       	call   31b <s_configure_termios()+0x31b>
 31b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 31f:	c9                   	leave  
 320:	c3                   	ret    

Disassembly of section .text.uart_begin:

0000000000000000 <uart_begin>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	89 75 e8             	mov    %esi,-0x18(%rbp)
  12:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  15:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  18:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
  1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  23:	00 00 
  25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  29:	31 c0                	xor    %eax,%eax
  2b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  2e:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 34 <uart_begin+0x34>
  34:	8b 45 e8             	mov    -0x18(%rbp),%eax
  37:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 3d <uart_begin+0x3d>
  3d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 46 <uart_begin+0x46>
  46:	8b 45 e0             	mov    -0x20(%rbp),%eax
  49:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 4f <uart_begin+0x4f>
  4f:	8b 45 dc             	mov    -0x24(%rbp),%eax
  52:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 58 <uart_begin+0x58>
  58:	e8 00 00 00 00       	call   5d <uart_begin+0x5d>
  5d:	90                   	nop
  5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  62:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  69:	00 00 
  6b:	74 05                	je     72 <uart_begin+0x72>
  6d:	e8 00 00 00 00       	call   72 <uart_begin+0x72>
  72:	c9                   	leave  
  73:	c3                   	ret    

Disassembly of section .text.uart_set_baudrate:

0000000000000000 <uart_set_baudrate>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	89 75 e8             	mov    %esi,-0x18(%rbp)
  12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  19:	00 00 
  1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1f:	31 c0                	xor    %eax,%eax
  21:	8b 45 e8             	mov    -0x18(%rbp),%eax
  24:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 2a <uart_set_baudrate+0x2a>
  2a:	e8 00 00 00 00       	call   2f <uart_set_baudrate+0x2f>
  2f:	90                   	nop
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  3b:	00 00 
  3d:	74 05                	je     44 <uart_set_baudrate+0x44>
  3f:	e8 00 00 00 00       	call   44 <uart_set_baudrate+0x44>
  44:	c9                   	leave  
  45:	c3                   	ret    

Disassembly of section .text.uart_transmit:

0000000000000000 <uart_transmit>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	89 55 e8             	mov    %edx,-0x18(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2b <uart_transmit+0x2b>
  2b:	85 c0                	test   %eax,%eax
  2d:	78 45                	js     74 <uart_transmit+0x74>
  2f:	8b 55 e8             	mov    -0x18(%rbp),%edx
  32:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 38 <uart_transmit+0x38>
  38:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  3c:	48 89 ce             	mov    %rcx,%rsi
  3f:	89 c7                	mov    %eax,%edi
  41:	e8 00 00 00 00       	call   46 <uart_transmit+0x46>
  46:	89 45 f4             	mov    %eax,-0xc(%rbp)
  49:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4c:	3b 45 e8             	cmp    -0x18(%rbp),%eax
  4f:	74 24                	je     75 <uart_transmit+0x75>
  51:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 58 <uart_transmit+0x58>
  58:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  5b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  5e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 65 <uart_transmit+0x65>
  65:	48 89 c7             	mov    %rax,%rdi
  68:	b8 00 00 00 00       	mov    $0x0,%eax
  6d:	e8 00 00 00 00       	call   72 <uart_transmit+0x72>
  72:	eb 01                	jmp    75 <uart_transmit+0x75>
  74:	90                   	nop
  75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  79:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  80:	00 00 
  82:	74 05                	je     89 <uart_transmit+0x89>
  84:	e8 00 00 00 00       	call   89 <uart_transmit+0x89>
  89:	c9                   	leave  
  8a:	c3                   	ret    

Disassembly of section .text.uart_transmit_string:

0000000000000000 <uart_transmit_string>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	89 7d dc             	mov    %edi,-0x24(%rbp)
   f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 28 <uart_transmit_string+0x28>
  28:	85 c0                	test   %eax,%eax
  2a:	78 5a                	js     86 <uart_transmit_string+0x86>
  2c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  30:	48 89 c7             	mov    %rax,%rdi
  33:	e8 00 00 00 00       	call   38 <uart_transmit_string+0x38>
  38:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  3c:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 42 <uart_transmit_string+0x42>
  42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  46:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4a:	48 89 ce             	mov    %rcx,%rsi
  4d:	89 c7                	mov    %eax,%edi
  4f:	e8 00 00 00 00       	call   54 <uart_transmit_string+0x54>
  54:	89 45 ec             	mov    %eax,-0x14(%rbp)
  57:	8b 45 ec             	mov    -0x14(%rbp),%eax
  5a:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  5e:	74 27                	je     87 <uart_transmit_string+0x87>
  60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  64:	89 c1                	mov    %eax,%ecx
  66:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 6d <uart_transmit_string+0x6d>
  6d:	8b 55 ec             	mov    -0x14(%rbp),%edx
  70:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 77 <uart_transmit_string+0x77>
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	b8 00 00 00 00       	mov    $0x0,%eax
  7f:	e8 00 00 00 00       	call   84 <uart_transmit_string+0x84>
  84:	eb 01                	jmp    87 <uart_transmit_string+0x87>
  86:	90                   	nop
  87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  92:	00 00 
  94:	74 05                	je     9b <uart_transmit_string+0x9b>
  96:	e8 00 00 00 00       	call   9b <uart_transmit_string+0x9b>
  9b:	c9                   	leave  
  9c:	c3                   	ret    

Disassembly of section .text.uart_get_rx_fifo_level:

0000000000000000 <uart_get_rx_fifo_level>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  16:	00 00 
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 24 <uart_get_rx_fifo_level+0x24>
  24:	85 c0                	test   %eax,%eax
  26:	79 07                	jns    2f <uart_get_rx_fifo_level+0x2f>
  28:	b8 00 00 00 00       	mov    $0x0,%eax
  2d:	eb 44                	jmp    73 <uart_get_rx_fifo_level+0x73>
  2f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  36:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 3c <uart_get_rx_fifo_level+0x3c>
  3c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  40:	be 1b 54 00 00       	mov    $0x541b,%esi
  45:	89 c7                	mov    %eax,%edi
  47:	b8 00 00 00 00       	mov    $0x0,%eax
  4c:	e8 00 00 00 00       	call   51 <uart_get_rx_fifo_level+0x51>
  51:	89 45 f4             	mov    %eax,-0xc(%rbp)
  54:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
  58:	75 16                	jne    70 <uart_get_rx_fifo_level+0x70>
  5a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 61 <uart_get_rx_fifo_level+0x61>
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <uart_get_rx_fifo_level+0x69>
  69:	b8 00 00 00 00       	mov    $0x0,%eax
  6e:	eb 03                	jmp    73 <uart_get_rx_fifo_level+0x73>
  70:	8b 45 f0             	mov    -0x10(%rbp),%eax
  73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  77:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  7e:	00 00 
  80:	74 05                	je     87 <uart_get_rx_fifo_level+0x87>
  82:	e8 00 00 00 00       	call   87 <uart_get_rx_fifo_level+0x87>
  87:	c9                   	leave  
  88:	c3                   	ret    

Disassembly of section .text.uart_get_rx_data:

0000000000000000 <uart_get_rx_data>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	89 7d dc             	mov    %edi,-0x24(%rbp)
   f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  16:	00 00 
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 24 <uart_get_rx_data+0x24>
  24:	85 c0                	test   %eax,%eax
  26:	79 07                	jns    2f <uart_get_rx_data+0x2f>
  28:	b8 20 00 00 00       	mov    $0x20,%eax
  2d:	eb 2f                	jmp    5e <uart_get_rx_data+0x5e>
  2f:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 35 <uart_get_rx_data+0x35>
  35:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  39:	ba 01 00 00 00       	mov    $0x1,%edx
  3e:	48 89 ce             	mov    %rcx,%rsi
  41:	89 c7                	mov    %eax,%edi
  43:	e8 00 00 00 00       	call   48 <uart_get_rx_data+0x48>
  48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  51:	7f 07                	jg     5a <uart_get_rx_data+0x5a>
  53:	b8 20 00 00 00       	mov    $0x20,%eax
  58:	eb 04                	jmp    5e <uart_get_rx_data+0x5e>
  5a:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  62:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  69:	00 00 
  6b:	74 05                	je     72 <uart_get_rx_data+0x72>
  6d:	e8 00 00 00 00       	call   72 <uart_get_rx_data+0x72>
  72:	c9                   	leave  
  73:	c3                   	ret    

Disassembly of section .text.uart_get_rx:

0000000000000000 <uart_get_rx>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	89 55 e8             	mov    %edx,-0x18(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2b <uart_get_rx+0x2b>
  2b:	85 c0                	test   %eax,%eax
  2d:	79 07                	jns    36 <uart_get_rx+0x36>
  2f:	b8 00 00 00 00       	mov    $0x0,%eax
  34:	eb 2c                	jmp    62 <uart_get_rx+0x62>
  36:	8b 55 e8             	mov    -0x18(%rbp),%edx
  39:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 3f <uart_get_rx+0x3f>
  3f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  43:	48 89 ce             	mov    %rcx,%rsi
  46:	89 c7                	mov    %eax,%edi
  48:	e8 00 00 00 00       	call   4d <uart_get_rx+0x4d>
  4d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  51:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  56:	7f 06                	jg     5e <uart_get_rx+0x5e>
  58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5c:	eb 04                	jmp    62 <uart_get_rx+0x62>
  5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  62:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  66:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  6d:	00 00 
  6f:	74 05                	je     76 <uart_get_rx+0x76>
  71:	e8 00 00 00 00       	call   76 <uart_get_rx+0x76>
  76:	c9                   	leave  
  77:	c3                   	ret    
