In archive lib_linux/libartnet.a:

artnetconst.o:     file format elf64-x86-64


artnetmsgconst.o:     file format elf64-x86-64


artnetnode.o:     file format elf64-x86-64


Disassembly of section .text._ZN8lightset4node22get_short_name_defaultEjPc:

0000000000000000 <lightset::node::get_short_name_default(unsigned int, char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	8b 45 ec             	mov    -0x14(%rbp),%eax
  25:	8d 50 01             	lea    0x1(%rax),%edx
  28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  2c:	89 d1                	mov    %edx,%ecx
  2e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 35 <lightset::node::get_short_name_default(unsigned int, char*)+0x35>
  35:	be 11 00 00 00       	mov    $0x11,%esi
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	b8 00 00 00 00       	mov    $0x0,%eax
  42:	e8 00 00 00 00       	call   47 <lightset::node::get_short_name_default(unsigned int, char*)+0x47>
  47:	90                   	nop
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  53:	00 00 
  55:	74 05                	je     5c <lightset::node::get_short_name_default(unsigned int, char*)+0x5c>
  57:	e8 00 00 00 00       	call   5c <lightset::node::get_short_name_default(unsigned int, char*)+0x5c>
  5c:	c9                   	leave  
  5d:	c3                   	ret    

Disassembly of section .text._ZNK7Network14GetBroadcastIpEv:

0000000000000000 <Network::GetBroadcastIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 50 10             	mov    0x10(%rax),%edx
  26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2a:	8b 40 18             	mov    0x18(%rax),%eax
  2d:	f7 d0                	not    %eax
  2f:	09 d0                	or     %edx,%eax
  31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  35:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  3c:	00 00 
  3e:	74 05                	je     45 <Network::GetBroadcastIp() const+0x45>
  40:	e8 00 00 00 00       	call   45 <Network::GetBroadcastIp() const+0x45>
  45:	c9                   	leave  
  46:	c3                   	ret    

Disassembly of section .text._ZNK7Network13IsDhcpCapableEv:

0000000000000000 <Network::IsDhcpCapable() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	0f b6 00             	movzbl (%rax),%eax
  26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  31:	00 00 
  33:	74 05                	je     3a <Network::IsDhcpCapable() const+0x3a>
  35:	e8 00 00 00 00       	call   3a <Network::IsDhcpCapable() const+0x3a>
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZNK7Network10IsDhcpUsedEv:

0000000000000000 <Network::IsDhcpUsed() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  32:	00 00 
  34:	74 05                	je     3b <Network::IsDhcpUsed() const+0x3b>
  36:	e8 00 00 00 00       	call   3b <Network::IsDhcpUsed() const+0x3b>
  3b:	c9                   	leave  
  3c:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Network::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Network::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Network::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data3GetEv:

0000000000000000 <lightset::Data::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 22 <lightset::Data::Get()+0x22>
  22:	84 c0                	test   %al,%al
  24:	0f 94 c0             	sete   %al
  27:	84 c0                	test   %al,%al
  29:	74 36                	je     61 <lightset::Data::Get()+0x61>
  2b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 32 <lightset::Data::Get()+0x32>
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	call   3a <lightset::Data::Get()+0x3a>
  3a:	85 c0                	test   %eax,%eax
  3c:	0f 95 c0             	setne  %al
  3f:	84 c0                	test   %al,%al
  41:	74 1e                	je     61 <lightset::Data::Get()+0x61>
  43:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4a <lightset::Data::Get()+0x4a>
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	call   52 <lightset::Data::Get()+0x52>
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <lightset::Data::Get()+0x59>
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <lightset::Data::Get()+0x61>
  61:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 68 <lightset::Data::Get()+0x68>
  68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  6c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  73:	00 00 
  75:	74 05                	je     7c <lightset::Data::Get()+0x7c>
  77:	e8 00 00 00 00       	call   7c <lightset::Data::Get()+0x7c>
  7c:	c9                   	leave  
  7d:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data11ClearLengthEj:

0000000000000000 <lightset::Data::ClearLength(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  16:	00 00 
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	e8 00 00 00 00       	call   23 <lightset::Data::ClearLength(unsigned int)+0x23>
  23:	48 89 c2             	mov    %rax,%rdx
  26:	8b 45 ec             	mov    -0x14(%rbp),%eax
  29:	89 c6                	mov    %eax,%esi
  2b:	48 89 d7             	mov    %rdx,%rdi
  2e:	e8 00 00 00 00       	call   33 <lightset::Data::ClearLength(unsigned int)+0x33>
  33:	90                   	nop
  34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  38:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  3f:	00 00 
  41:	74 05                	je     48 <lightset::Data::ClearLength(unsigned int)+0x48>
  43:	e8 00 00 00 00       	call   48 <lightset::Data::ClearLength(unsigned int)+0x48>
  48:	c9                   	leave  
  49:	c3                   	ret    

Disassembly of section .text._ZN8lightset4DataC2Ev:

0000000000000000 <lightset::Data::Data()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	90                   	nop
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  2b:	00 00 
  2d:	74 05                	je     34 <lightset::Data::Data()+0x34>
  2f:	e8 00 00 00 00       	call   34 <lightset::Data::Data()+0x34>
  34:	c9                   	leave  
  35:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data12IClearLengthEj:

0000000000000000 <lightset::Data::IClearLength(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  26:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  29:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  30:	48 01 d0             	add    %rdx,%rax
  33:	48 05 00 06 00 00    	add    $0x600,%rax
  39:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  3f:	90                   	nop
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4b:	00 00 
  4d:	74 05                	je     54 <lightset::Data::IClearLength(unsigned int)+0x54>
  4f:	e8 00 00 00 00       	call   54 <lightset::Data::IClearLength(unsigned int)+0x54>
  54:	c9                   	leave  
  55:	c3                   	ret    

Disassembly of section .text._ZN8Hardware13GetWebsiteUrlEv:

0000000000000000 <Hardware::GetWebsiteUrl()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <Hardware::GetWebsiteUrl()+0x26>
  26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  31:	00 00 
  33:	74 05                	je     3a <Hardware::GetWebsiteUrl()+0x3a>
  35:	e8 00 00 00 00       	call   3a <Hardware::GetWebsiteUrl()+0x3a>
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZN8Hardware7GetModeEv:

0000000000000000 <Hardware::GetMode()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 80 50 02 00 00    	mov    0x250(%rax),%eax
  29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  34:	00 00 
  36:	74 05                	je     3d <Hardware::GetMode()+0x3d>
  38:	e8 00 00 00 00       	call   3d <Hardware::GetMode()+0x3d>
  3d:	c9                   	leave  
  3e:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Hardware::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Hardware::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Hardware::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN3halL12panel_led_onEj:

0000000000000000 <hal::panel_led_on(unsigned int)>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	89 7d ec             	mov    %edi,-0x14(%rbp)
   b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  12:	00 00 
  14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  18:	31 c0                	xor    %eax,%eax
  1a:	90                   	nop
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  26:	00 00 
  28:	74 05                	je     2f <hal::panel_led_on(unsigned int)+0x2f>
  2a:	e8 00 00 00 00       	call   2f <hal::panel_led_on(unsigned int)+0x2f>
  2f:	c9                   	leave  
  30:	c3                   	ret    

Disassembly of section .text._ZN3halL13panel_led_offEj:

0000000000000000 <hal::panel_led_off(unsigned int)>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 20          	sub    $0x20,%rsp
   8:	89 7d ec             	mov    %edi,-0x14(%rbp)
   b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  12:	00 00 
  14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  18:	31 c0                	xor    %eax,%eax
  1a:	90                   	nop
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  26:	00 00 
  28:	74 05                	je     2f <hal::panel_led_off(unsigned int)+0x2f>
  2a:	e8 00 00 00 00       	call   2f <hal::panel_led_off(unsigned int)+0x2f>
  2f:	c9                   	leave  
  30:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNodeC2Ev:

0000000000000000 <ArtNetNode::ArtNetNode()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <ArtNetNode::ArtNetNode()+0x2b>
  2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  2f:	c7 80 30 02 00 00 ff 	movl   $0xffffffff,0x230(%rax)
  36:	ff ff ff 
  39:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  3d:	48 c7 80 38 02 00 00 	movq   $0x0,0x238(%rax)
  44:	00 00 00 00 
  48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4c:	c7 80 44 02 00 00 00 	movl   $0x0,0x244(%rax)
  53:	00 00 00 
  56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  5a:	c7 80 48 02 00 00 00 	movl   $0x0,0x248(%rax)
  61:	00 00 00 
  64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  68:	48 c7 80 50 02 00 00 	movq   $0x0,0x250(%rax)
  6f:	00 00 00 00 
  73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  77:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
  7e:	00 00 00 00 
  82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  86:	48 c7 80 60 02 00 00 	movq   $0x0,0x260(%rax)
  8d:	00 00 00 00 
  91:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  95:	48 c7 80 68 02 00 00 	movq   $0x0,0x268(%rax)
  9c:	00 00 00 00 
  a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a4:	48 c7 80 70 02 00 00 	movq   $0x0,0x270(%rax)
  ab:	00 00 00 00 
  af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b3:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # ba <ArtNetNode::ArtNetNode()+0xba>
  ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  be:	48 05 18 04 00 00    	add    $0x418,%rax
  c4:	ba ef 00 00 00       	mov    $0xef,%edx
  c9:	be 00 00 00 00       	mov    $0x0,%esi
  ce:	48 89 c7             	mov    %rax,%rdi
  d1:	e8 00 00 00 00       	call   d6 <ArtNetNode::ArtNetNode()+0xd6>
  d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  da:	48 8d 90 18 04 00 00 	lea    0x418(%rax),%rdx
  e1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # e8 <ArtNetNode::ArtNetNode()+0xe8>
  e8:	48 89 02             	mov    %rax,(%rdx)
  eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  ef:	66 c7 80 20 04 00 00 	movw   $0x2100,0x420(%rax)
  f6:	00 21 
  f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  fc:	66 c7 80 26 04 00 00 	movw   $0x1936,0x426(%rax)
 103:	36 19 
 105:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 10c <ArtNetNode::ArtNetNode()+0x10c>
 10c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 110:	88 90 28 04 00 00    	mov    %dl,0x428(%rax)
 116:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 11d <ArtNetNode::ArtNetNode()+0x11d>
 11d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 121:	88 90 29 04 00 00    	mov    %dl,0x429(%rax)
 127:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 12e <ArtNetNode::ArtNetNode()+0x12e>
 12e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 132:	88 90 2c 04 00 00    	mov    %dl,0x42c(%rax)
 138:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 13f <ArtNetNode::ArtNetNode()+0x13f>
 13f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 143:	88 90 2d 04 00 00    	mov    %dl,0x42d(%rax)
 149:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 150 <ArtNetNode::ArtNetNode()+0x150>
 150:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 154:	88 90 30 04 00 00    	mov    %dl,0x430(%rax)
 15a:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 161 <ArtNetNode::ArtNetNode()+0x161>
 161:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 165:	88 90 31 04 00 00    	mov    %dl,0x431(%rax)
 16b:	e8 00 00 00 00       	call   170 <ArtNetNode::ArtNetNode()+0x170>
 170:	48 89 c2             	mov    %rax,%rdx
 173:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 177:	48 05 e1 04 00 00    	add    $0x4e1,%rax
 17d:	48 89 c6             	mov    %rax,%rsi
 180:	48 89 d7             	mov    %rdx,%rdi
 183:	e8 00 00 00 00       	call   188 <ArtNetNode::ArtNetNode()+0x188>
 188:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 18c:	c6 80 da 04 00 00 64 	movb   $0x64,0x4da(%rax)
 193:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 197:	be 00 00 00 00       	mov    $0x0,%esi
 19c:	48 89 c7             	mov    %rax,%rdi
 19f:	e8 00 00 00 00       	call   1a4 <ArtNetNode::ArtNetNode()+0x1a4>
 1a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1a8:	48 05 78 02 00 00    	add    $0x278,%rax
 1ae:	ba 98 00 00 00       	mov    $0x98,%edx
 1b3:	be 00 00 00 00       	mov    $0x0,%esi
 1b8:	48 89 c7             	mov    %rax,%rdi
 1bb:	e8 00 00 00 00       	call   1c0 <ArtNetNode::ArtNetNode()+0x1c0>
 1c0:	e8 00 00 00 00       	call   1c5 <ArtNetNode::ArtNetNode()+0x1c5>
 1c5:	48 89 c7             	mov    %rax,%rdi
 1c8:	e8 00 00 00 00       	call   1cd <ArtNetNode::ArtNetNode()+0x1cd>
 1cd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 1d1:	89 82 78 02 00 00    	mov    %eax,0x278(%rdx)
 1d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1db:	48 05 80 02 00 00    	add    $0x280,%rax
 1e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 1e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1e9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 1ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1f1:	48 05 90 00 00 00    	add    $0x90,%rax
 1f7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 1fb:	eb 18                	jmp    215 <ArtNetNode::ArtNetNode()+0x215>
 1fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 201:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 205:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 209:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)
 210:	48 83 45 d8 24       	addq   $0x24,-0x28(%rbp)
 215:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 219:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 21d:	75 de                	jne    1fd <ArtNetNode::ArtNetNode()+0x1fd>
 21f:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
 226:	eb 1a                	jmp    242 <ArtNetNode::ArtNetNode()+0x242>
 228:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 22b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 22f:	ba 00 00 00 00       	mov    $0x0,%edx
 234:	89 ce                	mov    %ecx,%esi
 236:	48 89 c7             	mov    %rax,%rdi
 239:	e8 00 00 00 00       	call   23e <ArtNetNode::ArtNetNode()+0x23e>
 23e:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
 242:	83 7d d0 03          	cmpl   $0x3,-0x30(%rbp)
 246:	76 e0                	jbe    228 <ArtNetNode::ArtNetNode()+0x228>
 248:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 24c:	48 05 10 03 00 00    	add    $0x310,%rax
 252:	ba 58 00 00 00       	mov    $0x58,%edx
 257:	be 00 00 00 00       	mov    $0x0,%esi
 25c:	48 89 c7             	mov    %rax,%rdi
 25f:	e8 00 00 00 00       	call   264 <ArtNetNode::ArtNetNode()+0x264>
 264:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 268:	c6 80 58 03 00 00 01 	movb   $0x1,0x358(%rax)
 26f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 273:	c6 80 59 03 00 00 01 	movb   $0x1,0x359(%rax)
 27a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 27e:	0f b6 80 e6 04 00 00 	movzbl 0x4e6(%rax),%eax
 285:	0f b6 d0             	movzbl %al,%edx
 288:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 28c:	0f b6 80 e5 04 00 00 	movzbl 0x4e5(%rax),%eax
 293:	0f b6 c0             	movzbl %al,%eax
 296:	c1 e0 08             	shl    $0x8,%eax
 299:	09 c2                	or     %eax,%edx
 29b:	89 d0                	mov    %edx,%eax
 29d:	48 69 c0 d3 4d 62 10 	imul   $0x10624dd3,%rax,%rax
 2a4:	48 c1 e8 20          	shr    $0x20,%rax
 2a8:	c1 e8 06             	shr    $0x6,%eax
 2ab:	69 c8 e8 03 00 00    	imul   $0x3e8,%eax,%ecx
 2b1:	89 d0                	mov    %edx,%eax
 2b3:	29 c8                	sub    %ecx,%eax
 2b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 2b9:	89 82 1c 03 00 00    	mov    %eax,0x31c(%rdx)
 2bf:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
 2c6:	e9 de 00 00 00       	jmp    3a9 <ArtNetNode::ArtNetNode()+0x3a9>
 2cb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 2ce:	48 83 c0 1b          	add    $0x1b,%rax
 2d2:	48 c1 e0 05          	shl    $0x5,%rax
 2d6:	48 89 c2             	mov    %rax,%rdx
 2d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2dd:	48 01 d0             	add    %rdx,%rax
 2e0:	48 83 c0 08          	add    $0x8,%rax
 2e4:	ba 20 00 00 00       	mov    $0x20,%edx
 2e9:	be 00 00 00 00       	mov    $0x0,%esi
 2ee:	48 89 c7             	mov    %rax,%rdi
 2f1:	e8 00 00 00 00       	call   2f6 <ArtNetNode::ArtNetNode()+0x2f6>
 2f6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 2fa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 2fd:	48 83 c0 1b          	add    $0x1b,%rax
 301:	48 c1 e0 05          	shl    $0x5,%rax
 305:	48 01 d0             	add    %rdx,%rax
 308:	48 83 c0 10          	add    $0x10,%rax
 30c:	66 c7 00 00 01       	movw   $0x100,(%rax)
 311:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 315:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 318:	48 83 c0 1b          	add    $0x1b,%rax
 31c:	48 c1 e0 05          	shl    $0x5,%rax
 320:	48 01 d0             	add    %rdx,%rax
 323:	48 83 c0 1c          	add    $0x1c,%rax
 327:	66 c7 00 00 01       	movw   $0x100,(%rax)
 32c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 330:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 333:	48 c1 e0 05          	shl    $0x5,%rax
 337:	48 01 d0             	add    %rdx,%rax
 33a:	48 05 81 03 00 00    	add    $0x381,%rax
 340:	c6 00 80             	movb   $0x80,(%rax)
 343:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 346:	48 89 d0             	mov    %rdx,%rax
 349:	48 01 c0             	add    %rax,%rax
 34c:	48 01 d0             	add    %rdx,%rax
 34f:	48 c1 e0 02          	shl    $0x2,%rax
 353:	48 8d 90 e0 03 00 00 	lea    0x3e0(%rax),%rdx
 35a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 35e:	48 01 d0             	add    %rdx,%rax
 361:	48 83 c0 08          	add    $0x8,%rax
 365:	ba 0c 00 00 00       	mov    $0xc,%edx
 36a:	be 00 00 00 00       	mov    $0x0,%esi
 36f:	48 89 c7             	mov    %rax,%rdi
 372:	e8 00 00 00 00       	call   377 <ArtNetNode::ArtNetNode()+0x377>
 377:	e8 00 00 00 00       	call   37c <ArtNetNode::ArtNetNode()+0x37c>
 37c:	48 89 c7             	mov    %rax,%rdi
 37f:	e8 00 00 00 00       	call   384 <ArtNetNode::ArtNetNode()+0x384>
 384:	89 c2                	mov    %eax,%edx
 386:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 38a:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
 38d:	48 89 c8             	mov    %rcx,%rax
 390:	48 01 c0             	add    %rax,%rax
 393:	48 01 c8             	add    %rcx,%rax
 396:	48 c1 e0 02          	shl    $0x2,%rax
 39a:	48 01 f0             	add    %rsi,%rax
 39d:	48 05 e8 03 00 00    	add    $0x3e8,%rax
 3a3:	89 10                	mov    %edx,(%rax)
 3a5:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
 3a9:	83 7d d4 03          	cmpl   $0x3,-0x2c(%rbp)
 3ad:	0f 86 18 ff ff ff    	jbe    2cb <ArtNetNode::ArtNetNode()+0x2cb>
 3b3:	90                   	nop
 3b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3b8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 3bf:	00 00 
 3c1:	74 05                	je     3c8 <ArtNetNode::ArtNetNode()+0x3c8>
 3c3:	e8 00 00 00 00       	call   3c8 <ArtNetNode::ArtNetNode()+0x3c8>
 3c8:	c9                   	leave  
 3c9:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNodeD2Ev:

0000000000000000 <ArtNetNode::~ArtNetNode()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <ArtNetNode::~ArtNetNode()+0x2b>
  2b:	90                   	nop
  2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  30:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  37:	00 00 
  39:	74 05                	je     40 <ArtNetNode::~ArtNetNode()+0x40>
  3b:	e8 00 00 00 00       	call   40 <ArtNetNode::~ArtNetNode()+0x40>
  40:	c9                   	leave  
  41:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode5StartEv:

0000000000000000 <ArtNetNode::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
  2a:	83 c8 e0             	or     $0xffffffe0,%eax
  2d:	89 c2                	mov    %eax,%edx
  2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  33:	88 90 2f 04 00 00    	mov    %dl,0x42f(%rax)
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
  44:	83 e0 ef             	and    $0xffffffef,%eax
  47:	89 c2                	mov    %eax,%edx
  49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4d:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
  53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  57:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
  5e:	83 c8 18             	or     $0x18,%eax
  61:	89 c2                	mov    %eax,%edx
  63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  67:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
  6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  71:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
  78:	83 e0 fd             	and    $0xfffffffd,%eax
  7b:	89 c2                	mov    %eax,%edx
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
  87:	e8 00 00 00 00       	call   8c <ArtNetNode::Start()+0x8c>
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <ArtNetNode::Start()+0x94>
  94:	84 c0                	test   %al,%al
  96:	74 07                	je     9f <ArtNetNode::Start()+0x9f>
  98:	ba 02 00 00 00       	mov    $0x2,%edx
  9d:	eb 05                	jmp    a4 <ArtNetNode::Start()+0xa4>
  9f:	ba 00 00 00 00       	mov    $0x0,%edx
  a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a8:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
  af:	09 c2                	or     %eax,%edx
  b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b5:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
  bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bf:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
  c6:	83 e0 fb             	and    $0xfffffffb,%eax
  c9:	89 c2                	mov    %eax,%edx
  cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cf:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
  d5:	e8 00 00 00 00       	call   da <ArtNetNode::Start()+0xda>
  da:	48 89 c7             	mov    %rax,%rdi
  dd:	e8 00 00 00 00       	call   e2 <ArtNetNode::Start()+0xe2>
  e2:	84 c0                	test   %al,%al
  e4:	74 07                	je     ed <ArtNetNode::Start()+0xed>
  e6:	ba 04 00 00 00       	mov    $0x4,%edx
  eb:	eb 05                	jmp    f2 <ArtNetNode::Start()+0xf2>
  ed:	ba 00 00 00 00       	mov    $0x0,%edx
  f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f6:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
  fd:	09 c2                	or     %eax,%edx
  ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 103:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
 109:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10d:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
 114:	83 c8 80             	or     $0xffffff80,%eax
 117:	89 c2                	mov    %eax,%edx
 119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11d:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
 123:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 127:	c6 80 f1 04 00 00 20 	movb   $0x20,0x4f1(%rax)
 12e:	e8 00 00 00 00       	call   133 <ArtNetNode::Start()+0x133>
 133:	be 36 19 00 00       	mov    $0x1936,%esi
 138:	48 89 c7             	mov    %rax,%rdi
 13b:	e8 00 00 00 00       	call   140 <ArtNetNode::Start()+0x140>
 140:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 144:	89 82 30 02 00 00    	mov    %eax,0x230(%rdx)
 14a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 14e:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 155:	48 85 c0             	test   %rax,%rax
 158:	0f 84 ad 00 00 00    	je     20b <ArtNetNode::Start()+0x20b>
 15e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 165:	e9 97 00 00 00       	jmp    201 <ArtNetNode::Start()+0x201>
 16a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 16e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 171:	48 c1 e0 05          	shl    $0x5,%rax
 175:	48 01 d0             	add    %rdx,%rax
 178:	48 05 81 03 00 00    	add    $0x381,%rax
 17e:	0f b6 00             	movzbl (%rax),%eax
 181:	c0 e8 07             	shr    $0x7,%al
 184:	88 45 f3             	mov    %al,-0xd(%rbp)
 187:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
 18b:	83 f0 01             	xor    $0x1,%eax
 18e:	84 c0                	test   %al,%al
 190:	74 36                	je     1c8 <ArtNetNode::Start()+0x1c8>
 192:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 196:	8b 55 f4             	mov    -0xc(%rbp),%edx
 199:	48 89 d0             	mov    %rdx,%rax
 19c:	48 c1 e0 03          	shl    $0x3,%rax
 1a0:	48 01 d0             	add    %rdx,%rax
 1a3:	48 c1 e0 02          	shl    $0x2,%rax
 1a7:	48 01 c8             	add    %rcx,%rax
 1aa:	48 05 98 02 00 00    	add    $0x298,%rax
 1b0:	8b 00                	mov    (%rax),%eax
 1b2:	83 f8 01             	cmp    $0x1,%eax
 1b5:	75 11                	jne    1c8 <ArtNetNode::Start()+0x1c8>
 1b7:	8b 55 f4             	mov    -0xc(%rbp),%edx
 1ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1be:	89 d6                	mov    %edx,%esi
 1c0:	48 89 c7             	mov    %rax,%rdi
 1c3:	e8 00 00 00 00       	call   1c8 <ArtNetNode::Start()+0x1c8>
 1c8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 1cc:	8b 55 f4             	mov    -0xc(%rbp),%edx
 1cf:	48 89 d0             	mov    %rdx,%rax
 1d2:	48 c1 e0 03          	shl    $0x3,%rax
 1d6:	48 01 d0             	add    %rdx,%rax
 1d9:	48 c1 e0 02          	shl    $0x2,%rax
 1dd:	48 01 c8             	add    %rcx,%rax
 1e0:	48 05 98 02 00 00    	add    $0x298,%rax
 1e6:	8b 00                	mov    (%rax),%eax
 1e8:	85 c0                	test   %eax,%eax
 1ea:	75 11                	jne    1fd <ArtNetNode::Start()+0x1fd>
 1ec:	8b 55 f4             	mov    -0xc(%rbp),%edx
 1ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1f3:	89 d6                	mov    %edx,%esi
 1f5:	48 89 c7             	mov    %rax,%rdi
 1f8:	e8 00 00 00 00       	call   1fd <ArtNetNode::Start()+0x1fd>
 1fd:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 201:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
 205:	0f 86 5f ff ff ff    	jbe    16a <ArtNetNode::Start()+0x16a>
 20b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 20f:	48 89 c7             	mov    %rax,%rdi
 212:	e8 00 00 00 00       	call   217 <ArtNetNode::Start()+0x217>
 217:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 21b:	c6 80 59 03 00 00 02 	movb   $0x2,0x359(%rax)
 222:	e8 00 00 00 00       	call   227 <ArtNetNode::Start()+0x227>
 227:	be 02 00 00 00       	mov    $0x2,%esi
 22c:	48 89 c7             	mov    %rax,%rdi
 22f:	e8 00 00 00 00       	call   234 <ArtNetNode::Start()+0x234>
 234:	90                   	nop
 235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 239:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 240:	00 00 
 242:	74 05                	je     249 <ArtNetNode::Start()+0x249>
 244:	e8 00 00 00 00       	call   249 <ArtNetNode::Start()+0x249>
 249:	c9                   	leave  
 24a:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode4StopEv:

0000000000000000 <ArtNetNode::Stop()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <ArtNetNode::Stop()+0x2b>
  2b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  32:	e9 83 00 00 00       	jmp    ba <ArtNetNode::Stop()+0xba>
  37:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  3b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3e:	48 89 d0             	mov    %rdx,%rax
  41:	48 c1 e0 03          	shl    $0x3,%rax
  45:	48 01 d0             	add    %rdx,%rax
  48:	48 c1 e0 02          	shl    $0x2,%rax
  4c:	48 01 c8             	add    %rcx,%rax
  4f:	48 05 9c 02 00 00    	add    $0x29c,%rax
  55:	8b 00                	mov    (%rax),%eax
  57:	85 c0                	test   %eax,%eax
  59:	75 5b                	jne    b6 <ArtNetNode::Stop()+0xb6>
  5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5f:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
  66:	48 85 c0             	test   %rax,%rax
  69:	74 2a                	je     95 <ArtNetNode::Stop()+0x95>
  6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6f:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
  76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  7a:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
  81:	48 8b 12             	mov    (%rdx),%rdx
  84:	48 83 c2 18          	add    $0x18,%rdx
  88:	48 8b 0a             	mov    (%rdx),%rcx
  8b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  8e:	89 d6                	mov    %edx,%esi
  90:	48 89 c7             	mov    %rax,%rdi
  93:	ff d1                	call   *%rcx
  95:	8b 45 f4             	mov    -0xc(%rbp),%eax
  98:	89 c7                	mov    %eax,%edi
  9a:	e8 00 00 00 00       	call   9f <ArtNetNode::Stop()+0x9f>
  9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  a3:	8b 45 f4             	mov    -0xc(%rbp),%eax
  a6:	48 c1 e0 05          	shl    $0x5,%rax
  aa:	48 01 d0             	add    %rdx,%rax
  ad:	48 05 83 03 00 00    	add    $0x383,%rax
  b3:	c6 00 00             	movb   $0x0,(%rax)
  b6:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  ba:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  be:	0f 86 73 ff ff ff    	jbe    37 <ArtNetNode::Stop()+0x37>
  c4:	e8 00 00 00 00       	call   c9 <ArtNetNode::Stop()+0xc9>
  c9:	be 00 00 00 00       	mov    $0x0,%esi
  ce:	48 89 c7             	mov    %rax,%rdi
  d1:	e8 00 00 00 00       	call   d6 <ArtNetNode::Stop()+0xd6>
  d6:	bf 00 00 00 00       	mov    $0x0,%edi
  db:	e8 00 00 00 00       	call   e0 <ArtNetNode::Stop()+0xe0>
  e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e4:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
  eb:	83 e0 3f             	and    $0x3f,%eax
  ee:	83 c8 80             	or     $0xffffff80,%eax
  f1:	89 c2                	mov    %eax,%edx
  f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f7:	88 90 2f 04 00 00    	mov    %dl,0x42f(%rax)
  fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 101:	c6 80 59 03 00 00 01 	movb   $0x1,0x359(%rax)
 108:	90                   	nop
 109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 114:	00 00 
 116:	74 05                	je     11d <ArtNetNode::Stop()+0x11d>
 118:	e8 00 00 00 00       	call   11d <ArtNetNode::Stop()+0x11d>
 11d:	c9                   	leave  
 11e:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode12SetShortNameEjPKc:

0000000000000000 <ArtNetNode::SetShortName(unsigned int, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  2b:	75 32                	jne    5f <ArtNetNode::SetShortName(unsigned int, char const*)+0x5f>
  2d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  30:	48 89 d0             	mov    %rdx,%rax
  33:	48 c1 e0 03          	shl    $0x3,%rax
  37:	48 01 d0             	add    %rdx,%rax
  3a:	48 c1 e0 02          	shl    $0x2,%rax
  3e:	48 8d 90 70 02 00 00 	lea    0x270(%rax),%rdx
  45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  49:	48 01 d0             	add    %rdx,%rax
  4c:	48 8d 50 10          	lea    0x10(%rax),%rdx
  50:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  53:	48 89 d6             	mov    %rdx,%rsi
  56:	89 c7                	mov    %eax,%edi
  58:	e8 00 00 00 00       	call   5d <ArtNetNode::SetShortName(unsigned int, char const*)+0x5d>
  5d:	eb 37                	jmp    96 <ArtNetNode::SetShortName(unsigned int, char const*)+0x96>
  5f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  62:	48 89 d0             	mov    %rdx,%rax
  65:	48 c1 e0 03          	shl    $0x3,%rax
  69:	48 01 d0             	add    %rdx,%rax
  6c:	48 c1 e0 02          	shl    $0x2,%rax
  70:	48 8d 90 70 02 00 00 	lea    0x270(%rax),%rdx
  77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7b:	48 01 d0             	add    %rdx,%rax
  7e:	48 8d 48 10          	lea    0x10(%rax),%rcx
  82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  86:	ba 11 00 00 00       	mov    $0x11,%edx
  8b:	48 89 c6             	mov    %rax,%rsi
  8e:	48 89 cf             	mov    %rcx,%rdi
  91:	e8 00 00 00 00       	call   96 <ArtNetNode::SetShortName(unsigned int, char const*)+0x96>
  96:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  9a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  9d:	48 89 d0             	mov    %rdx,%rax
  a0:	48 c1 e0 03          	shl    $0x3,%rax
  a4:	48 01 d0             	add    %rdx,%rax
  a7:	48 c1 e0 02          	shl    $0x2,%rax
  ab:	48 01 c8             	add    %rcx,%rax
  ae:	48 05 91 02 00 00    	add    $0x291,%rax
  b4:	c6 00 00             	movb   $0x0,(%rax)
  b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bb:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  c2:	3c 02                	cmp    $0x2,%al
  c4:	75 5e                	jne    124 <ArtNetNode::SetShortName(unsigned int, char const*)+0x124>
  c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ca:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  d1:	48 85 c0             	test   %rax,%rax
  d4:	74 4e                	je     124 <ArtNetNode::SetShortName(unsigned int, char const*)+0x124>
  d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  da:	48 8b 88 70 02 00 00 	mov    0x270(%rax),%rcx
  e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e5:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  ec:	48 8b 00             	mov    (%rax),%rax
  ef:	48 83 c0 18          	add    $0x18,%rax
  f3:	4c 8b 00             	mov    (%rax),%r8
  f6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  f9:	48 89 d0             	mov    %rdx,%rax
  fc:	48 c1 e0 03          	shl    $0x3,%rax
 100:	48 01 d0             	add    %rdx,%rax
 103:	48 c1 e0 02          	shl    $0x2,%rax
 107:	48 8d 90 70 02 00 00 	lea    0x270(%rax),%rdx
 10e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 112:	48 01 d0             	add    %rdx,%rax
 115:	48 8d 50 10          	lea    0x10(%rax),%rdx
 119:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 11c:	89 c6                	mov    %eax,%esi
 11e:	48 89 cf             	mov    %rcx,%rdi
 121:	41 ff d0             	call   *%r8
 124:	90                   	nop
 125:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 129:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 130:	00 00 
 132:	74 05                	je     139 <ArtNetNode::SetShortName(unsigned int, char const*)+0x139>
 134:	e8 00 00 00 00       	call   139 <ArtNetNode::SetShortName(unsigned int, char const*)+0x139>
 139:	c9                   	leave  
 13a:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode18GetLongNameDefaultEPc:

0000000000000000 <ArtNetNode::GetLongNameDefault(char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	e8 00 00 00 00       	call   28 <ArtNetNode::GetLongNameDefault(char*)+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
  2f:	48 89 c6             	mov    %rax,%rsi
  32:	48 89 d7             	mov    %rdx,%rdi
  35:	e8 00 00 00 00       	call   3a <ArtNetNode::GetLongNameDefault(char*)+0x3a>
  3a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  3e:	e8 00 00 00 00       	call   43 <ArtNetNode::GetLongNameDefault(char*)+0x43>
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	call   4b <ArtNetNode::GetLongNameDefault(char*)+0x4b>
  4b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  57:	48 83 ec 08          	sub    $0x8,%rsp
  5b:	ff 75 f0             	push   -0x10(%rbp)
  5e:	41 b9 04 00 00 00    	mov    $0x4,%r9d
  64:	4c 8d 05 00 00 00 00 	lea    0x0(%rip),%r8        # 6b <ArtNetNode::GetLongNameDefault(char*)+0x6b>
  6b:	48 89 d1             	mov    %rdx,%rcx
  6e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 75 <ArtNetNode::GetLongNameDefault(char*)+0x75>
  75:	be 3f 00 00 00       	mov    $0x3f,%esi
  7a:	48 89 c7             	mov    %rax,%rdi
  7d:	b8 00 00 00 00       	mov    $0x0,%eax
  82:	e8 00 00 00 00       	call   87 <ArtNetNode::GetLongNameDefault(char*)+0x87>
  87:	48 83 c4 10          	add    $0x10,%rsp
  8b:	90                   	nop
  8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  90:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  97:	00 00 
  99:	74 05                	je     a0 <ArtNetNode::GetLongNameDefault(char*)+0xa0>
  9b:	e8 00 00 00 00       	call   a0 <ArtNetNode::GetLongNameDefault(char*)+0xa0>
  a0:	c9                   	leave  
  a1:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode11SetLongNameEPKc:

0000000000000000 <ArtNetNode::SetLongName(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  28:	75 1c                	jne    46 <ArtNetNode::SetLongName(char const*)+0x46>
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	48 8d 90 44 04 00 00 	lea    0x444(%rax),%rdx
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	48 89 d6             	mov    %rdx,%rsi
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	e8 00 00 00 00       	call   44 <ArtNetNode::SetLongName(char const*)+0x44>
  44:	eb 1f                	jmp    65 <ArtNetNode::SetLongName(char const*)+0x65>
  46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4a:	48 8d 88 44 04 00 00 	lea    0x444(%rax),%rcx
  51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  55:	ba 3f 00 00 00       	mov    $0x3f,%edx
  5a:	48 89 c6             	mov    %rax,%rsi
  5d:	48 89 cf             	mov    %rcx,%rdi
  60:	e8 00 00 00 00       	call   65 <ArtNetNode::SetLongName(char const*)+0x65>
  65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  69:	c6 80 83 04 00 00 00 	movb   $0x0,0x483(%rax)
  70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  74:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  7b:	3c 02                	cmp    $0x2,%al
  7d:	75 55                	jne    d4 <ArtNetNode::SetLongName(char const*)+0xd4>
  7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  83:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  8a:	48 85 c0             	test   %rax,%rax
  8d:	74 33                	je     c2 <ArtNetNode::SetLongName(char const*)+0xc2>
  8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  93:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  9a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  9e:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
  a5:	48 8b 12             	mov    (%rdx),%rdx
  a8:	48 83 c2 10          	add    $0x10,%rdx
  ac:	48 8b 12             	mov    (%rdx),%rdx
  af:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  b3:	48 81 c1 44 04 00 00 	add    $0x444,%rcx
  ba:	48 89 ce             	mov    %rcx,%rsi
  bd:	48 89 c7             	mov    %rax,%rdi
  c0:	ff d2                	call   *%rdx
  c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c6:	48 05 44 04 00 00    	add    $0x444,%rax
  cc:	48 89 c7             	mov    %rax,%rdi
  cf:	e8 00 00 00 00       	call   d4 <ArtNetNode::SetLongName(char const*)+0xd4>
  d4:	90                   	nop
  d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  e0:	00 00 
  e2:	74 05                	je     e9 <ArtNetNode::SetLongName(char const*)+0xe9>
  e4:	e8 00 00 00 00       	call   e9 <ArtNetNode::SetLongName(char const*)+0xe9>
  e9:	c9                   	leave  
  ea:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode27SetNetworkDataLossConditionEv:

0000000000000000 <ArtNetNode::SetNetworkDataLossCondition()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	c6 80 5e 03 00 00 00 	movb   $0x0,0x35e(%rax)
  2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2e:	c6 80 5d 03 00 00 00 	movb   $0x0,0x35d(%rax)
  35:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  3c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  43:	eb 3f                	jmp    84 <ArtNetNode::SetNetworkDataLossCondition()+0x84>
  45:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  49:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4c:	48 83 c0 1b          	add    $0x1b,%rax
  50:	48 c1 e0 05          	shl    $0x5,%rax
  54:	48 01 d0             	add    %rdx,%rax
  57:	48 83 c0 0c          	add    $0xc,%rax
  5b:	8b 10                	mov    (%rax),%edx
  5d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  61:	8b 45 ec             	mov    -0x14(%rbp),%eax
  64:	48 83 c0 1b          	add    $0x1b,%rax
  68:	48 c1 e0 05          	shl    $0x5,%rax
  6c:	48 01 c8             	add    %rcx,%rax
  6f:	48 83 c0 18          	add    $0x18,%rax
  73:	8b 00                	mov    (%rax),%eax
  75:	01 d0                	add    %edx,%eax
  77:	01 45 e8             	add    %eax,-0x18(%rbp)
  7a:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  7e:	75 0c                	jne    8c <ArtNetNode::SetNetworkDataLossCondition()+0x8c>
  80:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  84:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
  88:	76 bb                	jbe    45 <ArtNetNode::SetNetworkDataLossCondition()+0x45>
  8a:	eb 01                	jmp    8d <ArtNetNode::SetNetworkDataLossCondition()+0x8d>
  8c:	90                   	nop
  8d:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  91:	0f 84 f4 00 00 00    	je     18b <ArtNetNode::SetNetworkDataLossCondition()+0x18b>
  97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9b:	0f b6 80 f1 04 00 00 	movzbl 0x4f1(%rax),%eax
  a2:	0f b6 c0             	movzbl %al,%eax
  a5:	25 c0 00 00 00       	and    $0xc0,%eax
  aa:	89 45 f4             	mov    %eax,-0xc(%rbp)
  ad:	81 7d f4 c0 00 00 00 	cmpl   $0xc0,-0xc(%rbp)
  b4:	74 7a                	je     130 <ArtNetNode::SetNetworkDataLossCondition()+0x130>
  b6:	81 7d f4 c0 00 00 00 	cmpl   $0xc0,-0xc(%rbp)
  bd:	7f 71                	jg     130 <ArtNetNode::SetNetworkDataLossCondition()+0x130>
  bf:	81 7d f4 80 00 00 00 	cmpl   $0x80,-0xc(%rbp)
  c6:	74 41                	je     109 <ArtNetNode::SetNetworkDataLossCondition()+0x109>
  c8:	81 7d f4 80 00 00 00 	cmpl   $0x80,-0xc(%rbp)
  cf:	7f 5f                	jg     130 <ArtNetNode::SetNetworkDataLossCondition()+0x130>
  d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  d5:	74 5c                	je     133 <ArtNetNode::SetNetworkDataLossCondition()+0x133>
  d7:	83 7d f4 40          	cmpl   $0x40,-0xc(%rbp)
  db:	75 53                	jne    130 <ArtNetNode::SetNetworkDataLossCondition()+0x130>
  dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  e1:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
  e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  ec:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
  f3:	48 8b 12             	mov    (%rdx),%rdx
  f6:	48 83 c2 38          	add    $0x38,%rdx
  fa:	48 8b 12             	mov    (%rdx),%rdx
  fd:	be 01 00 00 00       	mov    $0x1,%esi
 102:	48 89 c7             	mov    %rax,%rdi
 105:	ff d2                	call   *%rdx
 107:	eb 2b                	jmp    134 <ArtNetNode::SetNetworkDataLossCondition()+0x134>
 109:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 10d:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 114:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 118:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
 11f:	48 8b 12             	mov    (%rdx),%rdx
 122:	48 83 c2 40          	add    $0x40,%rdx
 126:	48 8b 12             	mov    (%rdx),%rdx
 129:	48 89 c7             	mov    %rax,%rdi
 12c:	ff d2                	call   *%rdx
 12e:	eb 04                	jmp    134 <ArtNetNode::SetNetworkDataLossCondition()+0x134>
 130:	90                   	nop
 131:	eb 01                	jmp    134 <ArtNetNode::SetNetworkDataLossCondition()+0x134>
 133:	90                   	nop
 134:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 13b:	eb 46                	jmp    183 <ArtNetNode::SetNetworkDataLossCondition()+0x183>
 13d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 141:	8b 45 f0             	mov    -0x10(%rbp),%eax
 144:	48 83 c0 1b          	add    $0x1b,%rax
 148:	48 c1 e0 05          	shl    $0x5,%rax
 14c:	48 01 d0             	add    %rdx,%rax
 14f:	48 83 c0 0c          	add    $0xc,%rax
 153:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 159:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 15d:	8b 45 f0             	mov    -0x10(%rbp),%eax
 160:	48 83 c0 1b          	add    $0x1b,%rax
 164:	48 c1 e0 05          	shl    $0x5,%rax
 168:	48 01 d0             	add    %rdx,%rax
 16b:	48 83 c0 18          	add    $0x18,%rax
 16f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 175:	8b 45 f0             	mov    -0x10(%rbp),%eax
 178:	89 c7                	mov    %eax,%edi
 17a:	e8 00 00 00 00       	call   17f <ArtNetNode::SetNetworkDataLossCondition()+0x17f>
 17f:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 183:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
 187:	76 b4                	jbe    13d <ArtNetNode::SetNetworkDataLossCondition()+0x13d>
 189:	eb 01                	jmp    18c <ArtNetNode::SetNetworkDataLossCondition()+0x18c>
 18b:	90                   	nop
 18c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 190:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 197:	00 00 
 199:	74 05                	je     1a0 <ArtNetNode::SetNetworkDataLossCondition()+0x1a0>
 19b:	e8 00 00 00 00       	call   1a0 <ArtNetNode::SetNetworkDataLossCondition()+0x1a0>
 1a0:	c9                   	leave  
 1a1:	c3                   	ret    

Disassembly of section .text._ZL11get_op_codejPKh:

0000000000000000 <get_op_code(unsigned int, unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	83 7d ec 0b          	cmpl   $0xb,-0x14(%rbp)
  26:	77 07                	ja     2f <get_op_code(unsigned int, unsigned char const*)+0x2f>
  28:	b8 00 00 00 00       	mov    $0x0,%eax
  2d:	eb 6e                	jmp    9d <get_op_code(unsigned int, unsigned char const*)+0x9d>
  2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  33:	48 83 c0 0a          	add    $0xa,%rax
  37:	0f b6 00             	movzbl (%rax),%eax
  3a:	84 c0                	test   %al,%al
  3c:	75 0f                	jne    4d <get_op_code(unsigned int, unsigned char const*)+0x4d>
  3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42:	48 83 c0 0b          	add    $0xb,%rax
  46:	0f b6 00             	movzbl (%rax),%eax
  49:	3c 0e                	cmp    $0xe,%al
  4b:	74 07                	je     54 <get_op_code(unsigned int, unsigned char const*)+0x54>
  4d:	b8 00 00 00 00       	mov    $0x0,%eax
  52:	eb 49                	jmp    9d <get_op_code(unsigned int, unsigned char const*)+0x9d>
  54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  58:	ba 08 00 00 00       	mov    $0x8,%edx
  5d:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 64 <get_op_code(unsigned int, unsigned char const*)+0x64>
  64:	48 89 ce             	mov    %rcx,%rsi
  67:	48 89 c7             	mov    %rax,%rdi
  6a:	e8 00 00 00 00       	call   6f <get_op_code(unsigned int, unsigned char const*)+0x6f>
  6f:	85 c0                	test   %eax,%eax
  71:	75 25                	jne    98 <get_op_code(unsigned int, unsigned char const*)+0x98>
  73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  77:	48 83 c0 09          	add    $0x9,%rax
  7b:	0f b6 00             	movzbl (%rax),%eax
  7e:	0f b6 c0             	movzbl %al,%eax
  81:	c1 e0 08             	shl    $0x8,%eax
  84:	89 c2                	mov    %eax,%edx
  86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  8a:	48 83 c0 08          	add    $0x8,%rax
  8e:	0f b6 00             	movzbl (%rax),%eax
  91:	0f b6 c0             	movzbl %al,%eax
  94:	01 d0                	add    %edx,%eax
  96:	eb 05                	jmp    9d <get_op_code(unsigned int, unsigned char const*)+0x9d>
  98:	b8 00 00 00 00       	mov    $0x0,%eax
  9d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  a1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  a8:	00 00 
  aa:	74 05                	je     b1 <get_op_code(unsigned int, unsigned char const*)+0xb1>
  ac:	e8 00 00 00 00       	call   b1 <get_op_code(unsigned int, unsigned char const*)+0xb1>
  b1:	c9                   	leave  
  b2:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode7ProcessEt:

0000000000000000 <ArtNetNode::Process(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 a4          	mov    %ax,-0x5c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	66 83 7d a4 00       	cmpw   $0x0,-0x5c(%rbp)
  2a:	0f 94 c0             	sete   %al
  2d:	0f b6 c0             	movzbl %al,%eax
  30:	48 85 c0             	test   %rax,%rax
  33:	0f 84 78 01 00 00    	je     1b1 <ArtNetNode::Process(unsigned short)+0x1b1>
  39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  3d:	8b 90 44 02 00 00    	mov    0x244(%rax),%edx
  43:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  47:	8b 88 48 02 00 00    	mov    0x248(%rax),%ecx
  4d:	89 d0                	mov    %edx,%eax
  4f:	29 c8                	sub    %ecx,%eax
  51:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  54:	81 7d b4 0f 27 00 00 	cmpl   $0x270f,-0x4c(%rbp)
  5b:	76 16                	jbe    73 <ArtNetNode::Process(unsigned short)+0x73>
  5d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <ArtNetNode::Process(unsigned short)+0x69>
  69:	bf 00 00 00 00       	mov    $0x0,%edi
  6e:	e8 00 00 00 00       	call   73 <ArtNetNode::Process(unsigned short)+0x73>
  73:	81 7d b4 e7 03 00 00 	cmpl   $0x3e7,-0x4c(%rbp)
  7a:	76 1a                	jbe    96 <ArtNetNode::Process(unsigned short)+0x96>
  7c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  80:	0f b6 80 61 03 00 00 	movzbl 0x361(%rax),%eax
  87:	83 e0 fd             	and    $0xfffffffd,%eax
  8a:	89 c2                	mov    %eax,%edx
  8c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  90:	88 90 61 03 00 00    	mov    %dl,0x361(%rax)
  96:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  9a:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
  a1:	48 85 c0             	test   %rax,%rax
  a4:	74 0c                	je     b2 <ArtNetNode::Process(unsigned short)+0xb2>
  a6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  aa:	48 89 c7             	mov    %rax,%rdi
  ad:	e8 00 00 00 00       	call   b2 <ArtNetNode::Process(unsigned short)+0xb2>
  b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  b6:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
  bd:	0f b6 c0             	movzbl %al,%eax
  c0:	25 c0 00 00 00       	and    $0xc0,%eax
  c5:	3d c0 00 00 00       	cmp    $0xc0,%eax
  ca:	75 19                	jne    e5 <ArtNetNode::Process(unsigned short)+0xe5>
  cc:	e8 00 00 00 00       	call   d1 <ArtNetNode::Process(unsigned short)+0xd1>
  d1:	48 89 c7             	mov    %rax,%rdi
  d4:	e8 00 00 00 00       	call   d9 <ArtNetNode::Process(unsigned short)+0xd9>
  d9:	83 f8 04             	cmp    $0x4,%eax
  dc:	74 07                	je     e5 <ArtNetNode::Process(unsigned short)+0xe5>
  de:	b8 01 00 00 00       	mov    $0x1,%eax
  e3:	eb 05                	jmp    ea <ArtNetNode::Process(unsigned short)+0xea>
  e5:	b8 00 00 00 00       	mov    $0x0,%eax
  ea:	84 c0                	test   %al,%al
  ec:	74 33                	je     121 <ArtNetNode::Process(unsigned short)+0x121>
  ee:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  f2:	0f b6 80 61 03 00 00 	movzbl 0x361(%rax),%eax
  f9:	84 c0                	test   %al,%al
  fb:	74 13                	je     110 <ArtNetNode::Process(unsigned short)+0x110>
  fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 101:	be 03 00 00 00       	mov    $0x3,%esi
 106:	48 89 c7             	mov    %rax,%rdi
 109:	e8 00 00 00 00       	call   10e <ArtNetNode::Process(unsigned short)+0x10e>
 10e:	eb 11                	jmp    121 <ArtNetNode::Process(unsigned short)+0x121>
 110:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 114:	be 02 00 00 00       	mov    $0x2,%esi
 119:	48 89 c7             	mov    %rax,%rdi
 11c:	e8 00 00 00 00       	call   121 <ArtNetNode::Process(unsigned short)+0x121>
 121:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 125:	48 05 20 03 00 00    	add    $0x320,%rax
 12b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 12f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 133:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 137:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 13b:	48 83 c0 30          	add    $0x30,%rax
 13f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 143:	eb 5d                	jmp    1a2 <ArtNetNode::Process(unsigned short)+0x1a2>
 145:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 149:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 14d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 151:	8b 00                	mov    (%rax),%eax
 153:	85 c0                	test   %eax,%eax
 155:	74 46                	je     19d <ArtNetNode::Process(unsigned short)+0x19d>
 157:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 15b:	8b 90 44 02 00 00    	mov    0x244(%rax),%edx
 161:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 165:	8b 00                	mov    (%rax),%eax
 167:	29 c2                	sub    %eax,%edx
 169:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 16d:	8b 80 1c 03 00 00    	mov    0x31c(%rax),%eax
 173:	39 c2                	cmp    %eax,%edx
 175:	76 26                	jbe    19d <ArtNetNode::Process(unsigned short)+0x19d>
 177:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 17b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 181:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 185:	8b 50 04             	mov    0x4(%rax),%edx
 188:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 18c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 190:	be 00 00 00 00       	mov    $0x0,%esi
 195:	48 89 c7             	mov    %rax,%rdi
 198:	e8 00 00 00 00       	call   19d <ArtNetNode::Process(unsigned short)+0x19d>
 19d:	48 83 45 b8 0c       	addq   $0xc,-0x48(%rbp)
 1a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 1a6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 1aa:	75 99                	jne    145 <ArtNetNode::Process(unsigned short)+0x145>
 1ac:	e9 aa 03 00 00       	jmp    55b <ArtNetNode::Process(unsigned short)+0x55b>
 1b1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1b5:	8b 90 44 02 00 00    	mov    0x244(%rax),%edx
 1bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1bf:	89 90 48 02 00 00    	mov    %edx,0x248(%rax)
 1c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1c9:	0f b6 80 5d 03 00 00 	movzbl 0x35d(%rax),%eax
 1d0:	84 c0                	test   %al,%al
 1d2:	74 2a                	je     1fe <ArtNetNode::Process(unsigned short)+0x1fe>
 1d4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1d8:	8b 90 44 02 00 00    	mov    0x244(%rax),%edx
 1de:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1e2:	8b 88 54 03 00 00    	mov    0x354(%rax),%ecx
 1e8:	89 d0                	mov    %edx,%eax
 1ea:	29 c8                	sub    %ecx,%eax
 1ec:	3d 9f 0f 00 00       	cmp    $0xf9f,%eax
 1f1:	76 0b                	jbe    1fe <ArtNetNode::Process(unsigned short)+0x1fe>
 1f3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1f7:	c6 80 5d 03 00 00 00 	movb   $0x0,0x35d(%rax)
 1fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 202:	48 8b 90 38 02 00 00 	mov    0x238(%rax),%rdx
 209:	0f b7 45 a4          	movzwl -0x5c(%rbp),%eax
 20d:	48 89 d6             	mov    %rdx,%rsi
 210:	89 c7                	mov    %eax,%edi
 212:	e8 00 00 00 00       	call   217 <ArtNetNode::Process(unsigned short)+0x217>
 217:	66 3d 00 f8          	cmp    $0xf800,%ax
 21b:	0f 84 eb 01 00 00    	je     40c <ArtNetNode::Process(unsigned short)+0x40c>
 221:	66 3d 00 f8          	cmp    $0xf800,%ax
 225:	0f 87 fd 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 22b:	66 3d 00 98          	cmp    $0x9800,%ax
 22f:	0f 84 4a 01 00 00    	je     37f <ArtNetNode::Process(unsigned short)+0x37f>
 235:	66 3d 00 98          	cmp    $0x9800,%ax
 239:	0f 87 e9 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 23f:	66 3d 00 83          	cmp    $0x8300,%ax
 243:	0f 84 a5 01 00 00    	je     3ee <ArtNetNode::Process(unsigned short)+0x3ee>
 249:	66 3d 00 83          	cmp    $0x8300,%ax
 24d:	0f 87 d5 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 253:	66 3d 00 82          	cmp    $0x8200,%ax
 257:	0f 84 73 01 00 00    	je     3d0 <ArtNetNode::Process(unsigned short)+0x3d0>
 25d:	66 3d 00 82          	cmp    $0x8200,%ax
 261:	0f 87 c1 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 267:	66 3d 00 81          	cmp    $0x8100,%ax
 26b:	0f 84 41 01 00 00    	je     3b2 <ArtNetNode::Process(unsigned short)+0x3b2>
 271:	66 3d 00 81          	cmp    $0x8100,%ax
 275:	0f 87 ad 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 27b:	66 3d 00 80          	cmp    $0x8000,%ax
 27f:	0f 84 0b 01 00 00    	je     390 <ArtNetNode::Process(unsigned short)+0x390>
 285:	66 3d 00 80          	cmp    $0x8000,%ax
 289:	0f 87 99 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 28f:	66 3d 00 60          	cmp    $0x6000,%ax
 293:	0f 84 d5 00 00 00    	je     36e <ArtNetNode::Process(unsigned short)+0x36e>
 299:	66 3d 00 60          	cmp    $0x6000,%ax
 29d:	0f 87 85 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 2a3:	66 3d 00 52          	cmp    $0x5200,%ax
 2a7:	74 57                	je     300 <ArtNetNode::Process(unsigned short)+0x300>
 2a9:	66 3d 00 52          	cmp    $0x5200,%ax
 2ad:	0f 87 75 01 00 00    	ja     428 <ArtNetNode::Process(unsigned short)+0x428>
 2b3:	66 3d 00 20          	cmp    $0x2000,%ax
 2b7:	0f 84 5d 01 00 00    	je     41a <ArtNetNode::Process(unsigned short)+0x41a>
 2bd:	66 3d 00 50          	cmp    $0x5000,%ax
 2c1:	0f 85 61 01 00 00    	jne    428 <ArtNetNode::Process(unsigned short)+0x428>
 2c7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 2cb:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 2d2:	48 85 c0             	test   %rax,%rax
 2d5:	0f 84 50 01 00 00    	je     42b <ArtNetNode::Process(unsigned short)+0x42b>
 2db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 2df:	48 89 c7             	mov    %rax,%rdi
 2e2:	e8 00 00 00 00       	call   2e7 <ArtNetNode::Process(unsigned short)+0x2e7>
 2e7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 2eb:	8b 90 40 02 00 00    	mov    0x240(%rax),%edx
 2f1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 2f5:	89 90 50 03 00 00    	mov    %edx,0x350(%rax)
 2fb:	e9 2b 01 00 00       	jmp    42b <ArtNetNode::Process(unsigned short)+0x42b>
 300:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 304:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 30b:	48 85 c0             	test   %rax,%rax
 30e:	0f 84 1a 01 00 00    	je     42e <ArtNetNode::Process(unsigned short)+0x42e>
 314:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 318:	8b 90 50 03 00 00    	mov    0x350(%rax),%edx
 31e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 322:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 328:	39 c2                	cmp    %eax,%edx
 32a:	0f 85 fe 00 00 00    	jne    42e <ArtNetNode::Process(unsigned short)+0x42e>
 330:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 334:	0f b6 80 5e 03 00 00 	movzbl 0x35e(%rax),%eax
 33b:	83 f0 01             	xor    $0x1,%eax
 33e:	84 c0                	test   %al,%al
 340:	0f 84 e8 00 00 00    	je     42e <ArtNetNode::Process(unsigned short)+0x42e>
 346:	e8 00 00 00 00       	call   34b <ArtNetNode::Process(unsigned short)+0x34b>
 34b:	48 89 c7             	mov    %rax,%rdi
 34e:	e8 00 00 00 00       	call   353 <ArtNetNode::Process(unsigned short)+0x353>
 353:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 357:	89 82 54 03 00 00    	mov    %eax,0x354(%rdx)
 35d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 361:	48 89 c7             	mov    %rax,%rdi
 364:	e8 00 00 00 00       	call   369 <ArtNetNode::Process(unsigned short)+0x369>
 369:	e9 c0 00 00 00       	jmp    42e <ArtNetNode::Process(unsigned short)+0x42e>
 36e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 372:	48 89 c7             	mov    %rax,%rdi
 375:	e8 00 00 00 00       	call   37a <ArtNetNode::Process(unsigned short)+0x37a>
 37a:	e9 bc 00 00 00       	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 37f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 383:	48 89 c7             	mov    %rax,%rdi
 386:	e8 00 00 00 00       	call   38b <ArtNetNode::Process(unsigned short)+0x38b>
 38b:	e9 ab 00 00 00       	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 390:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 394:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 39b:	48 85 c0             	test   %rax,%rax
 39e:	0f 84 8d 00 00 00    	je     431 <ArtNetNode::Process(unsigned short)+0x431>
 3a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3a8:	48 89 c7             	mov    %rax,%rdi
 3ab:	e8 00 00 00 00       	call   3b0 <ArtNetNode::Process(unsigned short)+0x3b0>
 3b0:	eb 7f                	jmp    431 <ArtNetNode::Process(unsigned short)+0x431>
 3b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3b6:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 3bd:	48 85 c0             	test   %rax,%rax
 3c0:	74 72                	je     434 <ArtNetNode::Process(unsigned short)+0x434>
 3c2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3c6:	48 89 c7             	mov    %rax,%rdi
 3c9:	e8 00 00 00 00       	call   3ce <ArtNetNode::Process(unsigned short)+0x3ce>
 3ce:	eb 64                	jmp    434 <ArtNetNode::Process(unsigned short)+0x434>
 3d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3d4:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 3db:	48 85 c0             	test   %rax,%rax
 3de:	74 57                	je     437 <ArtNetNode::Process(unsigned short)+0x437>
 3e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3e4:	48 89 c7             	mov    %rax,%rdi
 3e7:	e8 00 00 00 00       	call   3ec <ArtNetNode::Process(unsigned short)+0x3ec>
 3ec:	eb 49                	jmp    437 <ArtNetNode::Process(unsigned short)+0x437>
 3ee:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3f2:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 3f9:	48 85 c0             	test   %rax,%rax
 3fc:	74 3c                	je     43a <ArtNetNode::Process(unsigned short)+0x43a>
 3fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 402:	48 89 c7             	mov    %rax,%rdi
 405:	e8 00 00 00 00       	call   40a <ArtNetNode::Process(unsigned short)+0x40a>
 40a:	eb 2e                	jmp    43a <ArtNetNode::Process(unsigned short)+0x43a>
 40c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 410:	48 89 c7             	mov    %rax,%rdi
 413:	e8 00 00 00 00       	call   418 <ArtNetNode::Process(unsigned short)+0x418>
 418:	eb 21                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 41a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 41e:	48 89 c7             	mov    %rax,%rdi
 421:	e8 00 00 00 00       	call   426 <ArtNetNode::Process(unsigned short)+0x426>
 426:	eb 13                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 428:	90                   	nop
 429:	eb 10                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 42b:	90                   	nop
 42c:	eb 0d                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 42e:	90                   	nop
 42f:	eb 0a                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 431:	90                   	nop
 432:	eb 07                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 434:	90                   	nop
 435:	eb 04                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 437:	90                   	nop
 438:	eb 01                	jmp    43b <ArtNetNode::Process(unsigned short)+0x43b>
 43a:	90                   	nop
 43b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 43f:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 446:	48 85 c0             	test   %rax,%rax
 449:	74 0c                	je     457 <ArtNetNode::Process(unsigned short)+0x457>
 44b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 44f:	48 89 c7             	mov    %rax,%rdi
 452:	e8 00 00 00 00       	call   457 <ArtNetNode::Process(unsigned short)+0x457>
 457:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 45b:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
 462:	0f b6 c0             	movzbl %al,%eax
 465:	25 c0 00 00 00       	and    $0xc0,%eax
 46a:	3d c0 00 00 00       	cmp    $0xc0,%eax
 46f:	75 19                	jne    48a <ArtNetNode::Process(unsigned short)+0x48a>
 471:	e8 00 00 00 00       	call   476 <ArtNetNode::Process(unsigned short)+0x476>
 476:	48 89 c7             	mov    %rax,%rdi
 479:	e8 00 00 00 00       	call   47e <ArtNetNode::Process(unsigned short)+0x47e>
 47e:	83 f8 04             	cmp    $0x4,%eax
 481:	74 07                	je     48a <ArtNetNode::Process(unsigned short)+0x48a>
 483:	b8 01 00 00 00       	mov    $0x1,%eax
 488:	eb 05                	jmp    48f <ArtNetNode::Process(unsigned short)+0x48f>
 48a:	b8 00 00 00 00       	mov    $0x0,%eax
 48f:	84 c0                	test   %al,%al
 491:	74 33                	je     4c6 <ArtNetNode::Process(unsigned short)+0x4c6>
 493:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 497:	0f b6 80 61 03 00 00 	movzbl 0x361(%rax),%eax
 49e:	84 c0                	test   %al,%al
 4a0:	74 13                	je     4b5 <ArtNetNode::Process(unsigned short)+0x4b5>
 4a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 4a6:	be 03 00 00 00       	mov    $0x3,%esi
 4ab:	48 89 c7             	mov    %rax,%rdi
 4ae:	e8 00 00 00 00       	call   4b3 <ArtNetNode::Process(unsigned short)+0x4b3>
 4b3:	eb 11                	jmp    4c6 <ArtNetNode::Process(unsigned short)+0x4c6>
 4b5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 4b9:	be 02 00 00 00       	mov    $0x2,%esi
 4be:	48 89 c7             	mov    %rax,%rdi
 4c1:	e8 00 00 00 00       	call   4c6 <ArtNetNode::Process(unsigned short)+0x4c6>
 4c6:	bf 00 00 00 00       	mov    $0x0,%edi
 4cb:	e8 00 00 00 00       	call   4d0 <ArtNetNode::Process(unsigned short)+0x4d0>
 4d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 4d4:	48 05 20 03 00 00    	add    $0x320,%rax
 4da:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 4de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 4e2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 4e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 4ea:	48 83 c0 30          	add    $0x30,%rax
 4ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 4f2:	eb 5d                	jmp    551 <ArtNetNode::Process(unsigned short)+0x551>
 4f4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 4f8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 4fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 500:	8b 00                	mov    (%rax),%eax
 502:	85 c0                	test   %eax,%eax
 504:	74 46                	je     54c <ArtNetNode::Process(unsigned short)+0x54c>
 506:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 50a:	8b 90 44 02 00 00    	mov    0x244(%rax),%edx
 510:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 514:	8b 00                	mov    (%rax),%eax
 516:	29 c2                	sub    %eax,%edx
 518:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 51c:	8b 80 1c 03 00 00    	mov    0x31c(%rax),%eax
 522:	39 c2                	cmp    %eax,%edx
 524:	76 26                	jbe    54c <ArtNetNode::Process(unsigned short)+0x54c>
 526:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 52a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 530:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 534:	8b 50 04             	mov    0x4(%rax),%edx
 537:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 53b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 53f:	be 00 00 00 00       	mov    $0x0,%esi
 544:	48 89 c7             	mov    %rax,%rdi
 547:	e8 00 00 00 00       	call   54c <ArtNetNode::Process(unsigned short)+0x54c>
 54c:	48 83 45 c0 0c       	addq   $0xc,-0x40(%rbp)
 551:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 555:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
 559:	75 99                	jne    4f4 <ArtNetNode::Process(unsigned short)+0x4f4>
 55b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 55f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 566:	00 00 
 568:	74 05                	je     56f <ArtNetNode::Process(unsigned short)+0x56f>
 56a:	e8 00 00 00 00       	call   56f <ArtNetNode::Process(unsigned short)+0x56f>
 56f:	c9                   	leave  
 570:	c3                   	ret    

artnetnodehandleaddress.o:     file format elf64-x86-64


Disassembly of section .text._ZN6artnet17make_port_addressEjjj:

0000000000000000 <artnet::make_port_address(unsigned int, unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	89 75 e8             	mov    %esi,-0x18(%rbp)
  12:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	31 c0                	xor    %eax,%eax
  24:	8b 45 ec             	mov    -0x14(%rbp),%eax
  27:	c1 e0 08             	shl    $0x8,%eax
  2a:	66 25 00 7f          	and    $0x7f00,%ax
  2e:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  32:	8b 45 e8             	mov    -0x18(%rbp),%eax
  35:	c1 e0 04             	shl    $0x4,%eax
  38:	0f b6 c0             	movzbl %al,%eax
  3b:	66 09 45 f6          	or     %ax,-0xa(%rbp)
  3f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  42:	83 e0 0f             	and    $0xf,%eax
  45:	66 09 45 f6          	or     %ax,-0xa(%rbp)
  49:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
  4d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  51:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  58:	00 00 
  5a:	74 05                	je     61 <artnet::make_port_address(unsigned int, unsigned int, unsigned int)+0x61>
  5c:	e8 00 00 00 00       	call   61 <artnet::make_port_address(unsigned int, unsigned int, unsigned int)+0x61>
  61:	c9                   	leave  
  62:	c3                   	ret    

Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 40 10             	mov    0x10(%rax),%eax
  26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  31:	00 00 
  33:	74 05                	je     3a <Network::GetIp() const+0x3a>
  35:	e8 00 00 00 00       	call   3a <Network::GetIp() const+0x3a>
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Network::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Network::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Network::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data3GetEv:

0000000000000000 <lightset::Data::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 22 <lightset::Data::Get()+0x22>
  22:	84 c0                	test   %al,%al
  24:	0f 94 c0             	sete   %al
  27:	84 c0                	test   %al,%al
  29:	74 36                	je     61 <lightset::Data::Get()+0x61>
  2b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 32 <lightset::Data::Get()+0x32>
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	call   3a <lightset::Data::Get()+0x3a>
  3a:	85 c0                	test   %eax,%eax
  3c:	0f 95 c0             	setne  %al
  3f:	84 c0                	test   %al,%al
  41:	74 1e                	je     61 <lightset::Data::Get()+0x61>
  43:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4a <lightset::Data::Get()+0x4a>
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	call   52 <lightset::Data::Get()+0x52>
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <lightset::Data::Get()+0x59>
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <lightset::Data::Get()+0x61>
  61:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 68 <lightset::Data::Get()+0x68>
  68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  6c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  73:	00 00 
  75:	74 05                	je     7c <lightset::Data::Get()+0x7c>
  77:	e8 00 00 00 00       	call   7c <lightset::Data::Get()+0x7c>
  7c:	c9                   	leave  
  7d:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data11OutputClearEP8LightSetj:

0000000000000000 <lightset::Data::OutputClear(LightSet*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	e8 00 00 00 00       	call   27 <lightset::Data::OutputClear(LightSet*, unsigned int)+0x27>
  27:	48 89 c1             	mov    %rax,%rcx
  2a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 89 cf             	mov    %rcx,%rdi
  37:	e8 00 00 00 00       	call   3c <lightset::Data::OutputClear(LightSet*, unsigned int)+0x3c>
  3c:	90                   	nop
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  48:	00 00 
  4a:	74 05                	je     51 <lightset::Data::OutputClear(LightSet*, unsigned int)+0x51>
  4c:	e8 00 00 00 00       	call   51 <lightset::Data::OutputClear(LightSet*, unsigned int)+0x51>
  51:	c9                   	leave  
  52:	c3                   	ret    

Disassembly of section .text._ZN8lightset4DataC2Ev:

0000000000000000 <lightset::Data::Data()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	90                   	nop
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  2b:	00 00 
  2d:	74 05                	je     34 <lightset::Data::Data()+0x34>
  2f:	e8 00 00 00 00       	call   34 <lightset::Data::Data()+0x34>
  34:	c9                   	leave  
  35:	c3                   	ret    

Disassembly of section .text._ZNK8lightset4Data7IOutputEP8LightSetj:

0000000000000000 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  2a:	48 8b 00             	mov    (%rax),%rax
  2d:	48 83 c0 20          	add    $0x20,%rax
  31:	4c 8b 08             	mov    (%rax),%r9
  34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  38:	8b 45 dc             	mov    -0x24(%rbp),%eax
  3b:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  42:	48 01 d0             	add    %rdx,%rax
  45:	48 05 00 06 00 00    	add    $0x600,%rax
  4b:	8b 10                	mov    (%rax),%edx
  4d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  50:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  57:	48 8d 88 00 04 00 00 	lea    0x400(%rax),%rcx
  5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  62:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
  66:	8b 75 dc             	mov    -0x24(%rbp),%esi
  69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  6d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  73:	89 d1                	mov    %edx,%ecx
  75:	48 89 fa             	mov    %rdi,%rdx
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	41 ff d1             	call   *%r9
  7e:	90                   	nop
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8a:	00 00 
  8c:	74 05                	je     93 <lightset::Data::IOutput(LightSet*, unsigned int) const+0x93>
  8e:	e8 00 00 00 00       	call   93 <lightset::Data::IOutput(LightSet*, unsigned int) const+0x93>
  93:	c9                   	leave  
  94:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data12IOutputClearEP8LightSetj:

0000000000000000 <lightset::Data::IOutputClear(LightSet*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	8b 45 dc             	mov    -0x24(%rbp),%eax
  29:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  30:	48 8d 90 00 04 00 00 	lea    0x400(%rax),%rdx
  37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3b:	48 01 d0             	add    %rdx,%rax
  3e:	ba 00 02 00 00       	mov    $0x200,%edx
  43:	be 00 00 00 00       	mov    $0x0,%esi
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	call   50 <lightset::Data::IOutputClear(LightSet*, unsigned int)+0x50>
  50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  54:	8b 45 dc             	mov    -0x24(%rbp),%eax
  57:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  5e:	48 01 d0             	add    %rdx,%rax
  61:	48 05 00 06 00 00    	add    $0x600,%rax
  67:	c7 00 00 02 00 00    	movl   $0x200,(%rax)
  6d:	8b 55 dc             	mov    -0x24(%rbp),%edx
  70:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  78:	48 89 ce             	mov    %rcx,%rsi
  7b:	48 89 c7             	mov    %rax,%rdi
  7e:	e8 00 00 00 00       	call   83 <lightset::Data::IOutputClear(LightSet*, unsigned int)+0x83>
  83:	90                   	nop
  84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  88:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8f:	00 00 
  91:	74 05                	je     98 <lightset::Data::IOutputClear(LightSet*, unsigned int)+0x98>
  93:	e8 00 00 00 00       	call   98 <lightset::Data::IOutputClear(LightSet*, unsigned int)+0x98>
  98:	c9                   	leave  
  99:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Hardware::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Hardware::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Hardware::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN10E131Bridge11SetFailSafeEN8lightset8FailSafeE:

0000000000000000 <E131Bridge::SetFailSafe(lightset::FailSafe)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  29:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
  2f:	90                   	nop
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  3b:	00 00 
  3d:	74 05                	je     44 <E131Bridge::SetFailSafe(lightset::FailSafe)+0x44>
  3f:	e8 00 00 00 00       	call   44 <E131Bridge::SetFailSafe(lightset::FailSafe)+0x44>
  44:	c9                   	leave  
  45:	c3                   	ret    

Disassembly of section .text._ZN10E131Bridge12SetMergeModeEjN8lightset9MergeModeE:

0000000000000000 <E131Bridge::SetMergeMode(unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  29:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  2c:	48 89 d0             	mov    %rdx,%rax
  2f:	48 c1 e0 04          	shl    $0x4,%rax
  33:	48 01 d0             	add    %rdx,%rax
  36:	48 c1 e0 02          	shl    $0x2,%rax
  3a:	48 01 c8             	add    %rcx,%rax
  3d:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
  44:	8b 45 e0             	mov    -0x20(%rbp),%eax
  47:	89 02                	mov    %eax,(%rdx)
  49:	90                   	nop
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  55:	00 00 
  57:	74 05                	je     5e <E131Bridge::SetMergeMode(unsigned int, lightset::MergeMode)+0x5e>
  59:	e8 00 00 00 00       	call   5e <E131Bridge::SetMergeMode(unsigned int, lightset::MergeMode)+0x5e>
  5e:	c9                   	leave  
  5f:	c3                   	ret    

Disassembly of section .text._ZN10E131Bridge22SetEnableDataIndicatorEb:

0000000000000000 <E131Bridge::SetEnableDataIndicator(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e4             	mov    %al,-0x1c(%rbp)
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	31 c0                	xor    %eax,%eax
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
  2c:	88 90 08 02 00 00    	mov    %dl,0x208(%rax)
  32:	90                   	nop
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  3e:	00 00 
  40:	74 05                	je     47 <E131Bridge::SetEnableDataIndicator(bool)+0x47>
  42:	e8 00 00 00 00       	call   47 <E131Bridge::SetEnableDataIndicator(bool)+0x47>
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN10E131Bridge5ClearEj:

0000000000000000 <E131Bridge::Clear(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  2d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  30:	89 d6                	mov    %edx,%esi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	call   3a <E131Bridge::Clear(unsigned int)+0x3a>
  3a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  3e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  41:	48 89 d0             	mov    %rdx,%rax
  44:	48 01 c0             	add    %rax,%rax
  47:	48 01 d0             	add    %rdx,%rax
  4a:	48 c1 e0 02          	shl    $0x2,%rax
  4e:	48 01 c8             	add    %rcx,%rax
  51:	48 05 9c 00 00 00    	add    $0x9c,%rax
  57:	8b 00                	mov    (%rax),%eax
  59:	83 f8 01             	cmp    $0x1,%eax
  5c:	75 73                	jne    d1 <E131Bridge::Clear(unsigned int)+0xd1>
  5e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  62:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  65:	48 89 d0             	mov    %rdx,%rax
  68:	48 c1 e0 04          	shl    $0x4,%rax
  6c:	48 01 d0             	add    %rdx,%rax
  6f:	48 c1 e0 02          	shl    $0x2,%rax
  73:	48 01 c8             	add    %rcx,%rax
  76:	48 05 09 01 00 00    	add    $0x109,%rax
  7c:	0f b6 00             	movzbl (%rax),%eax
  7f:	83 f0 01             	xor    $0x1,%eax
  82:	84 c0                	test   %al,%al
  84:	74 4b                	je     d1 <E131Bridge::Clear(unsigned int)+0xd1>
  86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  8a:	48 8b 80 20 02 00 00 	mov    0x220(%rax),%rax
  91:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  95:	48 8b 92 20 02 00 00 	mov    0x220(%rdx),%rdx
  9c:	48 8b 12             	mov    (%rdx),%rdx
  9f:	48 83 c2 10          	add    $0x10,%rdx
  a3:	48 8b 0a             	mov    (%rdx),%rcx
  a6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  a9:	89 d6                	mov    %edx,%esi
  ab:	48 89 c7             	mov    %rax,%rdi
  ae:	ff d1                	call   *%rcx
  b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  b4:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  b7:	48 89 d0             	mov    %rdx,%rax
  ba:	48 c1 e0 04          	shl    $0x4,%rax
  be:	48 01 d0             	add    %rdx,%rax
  c1:	48 c1 e0 02          	shl    $0x2,%rax
  c5:	48 01 c8             	add    %rcx,%rax
  c8:	48 05 09 01 00 00    	add    $0x109,%rax
  ce:	c6 00 01             	movb   $0x1,(%rax)
  d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d5:	c6 40 74 00          	movb   $0x0,0x74(%rax)
  d9:	90                   	nop
  da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  de:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  e5:	00 00 
  e7:	74 05                	je     ee <E131Bridge::Clear(unsigned int)+0xee>
  e9:	e8 00 00 00 00       	call   ee <E131Bridge::Clear(unsigned int)+0xee>
  ee:	c9                   	leave  
  ef:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode15SetLocalMergingEv:

0000000000000000 <ArtNetNode::SetLocalMerging()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  26:	e9 df 01 00 00       	jmp    20a <ArtNetNode::SetLocalMerging()+0x20a>
  2b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  2f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  32:	48 89 d0             	mov    %rdx,%rax
  35:	48 c1 e0 03          	shl    $0x3,%rax
  39:	48 01 d0             	add    %rdx,%rax
  3c:	48 c1 e0 02          	shl    $0x2,%rax
  40:	48 01 c8             	add    %rcx,%rax
  43:	48 05 98 02 00 00    	add    $0x298,%rax
  49:	8b 00                	mov    (%rax),%eax
  4b:	83 f8 01             	cmp    $0x1,%eax
  4e:	0f 84 b1 01 00 00    	je     205 <ArtNetNode::SetLocalMerging()+0x205>
  54:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  58:	8b 55 ec             	mov    -0x14(%rbp),%edx
  5b:	48 89 d0             	mov    %rdx,%rax
  5e:	48 c1 e0 03          	shl    $0x3,%rax
  62:	48 01 d0             	add    %rdx,%rax
  65:	48 c1 e0 02          	shl    $0x2,%rax
  69:	48 01 c8             	add    %rcx,%rax
  6c:	48 05 a0 02 00 00    	add    $0x2a0,%rax
  72:	c6 00 00             	movb   $0x0,(%rax)
  75:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  7c:	e9 78 01 00 00       	jmp    1f9 <ArtNetNode::SetLocalMerging()+0x1f9>
  81:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  85:	8b 55 f0             	mov    -0x10(%rbp),%edx
  88:	48 89 d0             	mov    %rdx,%rax
  8b:	48 c1 e0 03          	shl    $0x3,%rax
  8f:	48 01 d0             	add    %rdx,%rax
  92:	48 c1 e0 02          	shl    $0x2,%rax
  96:	48 01 c8             	add    %rcx,%rax
  99:	48 05 98 02 00 00    	add    $0x298,%rax
  9f:	8b 00                	mov    (%rax),%eax
  a1:	85 c0                	test   %eax,%eax
  a3:	0f 84 4b 01 00 00    	je     1f4 <ArtNetNode::SetLocalMerging()+0x1f4>
  a9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  ad:	8b 55 ec             	mov    -0x14(%rbp),%edx
  b0:	48 89 d0             	mov    %rdx,%rax
  b3:	48 c1 e0 03          	shl    $0x3,%rax
  b7:	48 01 d0             	add    %rdx,%rax
  ba:	48 c1 e0 02          	shl    $0x2,%rax
  be:	48 01 c8             	add    %rcx,%rax
  c1:	48 05 9c 02 00 00    	add    $0x29c,%rax
  c7:	8b 08                	mov    (%rax),%ecx
  c9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  cd:	8b 55 f0             	mov    -0x10(%rbp),%edx
  d0:	48 89 d0             	mov    %rdx,%rax
  d3:	48 c1 e0 03          	shl    $0x3,%rax
  d7:	48 01 d0             	add    %rdx,%rax
  da:	48 c1 e0 02          	shl    $0x2,%rax
  de:	48 01 f0             	add    %rsi,%rax
  e1:	48 05 9c 02 00 00    	add    $0x29c,%rax
  e7:	8b 00                	mov    (%rax),%eax
  e9:	39 c1                	cmp    %eax,%ecx
  eb:	0f 85 04 01 00 00    	jne    1f5 <ArtNetNode::SetLocalMerging()+0x1f5>
  f1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  f5:	8b 55 ec             	mov    -0x14(%rbp),%edx
  f8:	48 89 d0             	mov    %rdx,%rax
  fb:	48 c1 e0 03          	shl    $0x3,%rax
  ff:	48 01 d0             	add    %rdx,%rax
 102:	48 c1 e0 02          	shl    $0x2,%rax
 106:	48 01 c8             	add    %rcx,%rax
 109:	48 05 92 02 00 00    	add    $0x292,%rax
 10f:	0f b7 08             	movzwl (%rax),%ecx
 112:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
 116:	8b 55 f0             	mov    -0x10(%rbp),%edx
 119:	48 89 d0             	mov    %rdx,%rax
 11c:	48 c1 e0 03          	shl    $0x3,%rax
 120:	48 01 d0             	add    %rdx,%rax
 123:	48 c1 e0 02          	shl    $0x2,%rax
 127:	48 01 f0             	add    %rsi,%rax
 12a:	48 05 92 02 00 00    	add    $0x292,%rax
 130:	0f b7 00             	movzwl (%rax),%eax
 133:	66 39 c1             	cmp    %ax,%cx
 136:	0f 85 b9 00 00 00    	jne    1f5 <ArtNetNode::SetLocalMerging()+0x1f5>
 13c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 140:	8b 55 f0             	mov    -0x10(%rbp),%edx
 143:	48 89 d0             	mov    %rdx,%rax
 146:	48 c1 e0 03          	shl    $0x3,%rax
 14a:	48 01 d0             	add    %rdx,%rax
 14d:	48 c1 e0 02          	shl    $0x2,%rax
 151:	48 01 c8             	add    %rcx,%rax
 154:	48 05 a0 02 00 00    	add    $0x2a0,%rax
 15a:	0f b6 00             	movzbl (%rax),%eax
 15d:	83 f0 01             	xor    $0x1,%eax
 160:	84 c0                	test   %al,%al
 162:	74 27                	je     18b <ArtNetNode::SetLocalMerging()+0x18b>
 164:	e8 00 00 00 00       	call   169 <ArtNetNode::SetLocalMerging()+0x169>
 169:	48 89 c7             	mov    %rax,%rdi
 16c:	e8 00 00 00 00       	call   171 <ArtNetNode::SetLocalMerging()+0x171>
 171:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 175:	8b 55 f0             	mov    -0x10(%rbp),%edx
 178:	48 83 c2 1b          	add    $0x1b,%rdx
 17c:	48 c1 e2 05          	shl    $0x5,%rdx
 180:	48 01 ca             	add    %rcx,%rdx
 183:	48 83 c2 0c          	add    $0xc,%rdx
 187:	89 02                	mov    %eax,(%rdx)
 189:	eb 25                	jmp    1b0 <ArtNetNode::SetLocalMerging()+0x1b0>
 18b:	e8 00 00 00 00       	call   190 <ArtNetNode::SetLocalMerging()+0x190>
 190:	48 89 c7             	mov    %rax,%rdi
 193:	e8 00 00 00 00       	call   198 <ArtNetNode::SetLocalMerging()+0x198>
 198:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 19c:	8b 55 f0             	mov    -0x10(%rbp),%edx
 19f:	48 83 c2 1b          	add    $0x1b,%rdx
 1a3:	48 c1 e2 05          	shl    $0x5,%rdx
 1a7:	48 01 ca             	add    %rcx,%rdx
 1aa:	48 83 c2 18          	add    $0x18,%rdx
 1ae:	89 02                	mov    %eax,(%rdx)
 1b0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 1b4:	8b 55 ec             	mov    -0x14(%rbp),%edx
 1b7:	48 89 d0             	mov    %rdx,%rax
 1ba:	48 c1 e0 03          	shl    $0x3,%rax
 1be:	48 01 d0             	add    %rdx,%rax
 1c1:	48 c1 e0 02          	shl    $0x2,%rax
 1c5:	48 01 c8             	add    %rcx,%rax
 1c8:	48 05 a0 02 00 00    	add    $0x2a0,%rax
 1ce:	c6 00 01             	movb   $0x1,(%rax)
 1d1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 1d5:	8b 55 f0             	mov    -0x10(%rbp),%edx
 1d8:	48 89 d0             	mov    %rdx,%rax
 1db:	48 c1 e0 03          	shl    $0x3,%rax
 1df:	48 01 d0             	add    %rdx,%rax
 1e2:	48 c1 e0 02          	shl    $0x2,%rax
 1e6:	48 01 c8             	add    %rcx,%rax
 1e9:	48 05 a0 02 00 00    	add    $0x2a0,%rax
 1ef:	c6 00 01             	movb   $0x1,(%rax)
 1f2:	eb 01                	jmp    1f5 <ArtNetNode::SetLocalMerging()+0x1f5>
 1f4:	90                   	nop
 1f5:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 1f9:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
 1fd:	0f 86 7e fe ff ff    	jbe    81 <ArtNetNode::SetLocalMerging()+0x81>
 203:	eb 01                	jmp    206 <ArtNetNode::SetLocalMerging()+0x206>
 205:	90                   	nop
 206:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 20a:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
 20e:	0f 86 17 fe ff ff    	jbe    2b <ArtNetNode::SetLocalMerging()+0x2b>
 214:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 21b:	eb 04                	jmp    221 <ArtNetNode::SetLocalMerging()+0x221>
 21d:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 221:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
 225:	76 f6                	jbe    21d <ArtNetNode::SetLocalMerging()+0x21d>
 227:	90                   	nop
 228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 22c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 233:	00 00 
 235:	74 05                	je     23c <ArtNetNode::SetLocalMerging()+0x23c>
 237:	e8 00 00 00 00       	call   23c <ArtNetNode::SetLocalMerging()+0x23c>
 23c:	c9                   	leave  
 23d:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode15MakePortAddressEtj:

0000000000000000 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	89 55 e0             	mov    %edx,-0x20(%rbp)
  15:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  26:	31 c0                	xor    %eax,%eax
  28:	0f b7 55 e4          	movzwl -0x1c(%rbp),%edx
  2c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  30:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  33:	48 89 c8             	mov    %rcx,%rax
  36:	48 c1 e0 03          	shl    $0x3,%rax
  3a:	48 01 c8             	add    %rcx,%rax
  3d:	48 c1 e0 02          	shl    $0x2,%rax
  41:	48 01 f0             	add    %rsi,%rax
  44:	48 05 96 02 00 00    	add    $0x296,%rax
  4a:	0f b6 00             	movzbl (%rax),%eax
  4d:	0f b6 c8             	movzbl %al,%ecx
  50:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  54:	8b 75 e0             	mov    -0x20(%rbp),%esi
  57:	48 89 f0             	mov    %rsi,%rax
  5a:	48 c1 e0 03          	shl    $0x3,%rax
  5e:	48 01 f0             	add    %rsi,%rax
  61:	48 c1 e0 02          	shl    $0x2,%rax
  65:	48 01 f8             	add    %rdi,%rax
  68:	48 05 95 02 00 00    	add    $0x295,%rax
  6e:	0f b6 00             	movzbl (%rax),%eax
  71:	0f b6 c0             	movzbl %al,%eax
  74:	89 ce                	mov    %ecx,%esi
  76:	89 c7                	mov    %eax,%edi
  78:	e8 00 00 00 00       	call   7d <ArtNetNode::MakePortAddress(unsigned short, unsigned int)+0x7d>
  7d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  81:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  88:	00 00 
  8a:	74 05                	je     91 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)+0x91>
  8c:	e8 00 00 00 00       	call   91 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)+0x91>
  91:	c9                   	leave  
  92:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode11SetUniverseEjN8lightset7PortDirEt:

0000000000000000 <ArtNetNode::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	89 c8                	mov    %ecx,%eax
  18:	66 89 45 dc          	mov    %ax,-0x24(%rbp)
  1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  23:	00 00 
  25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  29:	31 c0                	xor    %eax,%eax
  2b:	0f b7 45 dc          	movzwl -0x24(%rbp),%eax
  2f:	66 c1 e8 08          	shr    $0x8,%ax
  33:	83 e0 7f             	and    $0x7f,%eax
  36:	89 c1                	mov    %eax,%ecx
  38:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  3c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  3f:	48 89 d0             	mov    %rdx,%rax
  42:	48 c1 e0 03          	shl    $0x3,%rax
  46:	48 01 d0             	add    %rdx,%rax
  49:	48 c1 e0 02          	shl    $0x2,%rax
  4d:	48 01 f0             	add    %rsi,%rax
  50:	48 05 95 02 00 00    	add    $0x295,%rax
  56:	88 08                	mov    %cl,(%rax)
  58:	0f b7 45 dc          	movzwl -0x24(%rbp),%eax
  5c:	66 c1 e8 04          	shr    $0x4,%ax
  60:	83 e0 0f             	and    $0xf,%eax
  63:	89 c1                	mov    %eax,%ecx
  65:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  69:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  6c:	48 89 d0             	mov    %rdx,%rax
  6f:	48 c1 e0 03          	shl    $0x3,%rax
  73:	48 01 d0             	add    %rdx,%rax
  76:	48 c1 e0 02          	shl    $0x2,%rax
  7a:	48 01 f0             	add    %rsi,%rax
  7d:	48 05 96 02 00 00    	add    $0x296,%rax
  83:	88 08                	mov    %cl,(%rax)
  85:	0f b7 45 dc          	movzwl -0x24(%rbp),%eax
  89:	0f b6 c0             	movzbl %al,%eax
  8c:	83 e0 0f             	and    $0xf,%eax
  8f:	89 c1                	mov    %eax,%ecx
  91:	8b 55 e0             	mov    -0x20(%rbp),%edx
  94:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9b:	48 89 c7             	mov    %rax,%rdi
  9e:	e8 00 00 00 00       	call   a3 <ArtNetNode::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xa3>
  a3:	90                   	nop
  a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  af:	00 00 
  b1:	74 05                	je     b8 <ArtNetNode::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb8>
  b3:	e8 00 00 00 00       	call   b8 <ArtNetNode::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb8>
  b8:	c9                   	leave  
  b9:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode17SetUniverseSwitchEjN8lightset7PortDirEh:

0000000000000000 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	89 c8                	mov    %ecx,%eax
  18:	88 45 dc             	mov    %al,-0x24(%rbp)
  1b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  22:	00 00 
  24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  28:	31 c0                	xor    %eax,%eax
  2a:	83 7d e0 02          	cmpl   $0x2,-0x20(%rbp)
  2e:	75 61                	jne    91 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x91>
  30:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  34:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  37:	48 89 d0             	mov    %rdx,%rax
  3a:	48 c1 e0 03          	shl    $0x3,%rax
  3e:	48 01 d0             	add    %rdx,%rax
  41:	48 c1 e0 02          	shl    $0x2,%rax
  45:	48 01 c8             	add    %rcx,%rax
  48:	48 05 98 02 00 00    	add    $0x298,%rax
  4e:	8b 00                	mov    (%rax),%eax
  50:	83 f8 01             	cmp    $0x1,%eax
  53:	75 18                	jne    6d <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x6d>
  55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  59:	0f b6 80 62 03 00 00 	movzbl 0x362(%rax),%eax
  60:	8d 50 ff             	lea    -0x1(%rax),%edx
  63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  67:	88 90 62 03 00 00    	mov    %dl,0x362(%rax)
  6d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  71:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  74:	48 89 d0             	mov    %rdx,%rax
  77:	48 c1 e0 03          	shl    $0x3,%rax
  7b:	48 01 d0             	add    %rdx,%rax
  7e:	48 c1 e0 02          	shl    $0x2,%rax
  82:	48 01 c8             	add    %rcx,%rax
  85:	48 05 98 02 00 00    	add    $0x298,%rax
  8b:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  91:	83 7d e0 01          	cmpl   $0x1,-0x20(%rbp)
  95:	0f 85 fe 00 00 00    	jne    199 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x199>
  9b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  9f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  a2:	48 89 d0             	mov    %rdx,%rax
  a5:	48 c1 e0 03          	shl    $0x3,%rax
  a9:	48 01 d0             	add    %rdx,%rax
  ac:	48 c1 e0 02          	shl    $0x2,%rax
  b0:	48 01 c8             	add    %rcx,%rax
  b3:	48 05 98 02 00 00    	add    $0x298,%rax
  b9:	8b 00                	mov    (%rax),%eax
  bb:	83 f8 01             	cmp    $0x1,%eax
  be:	74 18                	je     d8 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xd8>
  c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c4:	0f b6 80 62 03 00 00 	movzbl 0x362(%rax),%eax
  cb:	8d 50 01             	lea    0x1(%rax),%edx
  ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d2:	88 90 62 03 00 00    	mov    %dl,0x362(%rax)
  d8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  dc:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  df:	48 89 d0             	mov    %rdx,%rax
  e2:	48 c1 e0 03          	shl    $0x3,%rax
  e6:	48 01 d0             	add    %rdx,%rax
  e9:	48 c1 e0 02          	shl    $0x2,%rax
  ed:	48 01 c8             	add    %rcx,%rax
  f0:	48 05 98 02 00 00    	add    $0x298,%rax
  f6:	8b 00                	mov    (%rax),%eax
  f8:	85 c0                	test   %eax,%eax
  fa:	75 18                	jne    114 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x114>
  fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 100:	0f b6 80 63 03 00 00 	movzbl 0x363(%rax),%eax
 107:	8d 50 ff             	lea    -0x1(%rax),%edx
 10a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10e:	88 90 63 03 00 00    	mov    %dl,0x363(%rax)
 114:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
 118:	83 e0 0f             	and    $0xf,%eax
 11b:	89 c1                	mov    %eax,%ecx
 11d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
 121:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 124:	48 89 d0             	mov    %rdx,%rax
 127:	48 c1 e0 03          	shl    $0x3,%rax
 12b:	48 01 d0             	add    %rdx,%rax
 12e:	48 c1 e0 02          	shl    $0x2,%rax
 132:	48 01 f0             	add    %rsi,%rax
 135:	48 05 94 02 00 00    	add    $0x294,%rax
 13b:	88 08                	mov    %cl,(%rax)
 13d:	0f b6 4d dc          	movzbl -0x24(%rbp),%ecx
 141:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 148:	89 ce                	mov    %ecx,%esi
 14a:	48 89 c7             	mov    %rax,%rdi
 14d:	e8 00 00 00 00       	call   152 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x152>
 152:	89 c2                	mov    %eax,%edx
 154:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
 158:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 15b:	48 89 c8             	mov    %rcx,%rax
 15e:	48 c1 e0 03          	shl    $0x3,%rax
 162:	48 01 c8             	add    %rcx,%rax
 165:	48 c1 e0 02          	shl    $0x2,%rax
 169:	48 01 f0             	add    %rsi,%rax
 16c:	48 05 92 02 00 00    	add    $0x292,%rax
 172:	66 89 10             	mov    %dx,(%rax)
 175:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 179:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 17c:	48 89 d0             	mov    %rdx,%rax
 17f:	48 c1 e0 03          	shl    $0x3,%rax
 183:	48 01 d0             	add    %rdx,%rax
 186:	48 c1 e0 02          	shl    $0x2,%rax
 18a:	48 01 c8             	add    %rcx,%rax
 18d:	48 05 98 02 00 00    	add    $0x298,%rax
 193:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 199:	8b 55 e0             	mov    -0x20(%rbp),%edx
 19c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 19f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1a3:	89 ce                	mov    %ecx,%esi
 1a5:	48 89 c7             	mov    %rax,%rdi
 1a8:	e8 00 00 00 00       	call   1ad <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x1ad>
 1ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1b1:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
 1b8:	3c 02                	cmp    $0x2,%al
 1ba:	75 50                	jne    20c <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x20c>
 1bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1c0:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
 1c7:	48 85 c0             	test   %rax,%rax
 1ca:	74 2f                	je     1fb <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x1fb>
 1cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1d0:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
 1d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 1db:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
 1e2:	48 8b 12             	mov    (%rdx),%rdx
 1e5:	48 83 c2 20          	add    $0x20,%rdx
 1e9:	4c 8b 02             	mov    (%rdx),%r8
 1ec:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
 1f0:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 1f3:	89 ce                	mov    %ecx,%esi
 1f5:	48 89 c7             	mov    %rax,%rdi
 1f8:	41 ff d0             	call   *%r8
 1fb:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
 1ff:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 202:	89 d6                	mov    %edx,%esi
 204:	89 c7                	mov    %eax,%edi
 206:	e8 00 00 00 00       	call   20b <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x20b>
 20b:	90                   	nop
 20c:	90                   	nop
 20d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 211:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 218:	00 00 
 21a:	74 05                	je     221 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x221>
 21c:	e8 00 00 00 00       	call   221 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x221>
 221:	c9                   	leave  
 222:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode15SetSubnetSwitchEjh:

0000000000000000 <ArtNetNode::SetSubnetSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 e0             	mov    %al,-0x20(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  2b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  2e:	48 89 d0             	mov    %rdx,%rax
  31:	48 c1 e0 03          	shl    $0x3,%rax
  35:	48 01 d0             	add    %rdx,%rax
  38:	48 c1 e0 02          	shl    $0x2,%rax
  3c:	48 01 c8             	add    %rcx,%rax
  3f:	48 8d 90 96 02 00 00 	lea    0x296(%rax),%rdx
  46:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
  4a:	88 02                	mov    %al,(%rdx)
  4c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  50:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  53:	48 89 d0             	mov    %rdx,%rax
  56:	48 c1 e0 03          	shl    $0x3,%rax
  5a:	48 01 d0             	add    %rdx,%rax
  5d:	48 c1 e0 02          	shl    $0x2,%rax
  61:	48 01 c8             	add    %rcx,%rax
  64:	48 05 92 02 00 00    	add    $0x292,%rax
  6a:	0f b7 00             	movzwl (%rax),%eax
  6d:	0f b7 c8             	movzwl %ax,%ecx
  70:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  77:	89 ce                	mov    %ecx,%esi
  79:	48 89 c7             	mov    %rax,%rdi
  7c:	e8 00 00 00 00       	call   81 <ArtNetNode::SetSubnetSwitch(unsigned int, unsigned char)+0x81>
  81:	89 c2                	mov    %eax,%edx
  83:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  87:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  8a:	48 89 c8             	mov    %rcx,%rax
  8d:	48 c1 e0 03          	shl    $0x3,%rax
  91:	48 01 c8             	add    %rcx,%rax
  94:	48 c1 e0 02          	shl    $0x2,%rax
  98:	48 01 f0             	add    %rsi,%rax
  9b:	48 05 92 02 00 00    	add    $0x292,%rax
  a1:	66 89 10             	mov    %dx,(%rax)
  a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a8:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  af:	48 85 c0             	test   %rax,%rax
  b2:	74 3e                	je     f2 <ArtNetNode::SetSubnetSwitch(unsigned int, unsigned char)+0xf2>
  b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b8:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  bf:	3c 02                	cmp    $0x2,%al
  c1:	75 2f                	jne    f2 <ArtNetNode::SetSubnetSwitch(unsigned int, unsigned char)+0xf2>
  c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c7:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  d2:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
  d9:	48 8b 12             	mov    (%rdx),%rdx
  dc:	48 83 c2 30          	add    $0x30,%rdx
  e0:	4c 8b 02             	mov    (%rdx),%r8
  e3:	0f b6 55 e0          	movzbl -0x20(%rbp),%edx
  e7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  ea:	89 ce                	mov    %ecx,%esi
  ec:	48 89 c7             	mov    %rax,%rdi
  ef:	41 ff d0             	call   *%r8
  f2:	90                   	nop
  f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  f7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  fe:	00 00 
 100:	74 05                	je     107 <ArtNetNode::SetSubnetSwitch(unsigned int, unsigned char)+0x107>
 102:	e8 00 00 00 00       	call   107 <ArtNetNode::SetSubnetSwitch(unsigned int, unsigned char)+0x107>
 107:	c9                   	leave  
 108:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode12SetNetSwitchEjh:

0000000000000000 <ArtNetNode::SetNetSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 e0             	mov    %al,-0x20(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  2b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  2e:	48 89 d0             	mov    %rdx,%rax
  31:	48 c1 e0 03          	shl    $0x3,%rax
  35:	48 01 d0             	add    %rdx,%rax
  38:	48 c1 e0 02          	shl    $0x2,%rax
  3c:	48 01 c8             	add    %rcx,%rax
  3f:	48 8d 90 95 02 00 00 	lea    0x295(%rax),%rdx
  46:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
  4a:	88 02                	mov    %al,(%rdx)
  4c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  50:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  53:	48 89 d0             	mov    %rdx,%rax
  56:	48 c1 e0 03          	shl    $0x3,%rax
  5a:	48 01 d0             	add    %rdx,%rax
  5d:	48 c1 e0 02          	shl    $0x2,%rax
  61:	48 01 c8             	add    %rcx,%rax
  64:	48 05 92 02 00 00    	add    $0x292,%rax
  6a:	0f b7 00             	movzwl (%rax),%eax
  6d:	0f b7 c8             	movzwl %ax,%ecx
  70:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  77:	89 ce                	mov    %ecx,%esi
  79:	48 89 c7             	mov    %rax,%rdi
  7c:	e8 00 00 00 00       	call   81 <ArtNetNode::SetNetSwitch(unsigned int, unsigned char)+0x81>
  81:	89 c2                	mov    %eax,%edx
  83:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  87:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  8a:	48 89 c8             	mov    %rcx,%rax
  8d:	48 c1 e0 03          	shl    $0x3,%rax
  91:	48 01 c8             	add    %rcx,%rax
  94:	48 c1 e0 02          	shl    $0x2,%rax
  98:	48 01 f0             	add    %rsi,%rax
  9b:	48 05 92 02 00 00    	add    $0x292,%rax
  a1:	66 89 10             	mov    %dx,(%rax)
  a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a8:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  af:	48 85 c0             	test   %rax,%rax
  b2:	74 3e                	je     f2 <ArtNetNode::SetNetSwitch(unsigned int, unsigned char)+0xf2>
  b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b8:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  bf:	3c 02                	cmp    $0x2,%al
  c1:	75 2f                	jne    f2 <ArtNetNode::SetNetSwitch(unsigned int, unsigned char)+0xf2>
  c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c7:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  d2:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
  d9:	48 8b 12             	mov    (%rdx),%rdx
  dc:	48 83 c2 28          	add    $0x28,%rdx
  e0:	4c 8b 02             	mov    (%rdx),%r8
  e3:	0f b6 55 e0          	movzbl -0x20(%rbp),%edx
  e7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  ea:	89 ce                	mov    %ecx,%esi
  ec:	48 89 c7             	mov    %rax,%rdi
  ef:	41 ff d0             	call   *%r8
  f2:	90                   	nop
  f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  f7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  fe:	00 00 
 100:	74 05                	je     107 <ArtNetNode::SetNetSwitch(unsigned int, unsigned char)+0x107>
 102:	e8 00 00 00 00       	call   107 <ArtNetNode::SetNetSwitch(unsigned int, unsigned char)+0x107>
 107:	c9                   	leave  
 108:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode12SetMergeModeEjN8lightset9MergeModeE:

0000000000000000 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	83 7d e0 01          	cmpl   $0x1,-0x20(%rbp)
  29:	75 34                	jne    5f <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x5f>
  2b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  2f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  32:	48 c1 e0 05          	shl    $0x5,%rax
  36:	48 01 d0             	add    %rdx,%rax
  39:	48 05 80 03 00 00    	add    $0x380,%rax
  3f:	0f b6 00             	movzbl (%rax),%eax
  42:	83 c8 02             	or     $0x2,%eax
  45:	89 c2                	mov    %eax,%edx
  47:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4e:	48 c1 e0 05          	shl    $0x5,%rax
  52:	48 01 c8             	add    %rcx,%rax
  55:	48 05 80 03 00 00    	add    $0x380,%rax
  5b:	88 10                	mov    %dl,(%rax)
  5d:	eb 32                	jmp    91 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x91>
  5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  63:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  66:	48 c1 e0 05          	shl    $0x5,%rax
  6a:	48 01 d0             	add    %rdx,%rax
  6d:	48 05 80 03 00 00    	add    $0x380,%rax
  73:	0f b6 00             	movzbl (%rax),%eax
  76:	83 e0 fd             	and    $0xfffffffd,%eax
  79:	89 c2                	mov    %eax,%edx
  7b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  7f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  82:	48 c1 e0 05          	shl    $0x5,%rax
  86:	48 01 c8             	add    %rcx,%rax
  89:	48 05 80 03 00 00    	add    $0x380,%rax
  8f:	88 10                	mov    %dl,(%rax)
  91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  95:	8b 55 e0             	mov    -0x20(%rbp),%edx
  98:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  9b:	89 ce                	mov    %ecx,%esi
  9d:	48 89 c7             	mov    %rax,%rdi
  a0:	e8 00 00 00 00       	call   a5 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0xa5>
  a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a9:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  b0:	3c 02                	cmp    $0x2,%al
  b2:	75 4d                	jne    101 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x101>
  b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b8:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  bf:	48 85 c0             	test   %rax,%rax
  c2:	74 2e                	je     f2 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0xf2>
  c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c8:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  d3:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
  da:	48 8b 12             	mov    (%rdx),%rdx
  dd:	48 83 c2 38          	add    $0x38,%rdx
  e1:	4c 8b 02             	mov    (%rdx),%r8
  e4:	8b 55 e0             	mov    -0x20(%rbp),%edx
  e7:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  ea:	89 ce                	mov    %ecx,%esi
  ec:	48 89 c7             	mov    %rax,%rdi
  ef:	41 ff d0             	call   *%r8
  f2:	8b 55 e0             	mov    -0x20(%rbp),%edx
  f5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  f8:	89 d6                	mov    %edx,%esi
  fa:	89 c7                	mov    %eax,%edi
  fc:	e8 00 00 00 00       	call   101 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x101>
 101:	90                   	nop
 102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 106:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 10d:	00 00 
 10f:	74 05                	je     116 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x116>
 111:	e8 00 00 00 00       	call   116 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x116>
 116:	c9                   	leave  
 117:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode11SetFailSafeEN10artnetnode8FailSafeE:

0000000000000000 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e4             	mov    %al,-0x1c(%rbp)
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	31 c0                	xor    %eax,%eax
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	0f b6 80 f1 04 00 00 	movzbl 0x4f1(%rax),%eax
  2f:	83 e0 3f             	and    $0x3f,%eax
  32:	89 c2                	mov    %eax,%edx
  34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  38:	88 90 f1 04 00 00    	mov    %dl,0x4f1(%rax)
  3e:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  42:	83 e8 08             	sub    $0x8,%eax
  45:	0f b6 c0             	movzbl %al,%eax
  48:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4f:	00 
  50:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 57 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x57>
  57:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  5a:	48 98                	cltq   
  5c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 63 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x63>
  63:	48 01 d0             	add    %rdx,%rax
  66:	3e ff e0             	notrack jmp *%rax
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	0f b6 90 f1 04 00 00 	movzbl 0x4f1(%rax),%edx
  74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  78:	88 90 f1 04 00 00    	mov    %dl,0x4f1(%rax)
  7e:	eb 39                	jmp    b9 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0xb9>
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  84:	0f b6 80 f1 04 00 00 	movzbl 0x4f1(%rax),%eax
  8b:	83 c8 40             	or     $0x40,%eax
  8e:	89 c2                	mov    %eax,%edx
  90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  94:	88 90 f1 04 00 00    	mov    %dl,0x4f1(%rax)
  9a:	eb 1d                	jmp    b9 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0xb9>
  9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a0:	0f b6 80 f1 04 00 00 	movzbl 0x4f1(%rax),%eax
  a7:	83 c8 80             	or     $0xffffff80,%eax
  aa:	89 c2                	mov    %eax,%edx
  ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b0:	88 90 f1 04 00 00    	mov    %dl,0x4f1(%rax)
  b6:	eb 01                	jmp    b9 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0xb9>
  b8:	90                   	nop
  b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bd:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
  c1:	83 e2 03             	and    $0x3,%edx
  c4:	89 d6                	mov    %edx,%esi
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	e8 00 00 00 00       	call   ce <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0xce>
  ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d2:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  d9:	3c 02                	cmp    $0x2,%al
  db:	75 50                	jne    12d <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x12d>
  dd:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  e1:	83 e0 03             	and    $0x3,%eax
  e4:	88 45 f7             	mov    %al,-0x9(%rbp)
  e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  eb:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  f2:	48 85 c0             	test   %rax,%rax
  f5:	74 2b                	je     122 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x122>
  f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  fb:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
 102:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 106:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
 10d:	48 8b 12             	mov    (%rdx),%rdx
 110:	48 83 c2 58          	add    $0x58,%rdx
 114:	48 8b 0a             	mov    (%rdx),%rcx
 117:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 11b:	89 d6                	mov    %edx,%esi
 11d:	48 89 c7             	mov    %rax,%rdi
 120:	ff d1                	call   *%rcx
 122:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 126:	89 c7                	mov    %eax,%edi
 128:	e8 00 00 00 00       	call   12d <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x12d>
 12d:	90                   	nop
 12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 132:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 139:	00 00 
 13b:	74 05                	je     142 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x142>
 13d:	e8 00 00 00 00       	call   142 <ArtNetNode::SetFailSafe(artnetnode::FailSafe)+0x142>
 142:	c9                   	leave  
 143:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode13HandleAddressEv:

0000000000000000 <ArtNetNode::HandleAddress()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  32:	c6 80 58 03 00 00 01 	movb   $0x1,0x358(%rax)
  39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  3d:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
  41:	84 c0                	test   %al,%al
  43:	74 10                	je     55 <ArtNetNode::HandleAddress()+0x55>
  45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  49:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
  4d:	0f b6 c0             	movzbl %al,%eax
  50:	83 e8 01             	sub    $0x1,%eax
  53:	eb 05                	jmp    5a <ArtNetNode::HandleAddress()+0x5a>
  55:	b8 00 00 00 00       	mov    $0x0,%eax
  5a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  61:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
  65:	84 c0                	test   %al,%al
  67:	74 24                	je     8d <ArtNetNode::HandleAddress()+0x8d>
  69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6d:	48 8d 50 0e          	lea    0xe(%rax),%rdx
  71:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  78:	89 ce                	mov    %ecx,%esi
  7a:	48 89 c7             	mov    %rax,%rdi
  7d:	e8 00 00 00 00       	call   82 <ArtNetNode::HandleAddress()+0x82>
  82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  86:	c6 80 58 03 00 00 06 	movb   $0x6,0x358(%rax)
  8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  91:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  95:	84 c0                	test   %al,%al
  97:	74 22                	je     bb <ArtNetNode::HandleAddress()+0xbb>
  99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  9d:	48 8d 50 20          	lea    0x20(%rax),%rdx
  a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a5:	48 89 d6             	mov    %rdx,%rsi
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <ArtNetNode::HandleAddress()+0xb0>
  b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b4:	c6 80 58 03 00 00 07 	movb   $0x7,0x358(%rax)
  bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  bf:	0f b6 40 68          	movzbl 0x68(%rax),%eax
  c3:	84 c0                	test   %al,%al
  c5:	75 18                	jne    df <ArtNetNode::HandleAddress()+0xdf>
  c7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ce:	ba 00 00 00 00       	mov    $0x0,%edx
  d3:	89 ce                	mov    %ecx,%esi
  d5:	48 89 c7             	mov    %rax,%rdi
  d8:	e8 00 00 00 00       	call   dd <ArtNetNode::HandleAddress()+0xdd>
  dd:	eb 2d                	jmp    10c <ArtNetNode::HandleAddress()+0x10c>
  df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e3:	0f b6 40 68          	movzbl 0x68(%rax),%eax
  e7:	84 c0                	test   %al,%al
  e9:	79 21                	jns    10c <ArtNetNode::HandleAddress()+0x10c>
  eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ef:	0f b6 40 68          	movzbl 0x68(%rax),%eax
  f3:	0f b6 c0             	movzbl %al,%eax
  f6:	83 e0 7f             	and    $0x7f,%eax
  f9:	89 c2                	mov    %eax,%edx
  fb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 102:	89 ce                	mov    %ecx,%esi
 104:	48 89 c7             	mov    %rax,%rdi
 107:	e8 00 00 00 00       	call   10c <ArtNetNode::HandleAddress()+0x10c>
 10c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 110:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
 114:	84 c0                	test   %al,%al
 116:	75 18                	jne    130 <ArtNetNode::HandleAddress()+0x130>
 118:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 11b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 11f:	ba 00 00 00 00       	mov    $0x0,%edx
 124:	89 ce                	mov    %ecx,%esi
 126:	48 89 c7             	mov    %rax,%rdi
 129:	e8 00 00 00 00       	call   12e <ArtNetNode::HandleAddress()+0x12e>
 12e:	eb 2d                	jmp    15d <ArtNetNode::HandleAddress()+0x15d>
 130:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 134:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
 138:	84 c0                	test   %al,%al
 13a:	79 21                	jns    15d <ArtNetNode::HandleAddress()+0x15d>
 13c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 140:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
 144:	0f b6 c0             	movzbl %al,%eax
 147:	83 e0 7f             	and    $0x7f,%eax
 14a:	89 c2                	mov    %eax,%edx
 14c:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 14f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 153:	89 ce                	mov    %ecx,%esi
 155:	48 89 c7             	mov    %rax,%rdi
 158:	e8 00 00 00 00       	call   15d <ArtNetNode::HandleAddress()+0x15d>
 15d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 161:	0f b6 40 64          	movzbl 0x64(%rax),%eax
 165:	3c 7f                	cmp    $0x7f,%al
 167:	74 7e                	je     1e7 <ArtNetNode::HandleAddress()+0x1e7>
 169:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 16d:	8b 55 ec             	mov    -0x14(%rbp),%edx
 170:	48 89 d0             	mov    %rdx,%rax
 173:	48 c1 e0 03          	shl    $0x3,%rax
 177:	48 01 d0             	add    %rdx,%rax
 17a:	48 c1 e0 02          	shl    $0x2,%rax
 17e:	48 01 c8             	add    %rcx,%rax
 181:	48 05 98 02 00 00    	add    $0x298,%rax
 187:	8b 00                	mov    (%rax),%eax
 189:	83 f8 01             	cmp    $0x1,%eax
 18c:	75 59                	jne    1e7 <ArtNetNode::HandleAddress()+0x1e7>
 18e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 192:	0f b6 40 64          	movzbl 0x64(%rax),%eax
 196:	84 c0                	test   %al,%al
 198:	75 1b                	jne    1b5 <ArtNetNode::HandleAddress()+0x1b5>
 19a:	8b 75 ec             	mov    -0x14(%rbp),%esi
 19d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1a1:	b9 01 00 00 00       	mov    $0x1,%ecx
 1a6:	ba 01 00 00 00       	mov    $0x1,%edx
 1ab:	48 89 c7             	mov    %rax,%rdi
 1ae:	e8 00 00 00 00       	call   1b3 <ArtNetNode::HandleAddress()+0x1b3>
 1b3:	eb 32                	jmp    1e7 <ArtNetNode::HandleAddress()+0x1e7>
 1b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1b9:	0f b6 40 64          	movzbl 0x64(%rax),%eax
 1bd:	84 c0                	test   %al,%al
 1bf:	79 26                	jns    1e7 <ArtNetNode::HandleAddress()+0x1e7>
 1c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1c5:	0f b6 40 64          	movzbl 0x64(%rax),%eax
 1c9:	0f b6 c0             	movzbl %al,%eax
 1cc:	83 e0 7f             	and    $0x7f,%eax
 1cf:	89 c2                	mov    %eax,%edx
 1d1:	8b 75 ec             	mov    -0x14(%rbp),%esi
 1d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1d8:	89 d1                	mov    %edx,%ecx
 1da:	ba 01 00 00 00       	mov    $0x1,%edx
 1df:	48 89 c7             	mov    %rax,%rdi
 1e2:	e8 00 00 00 00       	call   1e7 <ArtNetNode::HandleAddress()+0x1e7>
 1e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1eb:	0f b6 40 60          	movzbl 0x60(%rax),%eax
 1ef:	3c 7f                	cmp    $0x7f,%al
 1f1:	74 7d                	je     270 <ArtNetNode::HandleAddress()+0x270>
 1f3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 1f7:	8b 55 ec             	mov    -0x14(%rbp),%edx
 1fa:	48 89 d0             	mov    %rdx,%rax
 1fd:	48 c1 e0 03          	shl    $0x3,%rax
 201:	48 01 d0             	add    %rdx,%rax
 204:	48 c1 e0 02          	shl    $0x2,%rax
 208:	48 01 c8             	add    %rcx,%rax
 20b:	48 05 98 02 00 00    	add    $0x298,%rax
 211:	8b 00                	mov    (%rax),%eax
 213:	85 c0                	test   %eax,%eax
 215:	75 59                	jne    270 <ArtNetNode::HandleAddress()+0x270>
 217:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 21b:	0f b6 40 60          	movzbl 0x60(%rax),%eax
 21f:	84 c0                	test   %al,%al
 221:	75 1b                	jne    23e <ArtNetNode::HandleAddress()+0x23e>
 223:	8b 75 ec             	mov    -0x14(%rbp),%esi
 226:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 22a:	b9 01 00 00 00       	mov    $0x1,%ecx
 22f:	ba 00 00 00 00       	mov    $0x0,%edx
 234:	48 89 c7             	mov    %rax,%rdi
 237:	e8 00 00 00 00       	call   23c <ArtNetNode::HandleAddress()+0x23c>
 23c:	eb 32                	jmp    270 <ArtNetNode::HandleAddress()+0x270>
 23e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 242:	0f b6 40 60          	movzbl 0x60(%rax),%eax
 246:	84 c0                	test   %al,%al
 248:	79 26                	jns    270 <ArtNetNode::HandleAddress()+0x270>
 24a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 24e:	0f b6 40 60          	movzbl 0x60(%rax),%eax
 252:	0f b6 c0             	movzbl %al,%eax
 255:	83 e0 7f             	and    $0x7f,%eax
 258:	89 c2                	mov    %eax,%edx
 25a:	8b 75 ec             	mov    -0x14(%rbp),%esi
 25d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 261:	89 d1                	mov    %edx,%ecx
 263:	ba 00 00 00 00       	mov    $0x0,%edx
 268:	48 89 c7             	mov    %rax,%rdi
 26b:	e8 00 00 00 00       	call   270 <ArtNetNode::HandleAddress()+0x270>
 270:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 274:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
 278:	0f b6 c0             	movzbl %al,%eax
 27b:	3d d3 00 00 00       	cmp    $0xd3,%eax
 280:	0f 8f 5d 03 00 00    	jg     5e3 <ArtNetNode::HandleAddress()+0x5e3>
 286:	3d d0 00 00 00       	cmp    $0xd0,%eax
 28b:	0f 8d 3a 03 00 00    	jge    5cb <ArtNetNode::HandleAddress()+0x5cb>
 291:	3d c3 00 00 00       	cmp    $0xc3,%eax
 296:	0f 8f 47 03 00 00    	jg     5e3 <ArtNetNode::HandleAddress()+0x5e3>
 29c:	3d c0 00 00 00       	cmp    $0xc0,%eax
 2a1:	0f 8d 0c 03 00 00    	jge    5b3 <ArtNetNode::HandleAddress()+0x5b3>
 2a7:	83 f8 73             	cmp    $0x73,%eax
 2aa:	7f 34                	jg     2e0 <ArtNetNode::HandleAddress()+0x2e0>
 2ac:	85 c0                	test   %eax,%eax
 2ae:	0f 88 2f 03 00 00    	js     5e3 <ArtNetNode::HandleAddress()+0x5e3>
 2b4:	83 f8 73             	cmp    $0x73,%eax
 2b7:	0f 87 26 03 00 00    	ja     5e3 <ArtNetNode::HandleAddress()+0x5e3>
 2bd:	89 c0                	mov    %eax,%eax
 2bf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 2c6:	00 
 2c7:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2ce <ArtNetNode::HandleAddress()+0x2ce>
 2ce:	8b 04 02             	mov    (%rdx,%rax,1),%eax
 2d1:	48 98                	cltq   
 2d3:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2da <ArtNetNode::HandleAddress()+0x2da>
 2da:	48 01 d0             	add    %rdx,%rax
 2dd:	3e ff e0             	notrack jmp *%rax
 2e0:	2d 90 00 00 00       	sub    $0x90,%eax
 2e5:	83 f8 03             	cmp    $0x3,%eax
 2e8:	0f 87 f5 02 00 00    	ja     5e3 <ArtNetNode::HandleAddress()+0x5e3>
 2ee:	e9 4c 02 00 00       	jmp    53f <ArtNetNode::HandleAddress()+0x53f>
 2f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2f7:	c6 80 5e 03 00 00 00 	movb   $0x0,0x35e(%rax)
 2fe:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 305:	eb 6e                	jmp    375 <ArtNetNode::HandleAddress()+0x375>
 307:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 30b:	8b 45 e8             	mov    -0x18(%rbp),%eax
 30e:	48 83 c0 1b          	add    $0x1b,%rax
 312:	48 c1 e0 05          	shl    $0x5,%rax
 316:	48 01 d0             	add    %rdx,%rax
 319:	48 83 c0 0c          	add    $0xc,%rax
 31d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 323:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 327:	8b 45 e8             	mov    -0x18(%rbp),%eax
 32a:	48 83 c0 1b          	add    $0x1b,%rax
 32e:	48 c1 e0 05          	shl    $0x5,%rax
 332:	48 01 d0             	add    %rdx,%rax
 335:	48 83 c0 18          	add    $0x18,%rax
 339:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 33f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 343:	8b 45 e8             	mov    -0x18(%rbp),%eax
 346:	48 c1 e0 05          	shl    $0x5,%rax
 34a:	48 01 d0             	add    %rdx,%rax
 34d:	48 05 80 03 00 00    	add    $0x380,%rax
 353:	0f b6 00             	movzbl (%rax),%eax
 356:	83 e0 f7             	and    $0xfffffff7,%eax
 359:	89 c2                	mov    %eax,%edx
 35b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 35f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 362:	48 c1 e0 05          	shl    $0x5,%rax
 366:	48 01 c8             	add    %rcx,%rax
 369:	48 05 80 03 00 00    	add    $0x380,%rax
 36f:	88 10                	mov    %dl,(%rax)
 371:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 375:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
 379:	76 8c                	jbe    307 <ArtNetNode::HandleAddress()+0x307>
 37b:	e9 67 02 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 380:	e8 00 00 00 00       	call   385 <ArtNetNode::HandleAddress()+0x385>
 385:	ba 00 00 00 00       	mov    $0x0,%edx
 38a:	be 02 00 00 00       	mov    $0x2,%esi
 38f:	48 89 c7             	mov    %rax,%rdi
 392:	e8 00 00 00 00       	call   397 <ArtNetNode::HandleAddress()+0x397>
 397:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 39b:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
 3a2:	83 c8 c0             	or     $0xffffffc0,%eax
 3a5:	89 c2                	mov    %eax,%edx
 3a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3ab:	88 90 2f 04 00 00    	mov    %dl,0x42f(%rax)
 3b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3b5:	be 01 00 00 00       	mov    $0x1,%esi
 3ba:	48 89 c7             	mov    %rax,%rdi
 3bd:	e8 00 00 00 00       	call   3c2 <ArtNetNode::HandleAddress()+0x3c2>
 3c2:	e9 20 02 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 3c7:	e8 00 00 00 00       	call   3cc <ArtNetNode::HandleAddress()+0x3cc>
 3cc:	ba 01 00 00 00       	mov    $0x1,%edx
 3d1:	be 00 00 00 00       	mov    $0x0,%esi
 3d6:	48 89 c7             	mov    %rax,%rdi
 3d9:	e8 00 00 00 00       	call   3de <ArtNetNode::HandleAddress()+0x3de>
 3de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3e2:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
 3e9:	83 e0 3f             	and    $0x3f,%eax
 3ec:	83 c8 80             	or     $0xffffff80,%eax
 3ef:	89 c2                	mov    %eax,%edx
 3f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3f5:	88 90 2f 04 00 00    	mov    %dl,0x42f(%rax)
 3fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3ff:	be 00 00 00 00       	mov    $0x0,%esi
 404:	48 89 c7             	mov    %rax,%rdi
 407:	e8 00 00 00 00       	call   40c <ArtNetNode::HandleAddress()+0x40c>
 40c:	e9 d6 01 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 411:	e8 00 00 00 00       	call   416 <ArtNetNode::HandleAddress()+0x416>
 416:	ba 01 00 00 00       	mov    $0x1,%edx
 41b:	be 04 00 00 00       	mov    $0x4,%esi
 420:	48 89 c7             	mov    %rax,%rdi
 423:	e8 00 00 00 00       	call   428 <ArtNetNode::HandleAddress()+0x428>
 428:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 42c:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
 433:	83 e0 3f             	and    $0x3f,%eax
 436:	83 c8 40             	or     $0x40,%eax
 439:	89 c2                	mov    %eax,%edx
 43b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 43f:	88 90 2f 04 00 00    	mov    %dl,0x42f(%rax)
 445:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 449:	be 00 00 00 00       	mov    $0x0,%esi
 44e:	48 89 c7             	mov    %rax,%rdi
 451:	e8 00 00 00 00       	call   456 <ArtNetNode::HandleAddress()+0x456>
 456:	e9 8c 01 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 45b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 45f:	0f b6 40 6a          	movzbl 0x6a(%rax),%eax
 463:	83 e0 0f             	and    $0xf,%eax
 466:	89 c2                	mov    %eax,%edx
 468:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 46c:	89 d6                	mov    %edx,%esi
 46e:	48 89 c7             	mov    %rax,%rdi
 471:	e8 00 00 00 00       	call   476 <ArtNetNode::HandleAddress()+0x476>
 476:	e9 6c 01 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 47b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 47e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 482:	ba 01 00 00 00       	mov    $0x1,%edx
 487:	89 ce                	mov    %ecx,%esi
 489:	48 89 c7             	mov    %rax,%rdi
 48c:	e8 00 00 00 00       	call   491 <ArtNetNode::HandleAddress()+0x491>
 491:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 495:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 498:	ba 01 00 00 00       	mov    $0x1,%edx
 49d:	89 ce                	mov    %ecx,%esi
 49f:	48 89 c7             	mov    %rax,%rdi
 4a2:	e8 00 00 00 00       	call   4a7 <ArtNetNode::HandleAddress()+0x4a7>
 4a7:	e9 3b 01 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 4ac:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 4af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 4b3:	ba 00 00 00 00       	mov    $0x0,%edx
 4b8:	89 ce                	mov    %ecx,%esi
 4ba:	48 89 c7             	mov    %rax,%rdi
 4bd:	e8 00 00 00 00       	call   4c2 <ArtNetNode::HandleAddress()+0x4c2>
 4c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 4c6:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 4c9:	ba 00 00 00 00       	mov    $0x0,%edx
 4ce:	89 ce                	mov    %ecx,%esi
 4d0:	48 89 c7             	mov    %rax,%rdi
 4d3:	e8 00 00 00 00       	call   4d8 <ArtNetNode::HandleAddress()+0x4d8>
 4d8:	e9 0a 01 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 4dd:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 4e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 4e4:	ba 00 00 00 00       	mov    $0x0,%edx
 4e9:	89 ce                	mov    %ecx,%esi
 4eb:	48 89 c7             	mov    %rax,%rdi
 4ee:	e8 00 00 00 00       	call   4f3 <ArtNetNode::HandleAddress()+0x4f3>
 4f3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 4f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 4fa:	ba 02 00 00 00       	mov    $0x2,%edx
 4ff:	89 ce                	mov    %ecx,%esi
 501:	48 89 c7             	mov    %rax,%rdi
 504:	e8 00 00 00 00       	call   509 <ArtNetNode::HandleAddress()+0x509>
 509:	e9 d9 00 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 50e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 511:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 515:	ba 01 00 00 00       	mov    $0x1,%edx
 51a:	89 ce                	mov    %ecx,%esi
 51c:	48 89 c7             	mov    %rax,%rdi
 51f:	e8 00 00 00 00       	call   524 <ArtNetNode::HandleAddress()+0x524>
 524:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 527:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 52b:	ba 01 00 00 00       	mov    $0x1,%edx
 530:	89 ce                	mov    %ecx,%esi
 532:	48 89 c7             	mov    %rax,%rdi
 535:	e8 00 00 00 00       	call   53a <ArtNetNode::HandleAddress()+0x53a>
 53a:	e9 a8 00 00 00       	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 53f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 543:	8b 55 ec             	mov    -0x14(%rbp),%edx
 546:	48 89 d0             	mov    %rdx,%rax
 549:	48 c1 e0 03          	shl    $0x3,%rax
 54d:	48 01 d0             	add    %rdx,%rax
 550:	48 c1 e0 02          	shl    $0x2,%rax
 554:	48 01 c8             	add    %rcx,%rax
 557:	48 05 9c 02 00 00    	add    $0x29c,%rax
 55d:	8b 00                	mov    (%rax),%eax
 55f:	85 c0                	test   %eax,%eax
 561:	75 18                	jne    57b <ArtNetNode::HandleAddress()+0x57b>
 563:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 567:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 56e:	8b 55 ec             	mov    -0x14(%rbp),%edx
 571:	89 d6                	mov    %edx,%esi
 573:	48 89 c7             	mov    %rax,%rdi
 576:	e8 00 00 00 00       	call   57b <ArtNetNode::HandleAddress()+0x57b>
 57b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 57f:	8b 55 ec             	mov    -0x14(%rbp),%edx
 582:	48 89 d0             	mov    %rdx,%rax
 585:	48 c1 e0 03          	shl    $0x3,%rax
 589:	48 01 d0             	add    %rdx,%rax
 58c:	48 c1 e0 02          	shl    $0x2,%rax
 590:	48 01 c8             	add    %rcx,%rax
 593:	48 05 9c 02 00 00    	add    $0x29c,%rax
 599:	8b 00                	mov    (%rax),%eax
 59b:	83 f8 01             	cmp    $0x1,%eax
 59e:	75 46                	jne    5e6 <ArtNetNode::HandleAddress()+0x5e6>
 5a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 5a4:	8b 55 ec             	mov    -0x14(%rbp),%edx
 5a7:	89 d6                	mov    %edx,%esi
 5a9:	48 89 c7             	mov    %rax,%rdi
 5ac:	e8 00 00 00 00       	call   5b1 <ArtNetNode::HandleAddress()+0x5b1>
 5b1:	eb 33                	jmp    5e6 <ArtNetNode::HandleAddress()+0x5e6>
 5b3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 5b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 5ba:	ba 01 00 00 00       	mov    $0x1,%edx
 5bf:	89 ce                	mov    %ecx,%esi
 5c1:	48 89 c7             	mov    %rax,%rdi
 5c4:	e8 00 00 00 00       	call   5c9 <ArtNetNode::HandleAddress()+0x5c9>
 5c9:	eb 1c                	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 5cb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 5ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 5d2:	ba 00 00 00 00       	mov    $0x0,%edx
 5d7:	89 ce                	mov    %ecx,%esi
 5d9:	48 89 c7             	mov    %rax,%rdi
 5dc:	e8 00 00 00 00       	call   5e1 <ArtNetNode::HandleAddress()+0x5e1>
 5e1:	eb 04                	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 5e3:	90                   	nop
 5e4:	eb 01                	jmp    5e7 <ArtNetNode::HandleAddress()+0x5e7>
 5e6:	90                   	nop
 5e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 5eb:	8b 90 40 02 00 00    	mov    0x240(%rax),%edx
 5f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 5f5:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 5f9:	0f b6 f0             	movzbl %al,%esi
 5fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 600:	b9 00 00 00 00       	mov    $0x0,%ecx
 605:	48 89 c7             	mov    %rax,%rdi
 608:	e8 00 00 00 00       	call   60d <ArtNetNode::HandleAddress()+0x60d>
 60d:	90                   	nop
 60e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 612:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 619:	00 00 
 61b:	74 05                	je     622 <ArtNetNode::HandleAddress()+0x622>
 61d:	e8 00 00 00 00       	call   622 <ArtNetNode::HandleAddress()+0x622>
 622:	c9                   	leave  
 623:	c3                   	ret    

artnetnodehandledmx.o:     file format elf64-x86-64


Disassembly of section .text._ZN8lightset4Data3GetEv:

0000000000000000 <lightset::Data::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 22 <lightset::Data::Get()+0x22>
  22:	84 c0                	test   %al,%al
  24:	0f 94 c0             	sete   %al
  27:	84 c0                	test   %al,%al
  29:	74 36                	je     61 <lightset::Data::Get()+0x61>
  2b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 32 <lightset::Data::Get()+0x32>
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	call   3a <lightset::Data::Get()+0x3a>
  3a:	85 c0                	test   %eax,%eax
  3c:	0f 95 c0             	setne  %al
  3f:	84 c0                	test   %al,%al
  41:	74 1e                	je     61 <lightset::Data::Get()+0x61>
  43:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4a <lightset::Data::Get()+0x4a>
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	call   52 <lightset::Data::Get()+0x52>
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <lightset::Data::Get()+0x59>
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <lightset::Data::Get()+0x61>
  61:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 68 <lightset::Data::Get()+0x68>
  68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  6c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  73:	00 00 
  75:	74 05                	je     7c <lightset::Data::Get()+0x7c>
  77:	e8 00 00 00 00       	call   7c <lightset::Data::Get()+0x7c>
  7c:	c9                   	leave  
  7d:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data10SetSourceAEjPKhj:

0000000000000000 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	89 55 e8             	mov    %edx,-0x18(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x2a>
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  30:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  34:	8b 45 ec             	mov    -0x14(%rbp),%eax
  37:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  3d:	89 c6                	mov    %eax,%esi
  3f:	e8 00 00 00 00       	call   44 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x44>
  44:	90                   	nop
  45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x59>
  54:	e8 00 00 00 00       	call   59 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)+0x59>
  59:	c9                   	leave  
  5a:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data12MergeSourceAEjPKhjNS_9MergeModeE:

0000000000000000 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	89 55 e8             	mov    %edx,-0x18(%rbp)
  16:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  26:	31 c0                	xor    %eax,%eax
  28:	e8 00 00 00 00       	call   2d <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x2d>
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	8b 75 dc             	mov    -0x24(%rbp),%esi
  33:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  36:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  3a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  3d:	41 89 f0             	mov    %esi,%r8d
  40:	89 c6                	mov    %eax,%esi
  42:	e8 00 00 00 00       	call   47 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x47>
  47:	90                   	nop
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  53:	00 00 
  55:	74 05                	je     5c <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x5c>
  57:	e8 00 00 00 00       	call   5c <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x5c>
  5c:	c9                   	leave  
  5d:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data10SetSourceBEjPKhj:

0000000000000000 <lightset::Data::SetSourceB(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	89 55 e8             	mov    %edx,-0x18(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <lightset::Data::SetSourceB(unsigned int, unsigned char const*, unsigned int)+0x2a>
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  30:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  34:	8b 45 ec             	mov    -0x14(%rbp),%eax
  37:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  3d:	89 c6                	mov    %eax,%esi
  3f:	e8 00 00 00 00       	call   44 <lightset::Data::SetSourceB(unsigned int, unsigned char const*, unsigned int)+0x44>
  44:	90                   	nop
  45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <lightset::Data::SetSourceB(unsigned int, unsigned char const*, unsigned int)+0x59>
  54:	e8 00 00 00 00       	call   59 <lightset::Data::SetSourceB(unsigned int, unsigned char const*, unsigned int)+0x59>
  59:	c9                   	leave  
  5a:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data12MergeSourceBEjPKhjNS_9MergeModeE:

0000000000000000 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	89 55 e8             	mov    %edx,-0x18(%rbp)
  16:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  26:	31 c0                	xor    %eax,%eax
  28:	e8 00 00 00 00       	call   2d <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x2d>
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	8b 75 dc             	mov    -0x24(%rbp),%esi
  33:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  36:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  3a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  3d:	41 89 f0             	mov    %esi,%r8d
  40:	89 c6                	mov    %eax,%esi
  42:	e8 00 00 00 00       	call   47 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x47>
  47:	90                   	nop
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  53:	00 00 
  55:	74 05                	je     5c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x5c>
  57:	e8 00 00 00 00       	call   5c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x5c>
  5c:	c9                   	leave  
  5d:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data3SetEP8LightSetj:

0000000000000000 <lightset::Data::Set(LightSet*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	e8 00 00 00 00       	call   27 <lightset::Data::Set(LightSet*, unsigned int)+0x27>
  27:	48 89 c1             	mov    %rax,%rcx
  2a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 89 cf             	mov    %rcx,%rdi
  37:	e8 00 00 00 00       	call   3c <lightset::Data::Set(LightSet*, unsigned int)+0x3c>
  3c:	90                   	nop
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  48:	00 00 
  4a:	74 05                	je     51 <lightset::Data::Set(LightSet*, unsigned int)+0x51>
  4c:	e8 00 00 00 00       	call   51 <lightset::Data::Set(LightSet*, unsigned int)+0x51>
  51:	c9                   	leave  
  52:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data6OutputEP8LightSetj:

0000000000000000 <lightset::Data::Output(LightSet*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	e8 00 00 00 00       	call   27 <lightset::Data::Output(LightSet*, unsigned int)+0x27>
  27:	48 89 c1             	mov    %rax,%rcx
  2a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 89 cf             	mov    %rcx,%rdi
  37:	e8 00 00 00 00       	call   3c <lightset::Data::Output(LightSet*, unsigned int)+0x3c>
  3c:	90                   	nop
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  48:	00 00 
  4a:	74 05                	je     51 <lightset::Data::Output(LightSet*, unsigned int)+0x51>
  4c:	e8 00 00 00 00       	call   51 <lightset::Data::Output(LightSet*, unsigned int)+0x51>
  51:	c9                   	leave  
  52:	c3                   	ret    

Disassembly of section .text._ZN8lightset4DataC2Ev:

0000000000000000 <lightset::Data::Data()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	90                   	nop
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  2b:	00 00 
  2d:	74 05                	je     34 <lightset::Data::Data()+0x34>
  2f:	e8 00 00 00 00       	call   34 <lightset::Data::Data()+0x34>
  34:	c9                   	leave  
  35:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data13IMergeSourceAEjPKhjNS_9MergeModeE:

0000000000000000 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  1a:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
  1e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  25:	00 00 
  27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2b:	31 c0                	xor    %eax,%eax
  2d:	8b 55 e0             	mov    -0x20(%rbp),%edx
  30:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  33:	48 69 c8 04 06 00 00 	imul   $0x604,%rax,%rcx
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	48 01 c1             	add    %rax,%rcx
  41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  45:	48 89 c6             	mov    %rax,%rsi
  48:	48 89 cf             	mov    %rcx,%rdi
  4b:	e8 00 00 00 00       	call   50 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x50>
  50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  54:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  57:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  5e:	48 01 d0             	add    %rdx,%rax
  61:	48 8d 90 00 06 00 00 	lea    0x600(%rax),%rdx
  68:	8b 45 e0             	mov    -0x20(%rbp),%eax
  6b:	89 02                	mov    %eax,(%rdx)
  6d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  71:	0f 85 81 00 00 00    	jne    f8 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0xf8>
  77:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  7e:	eb 6e                	jmp    ee <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0xee>
  80:	8b 55 f4             	mov    -0xc(%rbp),%edx
  83:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  86:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  8d:	48 01 d0             	add    %rdx,%rax
  90:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
  97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9b:	48 01 c2             	add    %rax,%rdx
  9e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  a1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  a4:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  ab:	48 01 c1             	add    %rax,%rcx
  ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b2:	48 01 c8             	add    %rcx,%rax
  b5:	48 89 d6             	mov    %rdx,%rsi
  b8:	48 89 c7             	mov    %rax,%rdi
  bb:	e8 00 00 00 00       	call   c0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0xc0>
  c0:	0f b6 00             	movzbl (%rax),%eax
  c3:	88 45 f3             	mov    %al,-0xd(%rbp)
  c6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  ca:	8b 55 f4             	mov    -0xc(%rbp),%edx
  cd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  d0:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  d7:	48 01 c8             	add    %rcx,%rax
  da:	48 01 d0             	add    %rdx,%rax
  dd:	48 8d 90 00 04 00 00 	lea    0x400(%rax),%rdx
  e4:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
  e8:	88 02                	mov    %al,(%rdx)
  ea:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  ee:	8b 45 f4             	mov    -0xc(%rbp),%eax
  f1:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  f4:	72 8a                	jb     80 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x80>
  f6:	eb 2a                	jmp    122 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x122>
  f8:	8b 55 e0             	mov    -0x20(%rbp),%edx
  fb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  fe:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
 105:	48 8d 88 00 04 00 00 	lea    0x400(%rax),%rcx
 10c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 110:	48 01 c1             	add    %rax,%rcx
 113:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 117:	48 89 c6             	mov    %rax,%rsi
 11a:	48 89 cf             	mov    %rcx,%rdi
 11d:	e8 00 00 00 00       	call   122 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x122>
 122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 126:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 12d:	00 00 
 12f:	74 05                	je     136 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x136>
 131:	e8 00 00 00 00       	call   136 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x136>
 136:	c9                   	leave  
 137:	c3                   	ret    

Disassembly of section .text._ZN8lightset4Data13IMergeSourceBEjPKhjNS_9MergeModeE:

0000000000000000 <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  1a:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
  1e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  25:	00 00 
  27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2b:	31 c0                	xor    %eax,%eax
  2d:	8b 55 e0             	mov    -0x20(%rbp),%edx
  30:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  33:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  3a:	48 8d 88 00 02 00 00 	lea    0x200(%rax),%rcx
  41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  45:	48 01 c1             	add    %rax,%rcx
  48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4c:	48 89 c6             	mov    %rax,%rsi
  4f:	48 89 cf             	mov    %rcx,%rdi
  52:	e8 00 00 00 00       	call   57 <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x57>
  57:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  5b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  5e:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  65:	48 01 d0             	add    %rdx,%rax
  68:	48 8d 90 00 06 00 00 	lea    0x600(%rax),%rdx
  6f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  72:	89 02                	mov    %eax,(%rdx)
  74:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  78:	0f 85 81 00 00 00    	jne    ff <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0xff>
  7e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  85:	eb 6e                	jmp    f5 <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0xf5>
  87:	8b 55 f4             	mov    -0xc(%rbp),%edx
  8a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  8d:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  94:	48 01 d0             	add    %rdx,%rax
  97:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
  9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a2:	48 01 c2             	add    %rax,%rdx
  a5:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  a8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  ab:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  b2:	48 01 c1             	add    %rax,%rcx
  b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b9:	48 01 c8             	add    %rcx,%rax
  bc:	48 89 d6             	mov    %rdx,%rsi
  bf:	48 89 c7             	mov    %rax,%rdi
  c2:	e8 00 00 00 00       	call   c7 <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0xc7>
  c7:	0f b6 00             	movzbl (%rax),%eax
  ca:	88 45 f3             	mov    %al,-0xd(%rbp)
  cd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  d1:	8b 55 f4             	mov    -0xc(%rbp),%edx
  d4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  d7:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  de:	48 01 c8             	add    %rcx,%rax
  e1:	48 01 d0             	add    %rdx,%rax
  e4:	48 8d 90 00 04 00 00 	lea    0x400(%rax),%rdx
  eb:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
  ef:	88 02                	mov    %al,(%rdx)
  f1:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  f5:	8b 45 f4             	mov    -0xc(%rbp),%eax
  f8:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  fb:	72 8a                	jb     87 <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x87>
  fd:	eb 2a                	jmp    129 <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x129>
  ff:	8b 55 e0             	mov    -0x20(%rbp),%edx
 102:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 105:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
 10c:	48 8d 88 00 04 00 00 	lea    0x400(%rax),%rcx
 113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 117:	48 01 c1             	add    %rax,%rcx
 11a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 11e:	48 89 c6             	mov    %rax,%rsi
 121:	48 89 cf             	mov    %rcx,%rdi
 124:	e8 00 00 00 00       	call   129 <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x129>
 129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 12d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 134:	00 00 
 136:	74 05                	je     13d <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x13d>
 138:	e8 00 00 00 00       	call   13d <lightset::Data::IMergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x13d>
 13d:	c9                   	leave  
 13e:	c3                   	ret    

Disassembly of section .text._ZNK8lightset4Data4ISetEP8LightSetj:

0000000000000000 <lightset::Data::ISet(LightSet*, unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  2a:	48 8b 00             	mov    (%rax),%rax
  2d:	48 83 c0 20          	add    $0x20,%rax
  31:	4c 8b 08             	mov    (%rax),%r9
  34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  38:	8b 45 dc             	mov    -0x24(%rbp),%eax
  3b:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  42:	48 01 d0             	add    %rdx,%rax
  45:	48 05 00 06 00 00    	add    $0x600,%rax
  4b:	8b 10                	mov    (%rax),%edx
  4d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  50:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  57:	48 8d 88 00 04 00 00 	lea    0x400(%rax),%rcx
  5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  62:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
  66:	8b 75 dc             	mov    -0x24(%rbp),%esi
  69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  6d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  73:	89 d1                	mov    %edx,%ecx
  75:	48 89 fa             	mov    %rdi,%rdx
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	41 ff d1             	call   *%r9
  7e:	90                   	nop
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8a:	00 00 
  8c:	74 05                	je     93 <lightset::Data::ISet(LightSet*, unsigned int) const+0x93>
  8e:	e8 00 00 00 00       	call   93 <lightset::Data::ISet(LightSet*, unsigned int) const+0x93>
  93:	c9                   	leave  
  94:	c3                   	ret    

Disassembly of section .text._ZNK8lightset4Data7IOutputEP8LightSetj:

0000000000000000 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  2a:	48 8b 00             	mov    (%rax),%rax
  2d:	48 83 c0 20          	add    $0x20,%rax
  31:	4c 8b 08             	mov    (%rax),%r9
  34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  38:	8b 45 dc             	mov    -0x24(%rbp),%eax
  3b:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  42:	48 01 d0             	add    %rdx,%rax
  45:	48 05 00 06 00 00    	add    $0x600,%rax
  4b:	8b 10                	mov    (%rax),%edx
  4d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  50:	48 69 c0 04 06 00 00 	imul   $0x604,%rax,%rax
  57:	48 8d 88 00 04 00 00 	lea    0x400(%rax),%rcx
  5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  62:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
  66:	8b 75 dc             	mov    -0x24(%rbp),%esi
  69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  6d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  73:	89 d1                	mov    %edx,%ecx
  75:	48 89 fa             	mov    %rdi,%rdx
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	41 ff d1             	call   *%r9
  7e:	90                   	nop
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8a:	00 00 
  8c:	74 05                	je     93 <lightset::Data::IOutput(LightSet*, unsigned int) const+0x93>
  8e:	e8 00 00 00 00       	call   93 <lightset::Data::IOutput(LightSet*, unsigned int) const+0x93>
  93:	c9                   	leave  
  94:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode8SendDiagEN6artnet13PriorityCodesEPKcz:

0000000000000000 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   f:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
  16:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
  1d:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  24:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  2b:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  32:	84 c0                	test   %al,%al
  34:	74 20                	je     56 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)+0x56>
  36:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  3a:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  3e:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  42:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  46:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  4a:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  4e:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  52:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  56:	89 f0                	mov    %esi,%eax
  58:	88 85 34 ff ff ff    	mov    %al,-0xcc(%rbp)
  5e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  65:	00 00 
  67:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6e:	31 c0                	xor    %eax,%eax
  70:	90                   	nop
  71:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  78:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  7f:	00 00 
  81:	74 05                	je     88 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)+0x88>
  83:	e8 00 00 00 00       	call   88 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)+0x88>
  88:	c9                   	leave  
  89:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode17UpdateMergeStatusEj:

0000000000000000 <ArtNetNode::UpdateMergeStatus(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	0f b6 80 5e 03 00 00 	movzbl 0x35e(%rax),%eax
  2d:	83 f0 01             	xor    $0x1,%eax
  30:	84 c0                	test   %al,%al
  32:	74 16                	je     4a <ArtNetNode::UpdateMergeStatus(unsigned int)+0x4a>
  34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  38:	c6 80 5e 03 00 00 01 	movb   $0x1,0x35e(%rax)
  3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43:	c6 80 5f 03 00 00 01 	movb   $0x1,0x35f(%rax)
  4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  51:	48 c1 e0 05          	shl    $0x5,%rax
  55:	48 01 d0             	add    %rdx,%rax
  58:	48 05 80 03 00 00    	add    $0x380,%rax
  5e:	0f b6 00             	movzbl (%rax),%eax
  61:	83 c8 08             	or     $0x8,%eax
  64:	89 c2                	mov    %eax,%edx
  66:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  6a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  6d:	48 c1 e0 05          	shl    $0x5,%rax
  71:	48 01 c8             	add    %rcx,%rax
  74:	48 05 80 03 00 00    	add    $0x380,%rax
  7a:	88 10                	mov    %dl,(%rax)
  7c:	90                   	nop
  7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  81:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  88:	00 00 
  8a:	74 05                	je     91 <ArtNetNode::UpdateMergeStatus(unsigned int)+0x91>
  8c:	e8 00 00 00 00       	call   91 <ArtNetNode::UpdateMergeStatus(unsigned int)+0x91>
  91:	c9                   	leave  
  92:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode18CheckMergeTimeoutsEj:

0000000000000000 <ArtNetNode::CheckMergeTimeouts(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  26:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
  2c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  30:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  33:	48 83 c2 1b          	add    $0x1b,%rdx
  37:	48 c1 e2 05          	shl    $0x5,%rdx
  3b:	48 01 ca             	add    %rcx,%rdx
  3e:	48 83 c2 08          	add    $0x8,%rdx
  42:	8b 12                	mov    (%rdx),%edx
  44:	29 d0                	sub    %edx,%eax
  46:	89 45 f0             	mov    %eax,-0x10(%rbp)
  49:	81 7d f0 10 27 00 00 	cmpl   $0x2710,-0x10(%rbp)
  50:	76 4e                	jbe    a0 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0xa0>
  52:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  56:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  59:	48 83 c0 1b          	add    $0x1b,%rax
  5d:	48 c1 e0 05          	shl    $0x5,%rax
  61:	48 01 d0             	add    %rdx,%rax
  64:	48 83 c0 0c          	add    $0xc,%rax
  68:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  6e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  72:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  75:	48 c1 e0 05          	shl    $0x5,%rax
  79:	48 01 d0             	add    %rdx,%rax
  7c:	48 05 80 03 00 00    	add    $0x380,%rax
  82:	0f b6 00             	movzbl (%rax),%eax
  85:	83 e0 f7             	and    $0xfffffff7,%eax
  88:	89 c2                	mov    %eax,%edx
  8a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  8e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  91:	48 c1 e0 05          	shl    $0x5,%rax
  95:	48 01 c8             	add    %rcx,%rax
  98:	48 05 80 03 00 00    	add    $0x380,%rax
  9e:	88 10                	mov    %dl,(%rax)
  a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a4:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
  aa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  ae:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  b1:	48 83 c2 1b          	add    $0x1b,%rdx
  b5:	48 c1 e2 05          	shl    $0x5,%rdx
  b9:	48 01 ca             	add    %rcx,%rdx
  bc:	48 83 c2 14          	add    $0x14,%rdx
  c0:	8b 12                	mov    (%rdx),%edx
  c2:	29 d0                	sub    %edx,%eax
  c4:	89 45 f4             	mov    %eax,-0xc(%rbp)
  c7:	81 7d f4 10 27 00 00 	cmpl   $0x2710,-0xc(%rbp)
  ce:	76 4e                	jbe    11e <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x11e>
  d0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  d4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  d7:	48 83 c0 1b          	add    $0x1b,%rax
  db:	48 c1 e0 05          	shl    $0x5,%rax
  df:	48 01 d0             	add    %rdx,%rax
  e2:	48 83 c0 18          	add    $0x18,%rax
  e6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  ec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  f0:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  f3:	48 c1 e0 05          	shl    $0x5,%rax
  f7:	48 01 d0             	add    %rdx,%rax
  fa:	48 05 80 03 00 00    	add    $0x380,%rax
 100:	0f b6 00             	movzbl (%rax),%eax
 103:	83 e0 f7             	and    $0xfffffff7,%eax
 106:	89 c2                	mov    %eax,%edx
 108:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 10c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 10f:	48 c1 e0 05          	shl    $0x5,%rax
 113:	48 01 c8             	add    %rcx,%rax
 116:	48 05 80 03 00 00    	add    $0x380,%rax
 11c:	88 10                	mov    %dl,(%rax)
 11e:	c6 45 eb 00          	movb   $0x0,-0x15(%rbp)
 122:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 129:	eb 37                	jmp    162 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x162>
 12b:	0f b6 55 eb          	movzbl -0x15(%rbp),%edx
 12f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 133:	8b 45 ec             	mov    -0x14(%rbp),%eax
 136:	48 c1 e0 05          	shl    $0x5,%rax
 13a:	48 01 c8             	add    %rcx,%rax
 13d:	48 05 80 03 00 00    	add    $0x380,%rax
 143:	0f b6 00             	movzbl (%rax),%eax
 146:	0f b6 c0             	movzbl %al,%eax
 149:	83 e0 08             	and    $0x8,%eax
 14c:	85 c0                	test   %eax,%eax
 14e:	0f 95 c0             	setne  %al
 151:	0f b6 c0             	movzbl %al,%eax
 154:	09 d0                	or     %edx,%eax
 156:	85 c0                	test   %eax,%eax
 158:	0f 95 c0             	setne  %al
 15b:	88 45 eb             	mov    %al,-0x15(%rbp)
 15e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 162:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
 166:	76 c3                	jbe    12b <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x12b>
 168:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
 16c:	83 f0 01             	xor    $0x1,%eax
 16f:	84 c0                	test   %al,%al
 171:	74 38                	je     1ab <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x1ab>
 173:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 177:	c6 80 5f 03 00 00 01 	movb   $0x1,0x35f(%rax)
 17e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 182:	c6 80 5e 03 00 00 00 	movb   $0x0,0x35e(%rax)
 189:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 18c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 190:	89 d1                	mov    %edx,%ecx
 192:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 199 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x199>
 199:	be 10 00 00 00       	mov    $0x10,%esi
 19e:	48 89 c7             	mov    %rax,%rdi
 1a1:	b8 00 00 00 00       	mov    $0x0,%eax
 1a6:	e8 00 00 00 00       	call   1ab <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x1ab>
 1ab:	90                   	nop
 1ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1b0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1b7:	00 00 
 1b9:	74 05                	je     1c0 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x1c0>
 1bb:	e8 00 00 00 00       	call   1c0 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x1c0>
 1c0:	c9                   	leave  
 1c1:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode9HandleDmxEv:

0000000000000000 <ArtNetNode::HandleDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  32:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  36:	0f b6 c0             	movzbl %al,%eax
  39:	c1 e0 08             	shl    $0x8,%eax
  3c:	0f b7 d0             	movzwl %ax,%edx
  3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  47:	0f b6 c0             	movzbl %al,%eax
  4a:	09 d0                	or     %edx,%eax
  4c:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  53:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5a <ArtNetNode::HandleDmx()+0x5a>
  5a:	48 89 d6             	mov    %rdx,%rsi
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	call   65 <ArtNetNode::HandleDmx()+0x65>
  65:	8b 00                	mov    (%rax),%eax
  67:	89 45 e0             	mov    %eax,-0x20(%rbp)
  6a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  71:	e9 f9 0c 00 00       	jmp    d6f <ArtNetNode::HandleDmx()+0xd6f>
  76:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  7a:	8b 55 dc             	mov    -0x24(%rbp),%edx
  7d:	48 89 d0             	mov    %rdx,%rax
  80:	48 c1 e0 03          	shl    $0x3,%rax
  84:	48 01 d0             	add    %rdx,%rax
  87:	48 c1 e0 02          	shl    $0x2,%rax
  8b:	48 01 c8             	add    %rcx,%rax
  8e:	48 05 98 02 00 00    	add    $0x298,%rax
  94:	8b 00                	mov    (%rax),%eax
  96:	83 f8 01             	cmp    $0x1,%eax
  99:	0f 85 cc 0c 00 00    	jne    d6b <ArtNetNode::HandleDmx()+0xd6b>
  9f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  a3:	8b 55 dc             	mov    -0x24(%rbp),%edx
  a6:	48 89 d0             	mov    %rdx,%rax
  a9:	48 c1 e0 03          	shl    $0x3,%rax
  ad:	48 01 d0             	add    %rdx,%rax
  b0:	48 c1 e0 02          	shl    $0x2,%rax
  b4:	48 01 c8             	add    %rcx,%rax
  b7:	48 05 9c 02 00 00    	add    $0x29c,%rax
  bd:	8b 00                	mov    (%rax),%eax
  bf:	85 c0                	test   %eax,%eax
  c1:	0f 85 a4 0c 00 00    	jne    d6b <ArtNetNode::HandleDmx()+0xd6b>
  c7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  cb:	8b 55 dc             	mov    -0x24(%rbp),%edx
  ce:	48 89 d0             	mov    %rdx,%rax
  d1:	48 c1 e0 03          	shl    $0x3,%rax
  d5:	48 01 d0             	add    %rdx,%rax
  d8:	48 c1 e0 02          	shl    $0x2,%rax
  dc:	48 01 c8             	add    %rcx,%rax
  df:	48 05 92 02 00 00    	add    $0x292,%rax
  e5:	0f b7 10             	movzwl (%rax),%edx
  e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ec:	0f b7 40 0e          	movzwl 0xe(%rax),%eax
  f0:	66 39 c2             	cmp    %ax,%dx
  f3:	0f 85 72 0c 00 00    	jne    d6b <ArtNetNode::HandleDmx()+0xd6b>
  f9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  fd:	8b 45 dc             	mov    -0x24(%rbp),%eax
 100:	48 c1 e0 05          	shl    $0x5,%rax
 104:	48 01 d0             	add    %rdx,%rax
 107:	48 05 80 03 00 00    	add    $0x380,%rax
 10d:	0f b6 00             	movzbl (%rax),%eax
 110:	83 c8 80             	or     $0xffffff80,%eax
 113:	89 c2                	mov    %eax,%edx
 115:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 119:	8b 45 dc             	mov    -0x24(%rbp),%eax
 11c:	48 c1 e0 05          	shl    $0x5,%rax
 120:	48 01 c8             	add    %rcx,%rax
 123:	48 05 80 03 00 00    	add    $0x380,%rax
 129:	88 10                	mov    %dl,(%rax)
 12b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 12f:	0f b6 80 5e 03 00 00 	movzbl 0x35e(%rax),%eax
 136:	84 c0                	test   %al,%al
 138:	74 27                	je     161 <ArtNetNode::HandleDmx()+0x161>
 13a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 13e:	0f b6 80 60 03 00 00 	movzbl 0x360(%rax),%eax
 145:	83 f0 01             	xor    $0x1,%eax
 148:	0f b6 c0             	movzbl %al,%eax
 14b:	48 85 c0             	test   %rax,%rax
 14e:	74 11                	je     161 <ArtNetNode::HandleDmx()+0x161>
 150:	8b 55 dc             	mov    -0x24(%rbp),%edx
 153:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 157:	89 d6                	mov    %edx,%esi
 159:	48 89 c7             	mov    %rax,%rdi
 15c:	e8 00 00 00 00       	call   161 <ArtNetNode::HandleDmx()+0x161>
 161:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 165:	8b 45 dc             	mov    -0x24(%rbp),%eax
 168:	48 83 c0 1b          	add    $0x1b,%rax
 16c:	48 c1 e0 05          	shl    $0x5,%rax
 170:	48 01 d0             	add    %rdx,%rax
 173:	48 83 c0 0c          	add    $0xc,%rax
 177:	8b 00                	mov    (%rax),%eax
 179:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 17c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 180:	8b 45 dc             	mov    -0x24(%rbp),%eax
 183:	48 83 c0 1b          	add    $0x1b,%rax
 187:	48 c1 e0 05          	shl    $0x5,%rax
 18b:	48 01 d0             	add    %rdx,%rax
 18e:	48 83 c0 18          	add    $0x18,%rax
 192:	8b 00                	mov    (%rax),%eax
 194:	89 45 e8             	mov    %eax,-0x18(%rbp)
 197:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 19b:	8b 45 dc             	mov    -0x24(%rbp),%eax
 19e:	48 c1 e0 05          	shl    $0x5,%rax
 1a2:	48 01 d0             	add    %rdx,%rax
 1a5:	48 05 80 03 00 00    	add    $0x380,%rax
 1ab:	0f b6 00             	movzbl (%rax),%eax
 1ae:	0f b6 c0             	movzbl %al,%eax
 1b1:	d1 f8                	sar    %eax
 1b3:	83 e0 01             	and    $0x1,%eax
 1b6:	89 45 ec             	mov    %eax,-0x14(%rbp)
 1b9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
 1bd:	0f 94 c0             	sete   %al
 1c0:	0f b6 c0             	movzbl %al,%eax
 1c3:	48 85 c0             	test   %rax,%rax
 1c6:	74 16                	je     1de <ArtNetNode::HandleDmx()+0x1de>
 1c8:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
 1cc:	0f 94 c0             	sete   %al
 1cf:	0f b6 c0             	movzbl %al,%eax
 1d2:	48 85 c0             	test   %rax,%rax
 1d5:	74 07                	je     1de <ArtNetNode::HandleDmx()+0x1de>
 1d7:	b8 01 00 00 00       	mov    $0x1,%eax
 1dc:	eb 05                	jmp    1e3 <ArtNetNode::HandleDmx()+0x1e3>
 1de:	b8 00 00 00 00       	mov    $0x0,%eax
 1e3:	0f b6 c0             	movzbl %al,%eax
 1e6:	48 85 c0             	test   %rax,%rax
 1e9:	0f 84 b5 00 00 00    	je     2a4 <ArtNetNode::HandleDmx()+0x2a4>
 1ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1f3:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 1f9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 1fd:	8b 55 dc             	mov    -0x24(%rbp),%edx
 200:	48 83 c2 1b          	add    $0x1b,%rdx
 204:	48 c1 e2 05          	shl    $0x5,%rdx
 208:	48 01 ca             	add    %rcx,%rdx
 20b:	48 83 c2 0c          	add    $0xc,%rdx
 20f:	89 02                	mov    %eax,(%rdx)
 211:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 215:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 21b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 21f:	8b 55 dc             	mov    -0x24(%rbp),%edx
 222:	48 83 c2 1b          	add    $0x1b,%rdx
 226:	48 c1 e2 05          	shl    $0x5,%rdx
 22a:	48 01 ca             	add    %rcx,%rdx
 22d:	48 83 c2 08          	add    $0x8,%rdx
 231:	89 02                	mov    %eax,(%rdx)
 233:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 237:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 23b:	0f b6 c0             	movzbl %al,%eax
 23e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 242:	8b 55 dc             	mov    -0x24(%rbp),%edx
 245:	48 83 c2 1b          	add    $0x1b,%rdx
 249:	48 c1 e2 05          	shl    $0x5,%rdx
 24d:	48 01 ca             	add    %rcx,%rdx
 250:	48 83 c2 10          	add    $0x10,%rdx
 254:	66 89 02             	mov    %ax,(%rdx)
 257:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 25b:	48 8d 48 12          	lea    0x12(%rax),%rcx
 25f:	8b 55 e0             	mov    -0x20(%rbp),%edx
 262:	8b 45 dc             	mov    -0x24(%rbp),%eax
 265:	48 89 ce             	mov    %rcx,%rsi
 268:	89 c7                	mov    %eax,%edi
 26a:	e8 00 00 00 00       	call   26f <ArtNetNode::HandleDmx()+0x26f>
 26f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 273:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 277:	0f b6 c8             	movzbl %al,%ecx
 27a:	8b 55 dc             	mov    -0x24(%rbp),%edx
 27d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 281:	41 89 c8             	mov    %ecx,%r8d
 284:	89 d1                	mov    %edx,%ecx
 286:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 28d <ArtNetNode::HandleDmx()+0x28d>
 28d:	be 10 00 00 00       	mov    $0x10,%esi
 292:	48 89 c7             	mov    %rax,%rdi
 295:	b8 00 00 00 00       	mov    $0x0,%eax
 29a:	e8 00 00 00 00       	call   29f <ArtNetNode::HandleDmx()+0x29f>
 29f:	e9 83 09 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 2a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2a8:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 2ae:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
 2b1:	0f 85 ca 01 00 00    	jne    481 <ArtNetNode::HandleDmx()+0x481>
 2b7:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
 2bb:	0f 85 c0 01 00 00    	jne    481 <ArtNetNode::HandleDmx()+0x481>
 2c1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 2c5:	8b 45 dc             	mov    -0x24(%rbp),%eax
 2c8:	48 83 c0 1b          	add    $0x1b,%rax
 2cc:	48 c1 e0 05          	shl    $0x5,%rax
 2d0:	48 01 d0             	add    %rdx,%rax
 2d3:	48 83 c0 10          	add    $0x10,%rax
 2d7:	0f b7 10             	movzwl (%rax),%edx
 2da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2de:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 2e2:	0f b6 c0             	movzbl %al,%eax
 2e5:	66 39 c2             	cmp    %ax,%dx
 2e8:	75 6f                	jne    359 <ArtNetNode::HandleDmx()+0x359>
 2ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2ee:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 2f4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 2f8:	8b 55 dc             	mov    -0x24(%rbp),%edx
 2fb:	48 83 c2 1b          	add    $0x1b,%rdx
 2ff:	48 c1 e2 05          	shl    $0x5,%rdx
 303:	48 01 ca             	add    %rcx,%rdx
 306:	48 83 c2 08          	add    $0x8,%rdx
 30a:	89 02                	mov    %eax,(%rdx)
 30c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 310:	48 8d 48 12          	lea    0x12(%rax),%rcx
 314:	8b 55 e0             	mov    -0x20(%rbp),%edx
 317:	8b 45 dc             	mov    -0x24(%rbp),%eax
 31a:	48 89 ce             	mov    %rcx,%rsi
 31d:	89 c7                	mov    %eax,%edi
 31f:	e8 00 00 00 00       	call   324 <ArtNetNode::HandleDmx()+0x324>
 324:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 328:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 32c:	0f b6 c8             	movzbl %al,%ecx
 32f:	8b 55 dc             	mov    -0x24(%rbp),%edx
 332:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 336:	41 89 c8             	mov    %ecx,%r8d
 339:	89 d1                	mov    %edx,%ecx
 33b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 342 <ArtNetNode::HandleDmx()+0x342>
 342:	be 10 00 00 00       	mov    $0x10,%esi
 347:	48 89 c7             	mov    %rax,%rdi
 34a:	b8 00 00 00 00       	mov    $0x0,%eax
 34f:	e8 00 00 00 00       	call   354 <ArtNetNode::HandleDmx()+0x354>
 354:	e9 ce 08 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 359:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 35d:	8b 45 dc             	mov    -0x24(%rbp),%eax
 360:	48 83 c0 1b          	add    $0x1b,%rax
 364:	48 c1 e0 05          	shl    $0x5,%rax
 368:	48 01 d0             	add    %rdx,%rax
 36b:	48 83 c0 1c          	add    $0x1c,%rax
 36f:	0f b7 10             	movzwl (%rax),%edx
 372:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 376:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 37a:	0f b6 c0             	movzbl %al,%eax
 37d:	66 39 c2             	cmp    %ax,%dx
 380:	0f 84 c6 00 00 00    	je     44c <ArtNetNode::HandleDmx()+0x44c>
 386:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 38a:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 390:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 394:	8b 55 dc             	mov    -0x24(%rbp),%edx
 397:	48 83 c2 1b          	add    $0x1b,%rdx
 39b:	48 c1 e2 05          	shl    $0x5,%rdx
 39f:	48 01 ca             	add    %rcx,%rdx
 3a2:	48 83 c2 18          	add    $0x18,%rdx
 3a6:	89 02                	mov    %eax,(%rdx)
 3a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3ac:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 3b2:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 3b6:	8b 55 dc             	mov    -0x24(%rbp),%edx
 3b9:	48 83 c2 1b          	add    $0x1b,%rdx
 3bd:	48 c1 e2 05          	shl    $0x5,%rdx
 3c1:	48 01 ca             	add    %rcx,%rdx
 3c4:	48 83 c2 14          	add    $0x14,%rdx
 3c8:	89 02                	mov    %eax,(%rdx)
 3ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3ce:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 3d2:	0f b6 c0             	movzbl %al,%eax
 3d5:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 3d9:	8b 55 dc             	mov    -0x24(%rbp),%edx
 3dc:	48 83 c2 1b          	add    $0x1b,%rdx
 3e0:	48 c1 e2 05          	shl    $0x5,%rdx
 3e4:	48 01 ca             	add    %rcx,%rdx
 3e7:	48 83 c2 1c          	add    $0x1c,%rdx
 3eb:	66 89 02             	mov    %ax,(%rdx)
 3ee:	8b 55 dc             	mov    -0x24(%rbp),%edx
 3f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3f5:	89 d6                	mov    %edx,%esi
 3f7:	48 89 c7             	mov    %rax,%rdi
 3fa:	e8 00 00 00 00       	call   3ff <ArtNetNode::HandleDmx()+0x3ff>
 3ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 403:	48 8d 70 12          	lea    0x12(%rax),%rsi
 407:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 40a:	8b 55 e0             	mov    -0x20(%rbp),%edx
 40d:	8b 45 dc             	mov    -0x24(%rbp),%eax
 410:	89 c7                	mov    %eax,%edi
 412:	e8 00 00 00 00       	call   417 <ArtNetNode::HandleDmx()+0x417>
 417:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 41b:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 41f:	0f b6 c8             	movzbl %al,%ecx
 422:	8b 55 dc             	mov    -0x24(%rbp),%edx
 425:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 429:	41 89 c8             	mov    %ecx,%r8d
 42c:	89 d1                	mov    %edx,%ecx
 42e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 435 <ArtNetNode::HandleDmx()+0x435>
 435:	be 10 00 00 00       	mov    $0x10,%esi
 43a:	48 89 c7             	mov    %rax,%rdi
 43d:	b8 00 00 00 00       	mov    $0x0,%eax
 442:	e8 00 00 00 00       	call   447 <ArtNetNode::HandleDmx()+0x447>
 447:	e9 db 07 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 44c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 450:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 454:	0f b6 c8             	movzbl %al,%ecx
 457:	8b 55 dc             	mov    -0x24(%rbp),%edx
 45a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 45e:	41 89 c8             	mov    %ecx,%r8d
 461:	89 d1                	mov    %edx,%ecx
 463:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 46a <ArtNetNode::HandleDmx()+0x46a>
 46a:	be 10 00 00 00       	mov    $0x10,%esi
 46f:	48 89 c7             	mov    %rax,%rdi
 472:	b8 00 00 00 00       	mov    $0x0,%eax
 477:	e8 00 00 00 00       	call   47c <ArtNetNode::HandleDmx()+0x47c>
 47c:	e9 f8 08 00 00       	jmp    d79 <ArtNetNode::HandleDmx()+0xd79>
 481:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
 485:	0f 85 d3 01 00 00    	jne    65e <ArtNetNode::HandleDmx()+0x65e>
 48b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 48f:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 495:	39 45 e8             	cmp    %eax,-0x18(%rbp)
 498:	0f 85 c0 01 00 00    	jne    65e <ArtNetNode::HandleDmx()+0x65e>
 49e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 4a2:	8b 45 dc             	mov    -0x24(%rbp),%eax
 4a5:	48 83 c0 1b          	add    $0x1b,%rax
 4a9:	48 c1 e0 05          	shl    $0x5,%rax
 4ad:	48 01 d0             	add    %rdx,%rax
 4b0:	48 83 c0 1c          	add    $0x1c,%rax
 4b4:	0f b7 10             	movzwl (%rax),%edx
 4b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 4bb:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 4bf:	0f b6 c0             	movzbl %al,%eax
 4c2:	66 39 c2             	cmp    %ax,%dx
 4c5:	75 6f                	jne    536 <ArtNetNode::HandleDmx()+0x536>
 4c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 4cb:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 4d1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 4d5:	8b 55 dc             	mov    -0x24(%rbp),%edx
 4d8:	48 83 c2 1b          	add    $0x1b,%rdx
 4dc:	48 c1 e2 05          	shl    $0x5,%rdx
 4e0:	48 01 ca             	add    %rcx,%rdx
 4e3:	48 83 c2 14          	add    $0x14,%rdx
 4e7:	89 02                	mov    %eax,(%rdx)
 4e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 4ed:	48 8d 48 12          	lea    0x12(%rax),%rcx
 4f1:	8b 55 e0             	mov    -0x20(%rbp),%edx
 4f4:	8b 45 dc             	mov    -0x24(%rbp),%eax
 4f7:	48 89 ce             	mov    %rcx,%rsi
 4fa:	89 c7                	mov    %eax,%edi
 4fc:	e8 00 00 00 00       	call   501 <ArtNetNode::HandleDmx()+0x501>
 501:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 505:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 509:	0f b6 c8             	movzbl %al,%ecx
 50c:	8b 55 dc             	mov    -0x24(%rbp),%edx
 50f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 513:	41 89 c8             	mov    %ecx,%r8d
 516:	89 d1                	mov    %edx,%ecx
 518:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 51f <ArtNetNode::HandleDmx()+0x51f>
 51f:	be 10 00 00 00       	mov    $0x10,%esi
 524:	48 89 c7             	mov    %rax,%rdi
 527:	b8 00 00 00 00       	mov    $0x0,%eax
 52c:	e8 00 00 00 00       	call   531 <ArtNetNode::HandleDmx()+0x531>
 531:	e9 f1 06 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 536:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 53a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 53d:	48 83 c0 1b          	add    $0x1b,%rax
 541:	48 c1 e0 05          	shl    $0x5,%rax
 545:	48 01 d0             	add    %rdx,%rax
 548:	48 83 c0 10          	add    $0x10,%rax
 54c:	0f b7 10             	movzwl (%rax),%edx
 54f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 553:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 557:	0f b6 c0             	movzbl %al,%eax
 55a:	66 39 c2             	cmp    %ax,%dx
 55d:	0f 84 c6 00 00 00    	je     629 <ArtNetNode::HandleDmx()+0x629>
 563:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 567:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 56d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 571:	8b 55 dc             	mov    -0x24(%rbp),%edx
 574:	48 83 c2 1b          	add    $0x1b,%rdx
 578:	48 c1 e2 05          	shl    $0x5,%rdx
 57c:	48 01 ca             	add    %rcx,%rdx
 57f:	48 83 c2 0c          	add    $0xc,%rdx
 583:	89 02                	mov    %eax,(%rdx)
 585:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 589:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 58f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 593:	8b 55 dc             	mov    -0x24(%rbp),%edx
 596:	48 83 c2 1b          	add    $0x1b,%rdx
 59a:	48 c1 e2 05          	shl    $0x5,%rdx
 59e:	48 01 ca             	add    %rcx,%rdx
 5a1:	48 83 c2 08          	add    $0x8,%rdx
 5a5:	89 02                	mov    %eax,(%rdx)
 5a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 5ab:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 5af:	0f b6 c0             	movzbl %al,%eax
 5b2:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 5b6:	8b 55 dc             	mov    -0x24(%rbp),%edx
 5b9:	48 83 c2 1b          	add    $0x1b,%rdx
 5bd:	48 c1 e2 05          	shl    $0x5,%rdx
 5c1:	48 01 ca             	add    %rcx,%rdx
 5c4:	48 83 c2 10          	add    $0x10,%rdx
 5c8:	66 89 02             	mov    %ax,(%rdx)
 5cb:	8b 55 dc             	mov    -0x24(%rbp),%edx
 5ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 5d2:	89 d6                	mov    %edx,%esi
 5d4:	48 89 c7             	mov    %rax,%rdi
 5d7:	e8 00 00 00 00       	call   5dc <ArtNetNode::HandleDmx()+0x5dc>
 5dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 5e0:	48 8d 70 12          	lea    0x12(%rax),%rsi
 5e4:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 5e7:	8b 55 e0             	mov    -0x20(%rbp),%edx
 5ea:	8b 45 dc             	mov    -0x24(%rbp),%eax
 5ed:	89 c7                	mov    %eax,%edi
 5ef:	e8 00 00 00 00       	call   5f4 <ArtNetNode::HandleDmx()+0x5f4>
 5f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 5f8:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 5fc:	0f b6 c8             	movzbl %al,%ecx
 5ff:	8b 55 dc             	mov    -0x24(%rbp),%edx
 602:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 606:	41 89 c8             	mov    %ecx,%r8d
 609:	89 d1                	mov    %edx,%ecx
 60b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 612 <ArtNetNode::HandleDmx()+0x612>
 612:	be 10 00 00 00       	mov    $0x10,%esi
 617:	48 89 c7             	mov    %rax,%rdi
 61a:	b8 00 00 00 00       	mov    $0x0,%eax
 61f:	e8 00 00 00 00       	call   624 <ArtNetNode::HandleDmx()+0x624>
 624:	e9 fe 05 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 629:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 62d:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 631:	0f b6 c8             	movzbl %al,%ecx
 634:	8b 55 dc             	mov    -0x24(%rbp),%edx
 637:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 63b:	41 89 c8             	mov    %ecx,%r8d
 63e:	89 d1                	mov    %edx,%ecx
 640:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 647 <ArtNetNode::HandleDmx()+0x647>
 647:	be 10 00 00 00       	mov    $0x10,%esi
 64c:	48 89 c7             	mov    %rax,%rdi
 64f:	b8 00 00 00 00       	mov    $0x0,%eax
 654:	e8 00 00 00 00       	call   659 <ArtNetNode::HandleDmx()+0x659>
 659:	e9 1b 07 00 00       	jmp    d79 <ArtNetNode::HandleDmx()+0xd79>
 65e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 662:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 668:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
 66b:	0f 84 d0 00 00 00    	je     741 <ArtNetNode::HandleDmx()+0x741>
 671:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
 675:	0f 85 c6 00 00 00    	jne    741 <ArtNetNode::HandleDmx()+0x741>
 67b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 67f:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 685:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 689:	8b 55 dc             	mov    -0x24(%rbp),%edx
 68c:	48 83 c2 1b          	add    $0x1b,%rdx
 690:	48 c1 e2 05          	shl    $0x5,%rdx
 694:	48 01 ca             	add    %rcx,%rdx
 697:	48 83 c2 18          	add    $0x18,%rdx
 69b:	89 02                	mov    %eax,(%rdx)
 69d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 6a1:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 6a7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 6ab:	8b 55 dc             	mov    -0x24(%rbp),%edx
 6ae:	48 83 c2 1b          	add    $0x1b,%rdx
 6b2:	48 c1 e2 05          	shl    $0x5,%rdx
 6b6:	48 01 ca             	add    %rcx,%rdx
 6b9:	48 83 c2 14          	add    $0x14,%rdx
 6bd:	89 02                	mov    %eax,(%rdx)
 6bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 6c3:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 6c7:	0f b6 c0             	movzbl %al,%eax
 6ca:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 6ce:	8b 55 dc             	mov    -0x24(%rbp),%edx
 6d1:	48 83 c2 1b          	add    $0x1b,%rdx
 6d5:	48 c1 e2 05          	shl    $0x5,%rdx
 6d9:	48 01 ca             	add    %rcx,%rdx
 6dc:	48 83 c2 1c          	add    $0x1c,%rdx
 6e0:	66 89 02             	mov    %ax,(%rdx)
 6e3:	8b 55 dc             	mov    -0x24(%rbp),%edx
 6e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 6ea:	89 d6                	mov    %edx,%esi
 6ec:	48 89 c7             	mov    %rax,%rdi
 6ef:	e8 00 00 00 00       	call   6f4 <ArtNetNode::HandleDmx()+0x6f4>
 6f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 6f8:	48 8d 70 12          	lea    0x12(%rax),%rsi
 6fc:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 6ff:	8b 55 e0             	mov    -0x20(%rbp),%edx
 702:	8b 45 dc             	mov    -0x24(%rbp),%eax
 705:	89 c7                	mov    %eax,%edi
 707:	e8 00 00 00 00       	call   70c <ArtNetNode::HandleDmx()+0x70c>
 70c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 710:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 714:	0f b6 c8             	movzbl %al,%ecx
 717:	8b 55 dc             	mov    -0x24(%rbp),%edx
 71a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 71e:	41 89 c8             	mov    %ecx,%r8d
 721:	89 d1                	mov    %edx,%ecx
 723:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 72a <ArtNetNode::HandleDmx()+0x72a>
 72a:	be 10 00 00 00       	mov    $0x10,%esi
 72f:	48 89 c7             	mov    %rax,%rdi
 732:	b8 00 00 00 00       	mov    $0x0,%eax
 737:	e8 00 00 00 00       	call   73c <ArtNetNode::HandleDmx()+0x73c>
 73c:	e9 e6 04 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 741:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
 745:	0f 85 d9 00 00 00    	jne    824 <ArtNetNode::HandleDmx()+0x824>
 74b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 74f:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 755:	39 45 e8             	cmp    %eax,-0x18(%rbp)
 758:	0f 84 c6 00 00 00    	je     824 <ArtNetNode::HandleDmx()+0x824>
 75e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 762:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 768:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 76c:	8b 55 dc             	mov    -0x24(%rbp),%edx
 76f:	48 83 c2 1b          	add    $0x1b,%rdx
 773:	48 c1 e2 05          	shl    $0x5,%rdx
 777:	48 01 ca             	add    %rcx,%rdx
 77a:	48 83 c2 0c          	add    $0xc,%rdx
 77e:	89 02                	mov    %eax,(%rdx)
 780:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 784:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 78a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 78e:	8b 55 dc             	mov    -0x24(%rbp),%edx
 791:	48 83 c2 1b          	add    $0x1b,%rdx
 795:	48 c1 e2 05          	shl    $0x5,%rdx
 799:	48 01 ca             	add    %rcx,%rdx
 79c:	48 83 c2 08          	add    $0x8,%rdx
 7a0:	89 02                	mov    %eax,(%rdx)
 7a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7a6:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 7aa:	0f b6 c0             	movzbl %al,%eax
 7ad:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 7b1:	8b 55 dc             	mov    -0x24(%rbp),%edx
 7b4:	48 83 c2 1b          	add    $0x1b,%rdx
 7b8:	48 c1 e2 05          	shl    $0x5,%rdx
 7bc:	48 01 ca             	add    %rcx,%rdx
 7bf:	48 83 c2 10          	add    $0x10,%rdx
 7c3:	66 89 02             	mov    %ax,(%rdx)
 7c6:	8b 55 dc             	mov    -0x24(%rbp),%edx
 7c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 7cd:	89 d6                	mov    %edx,%esi
 7cf:	48 89 c7             	mov    %rax,%rdi
 7d2:	e8 00 00 00 00       	call   7d7 <ArtNetNode::HandleDmx()+0x7d7>
 7d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7db:	48 8d 70 12          	lea    0x12(%rax),%rsi
 7df:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 7e2:	8b 55 e0             	mov    -0x20(%rbp),%edx
 7e5:	8b 45 dc             	mov    -0x24(%rbp),%eax
 7e8:	89 c7                	mov    %eax,%edi
 7ea:	e8 00 00 00 00       	call   7ef <ArtNetNode::HandleDmx()+0x7ef>
 7ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7f3:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 7f7:	0f b6 c8             	movzbl %al,%ecx
 7fa:	8b 55 dc             	mov    -0x24(%rbp),%edx
 7fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 801:	41 89 c8             	mov    %ecx,%r8d
 804:	89 d1                	mov    %edx,%ecx
 806:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 80d <ArtNetNode::HandleDmx()+0x80d>
 80d:	be 10 00 00 00       	mov    $0x10,%esi
 812:	48 89 c7             	mov    %rax,%rdi
 815:	b8 00 00 00 00       	mov    $0x0,%eax
 81a:	e8 00 00 00 00       	call   81f <ArtNetNode::HandleDmx()+0x81f>
 81f:	e9 03 04 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 824:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 828:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 82e:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
 831:	0f 85 f5 00 00 00    	jne    92c <ArtNetNode::HandleDmx()+0x92c>
 837:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 83b:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 841:	39 45 e8             	cmp    %eax,-0x18(%rbp)
 844:	0f 84 e2 00 00 00    	je     92c <ArtNetNode::HandleDmx()+0x92c>
 84a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 84e:	8b 45 dc             	mov    -0x24(%rbp),%eax
 851:	48 83 c0 1b          	add    $0x1b,%rax
 855:	48 c1 e0 05          	shl    $0x5,%rax
 859:	48 01 d0             	add    %rdx,%rax
 85c:	48 83 c0 10          	add    $0x10,%rax
 860:	0f b7 10             	movzwl (%rax),%edx
 863:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 867:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 86b:	0f b6 c0             	movzbl %al,%eax
 86e:	66 39 c2             	cmp    %ax,%dx
 871:	0f 85 80 00 00 00    	jne    8f7 <ArtNetNode::HandleDmx()+0x8f7>
 877:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 87b:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 881:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 885:	8b 55 dc             	mov    -0x24(%rbp),%edx
 888:	48 83 c2 1b          	add    $0x1b,%rdx
 88c:	48 c1 e2 05          	shl    $0x5,%rdx
 890:	48 01 ca             	add    %rcx,%rdx
 893:	48 83 c2 08          	add    $0x8,%rdx
 897:	89 02                	mov    %eax,(%rdx)
 899:	8b 55 dc             	mov    -0x24(%rbp),%edx
 89c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8a0:	89 d6                	mov    %edx,%esi
 8a2:	48 89 c7             	mov    %rax,%rdi
 8a5:	e8 00 00 00 00       	call   8aa <ArtNetNode::HandleDmx()+0x8aa>
 8aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8ae:	48 8d 70 12          	lea    0x12(%rax),%rsi
 8b2:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8b5:	8b 55 e0             	mov    -0x20(%rbp),%edx
 8b8:	8b 45 dc             	mov    -0x24(%rbp),%eax
 8bb:	89 c7                	mov    %eax,%edi
 8bd:	e8 00 00 00 00       	call   8c2 <ArtNetNode::HandleDmx()+0x8c2>
 8c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8c6:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 8ca:	0f b6 c8             	movzbl %al,%ecx
 8cd:	8b 55 dc             	mov    -0x24(%rbp),%edx
 8d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 8d4:	41 89 c8             	mov    %ecx,%r8d
 8d7:	89 d1                	mov    %edx,%ecx
 8d9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8e0 <ArtNetNode::HandleDmx()+0x8e0>
 8e0:	be 10 00 00 00       	mov    $0x10,%esi
 8e5:	48 89 c7             	mov    %rax,%rdi
 8e8:	b8 00 00 00 00       	mov    $0x0,%eax
 8ed:	e8 00 00 00 00       	call   8f2 <ArtNetNode::HandleDmx()+0x8f2>
 8f2:	e9 30 03 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 8f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 8fb:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 8ff:	0f b6 c8             	movzbl %al,%ecx
 902:	8b 55 dc             	mov    -0x24(%rbp),%edx
 905:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 909:	41 89 c8             	mov    %ecx,%r8d
 90c:	89 d1                	mov    %edx,%ecx
 90e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 915 <ArtNetNode::HandleDmx()+0x915>
 915:	be 40 00 00 00       	mov    $0x40,%esi
 91a:	48 89 c7             	mov    %rax,%rdi
 91d:	b8 00 00 00 00       	mov    $0x0,%eax
 922:	e8 00 00 00 00       	call   927 <ArtNetNode::HandleDmx()+0x927>
 927:	e9 4d 04 00 00       	jmp    d79 <ArtNetNode::HandleDmx()+0xd79>
 92c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 930:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 936:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
 939:	0f 84 04 01 00 00    	je     a43 <ArtNetNode::HandleDmx()+0xa43>
 93f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 943:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 949:	39 45 e8             	cmp    %eax,-0x18(%rbp)
 94c:	0f 85 f1 00 00 00    	jne    a43 <ArtNetNode::HandleDmx()+0xa43>
 952:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 956:	8b 45 dc             	mov    -0x24(%rbp),%eax
 959:	48 83 c0 1b          	add    $0x1b,%rax
 95d:	48 c1 e0 05          	shl    $0x5,%rax
 961:	48 01 d0             	add    %rdx,%rax
 964:	48 83 c0 1c          	add    $0x1c,%rax
 968:	0f b7 10             	movzwl (%rax),%edx
 96b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 96f:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 973:	0f b6 c0             	movzbl %al,%eax
 976:	66 39 c2             	cmp    %ax,%dx
 979:	0f 85 80 00 00 00    	jne    9ff <ArtNetNode::HandleDmx()+0x9ff>
 97f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 983:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 989:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 98d:	8b 55 dc             	mov    -0x24(%rbp),%edx
 990:	48 83 c2 1b          	add    $0x1b,%rdx
 994:	48 c1 e2 05          	shl    $0x5,%rdx
 998:	48 01 ca             	add    %rcx,%rdx
 99b:	48 83 c2 14          	add    $0x14,%rdx
 99f:	89 02                	mov    %eax,(%rdx)
 9a1:	8b 55 dc             	mov    -0x24(%rbp),%edx
 9a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 9a8:	89 d6                	mov    %edx,%esi
 9aa:	48 89 c7             	mov    %rax,%rdi
 9ad:	e8 00 00 00 00       	call   9b2 <ArtNetNode::HandleDmx()+0x9b2>
 9b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 9b6:	48 8d 70 12          	lea    0x12(%rax),%rsi
 9ba:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 9bd:	8b 55 e0             	mov    -0x20(%rbp),%edx
 9c0:	8b 45 dc             	mov    -0x24(%rbp),%eax
 9c3:	89 c7                	mov    %eax,%edi
 9c5:	e8 00 00 00 00       	call   9ca <ArtNetNode::HandleDmx()+0x9ca>
 9ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 9ce:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 9d2:	0f b6 c8             	movzbl %al,%ecx
 9d5:	8b 55 dc             	mov    -0x24(%rbp),%edx
 9d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 9dc:	41 89 c8             	mov    %ecx,%r8d
 9df:	89 d1                	mov    %edx,%ecx
 9e1:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 9e8 <ArtNetNode::HandleDmx()+0x9e8>
 9e8:	be 10 00 00 00       	mov    $0x10,%esi
 9ed:	48 89 c7             	mov    %rax,%rdi
 9f0:	b8 00 00 00 00       	mov    $0x0,%eax
 9f5:	e8 00 00 00 00       	call   9fa <ArtNetNode::HandleDmx()+0x9fa>
 9fa:	e9 28 02 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 9ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 a03:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 a07:	0f b6 c8             	movzbl %al,%ecx
 a0a:	8b 55 dc             	mov    -0x24(%rbp),%edx
 a0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 a11:	41 89 c8             	mov    %ecx,%r8d
 a14:	89 d1                	mov    %edx,%ecx
 a16:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a1d <ArtNetNode::HandleDmx()+0xa1d>
 a1d:	be 40 00 00 00       	mov    $0x40,%esi
 a22:	48 89 c7             	mov    %rax,%rdi
 a25:	b8 00 00 00 00       	mov    $0x0,%eax
 a2a:	e8 00 00 00 00       	call   a2f <ArtNetNode::HandleDmx()+0xa2f>
 a2f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a36 <ArtNetNode::HandleDmx()+0xa36>
 a36:	48 89 c7             	mov    %rax,%rdi
 a39:	e8 00 00 00 00       	call   a3e <ArtNetNode::HandleDmx()+0xa3e>
 a3e:	e9 36 03 00 00       	jmp    d79 <ArtNetNode::HandleDmx()+0xd79>
 a43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 a47:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 a4d:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
 a50:	0f 85 aa 01 00 00    	jne    c00 <ArtNetNode::HandleDmx()+0xc00>
 a56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 a5a:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
 a60:	39 45 e8             	cmp    %eax,-0x18(%rbp)
 a63:	0f 85 97 01 00 00    	jne    c00 <ArtNetNode::HandleDmx()+0xc00>
 a69:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 a6d:	8b 45 dc             	mov    -0x24(%rbp),%eax
 a70:	48 83 c0 1b          	add    $0x1b,%rax
 a74:	48 c1 e0 05          	shl    $0x5,%rax
 a78:	48 01 d0             	add    %rdx,%rax
 a7b:	48 83 c0 10          	add    $0x10,%rax
 a7f:	0f b7 10             	movzwl (%rax),%edx
 a82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 a86:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 a8a:	0f b6 c0             	movzbl %al,%eax
 a8d:	66 39 c2             	cmp    %ax,%dx
 a90:	0f 85 80 00 00 00    	jne    b16 <ArtNetNode::HandleDmx()+0xb16>
 a96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 a9a:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 aa0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 aa4:	8b 55 dc             	mov    -0x24(%rbp),%edx
 aa7:	48 83 c2 1b          	add    $0x1b,%rdx
 aab:	48 c1 e2 05          	shl    $0x5,%rdx
 aaf:	48 01 ca             	add    %rcx,%rdx
 ab2:	48 83 c2 08          	add    $0x8,%rdx
 ab6:	89 02                	mov    %eax,(%rdx)
 ab8:	8b 55 dc             	mov    -0x24(%rbp),%edx
 abb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 abf:	89 d6                	mov    %edx,%esi
 ac1:	48 89 c7             	mov    %rax,%rdi
 ac4:	e8 00 00 00 00       	call   ac9 <ArtNetNode::HandleDmx()+0xac9>
 ac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 acd:	48 8d 70 12          	lea    0x12(%rax),%rsi
 ad1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 ad4:	8b 55 e0             	mov    -0x20(%rbp),%edx
 ad7:	8b 45 dc             	mov    -0x24(%rbp),%eax
 ada:	89 c7                	mov    %eax,%edi
 adc:	e8 00 00 00 00       	call   ae1 <ArtNetNode::HandleDmx()+0xae1>
 ae1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 ae5:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 ae9:	0f b6 c8             	movzbl %al,%ecx
 aec:	8b 55 dc             	mov    -0x24(%rbp),%edx
 aef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 af3:	41 89 c8             	mov    %ecx,%r8d
 af6:	89 d1                	mov    %edx,%ecx
 af8:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # aff <ArtNetNode::HandleDmx()+0xaff>
 aff:	be 10 00 00 00       	mov    $0x10,%esi
 b04:	48 89 c7             	mov    %rax,%rdi
 b07:	b8 00 00 00 00       	mov    $0x0,%eax
 b0c:	e8 00 00 00 00       	call   b11 <ArtNetNode::HandleDmx()+0xb11>
 b11:	e9 11 01 00 00       	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 b16:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 b1a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 b1d:	48 83 c0 1b          	add    $0x1b,%rax
 b21:	48 c1 e0 05          	shl    $0x5,%rax
 b25:	48 01 d0             	add    %rdx,%rax
 b28:	48 83 c0 1c          	add    $0x1c,%rax
 b2c:	0f b7 10             	movzwl (%rax),%edx
 b2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 b33:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 b37:	0f b6 c0             	movzbl %al,%eax
 b3a:	66 39 c2             	cmp    %ax,%dx
 b3d:	75 7d                	jne    bbc <ArtNetNode::HandleDmx()+0xbbc>
 b3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 b43:	8b 80 44 02 00 00    	mov    0x244(%rax),%eax
 b49:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 b4d:	8b 55 dc             	mov    -0x24(%rbp),%edx
 b50:	48 83 c2 1b          	add    $0x1b,%rdx
 b54:	48 c1 e2 05          	shl    $0x5,%rdx
 b58:	48 01 ca             	add    %rcx,%rdx
 b5b:	48 83 c2 14          	add    $0x14,%rdx
 b5f:	89 02                	mov    %eax,(%rdx)
 b61:	8b 55 dc             	mov    -0x24(%rbp),%edx
 b64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 b68:	89 d6                	mov    %edx,%esi
 b6a:	48 89 c7             	mov    %rax,%rdi
 b6d:	e8 00 00 00 00       	call   b72 <ArtNetNode::HandleDmx()+0xb72>
 b72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 b76:	48 8d 70 12          	lea    0x12(%rax),%rsi
 b7a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 b7d:	8b 55 e0             	mov    -0x20(%rbp),%edx
 b80:	8b 45 dc             	mov    -0x24(%rbp),%eax
 b83:	89 c7                	mov    %eax,%edi
 b85:	e8 00 00 00 00       	call   b8a <ArtNetNode::HandleDmx()+0xb8a>
 b8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 b8e:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 b92:	0f b6 c8             	movzbl %al,%ecx
 b95:	8b 55 dc             	mov    -0x24(%rbp),%edx
 b98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 b9c:	41 89 c8             	mov    %ecx,%r8d
 b9f:	89 d1                	mov    %edx,%ecx
 ba1:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # ba8 <ArtNetNode::HandleDmx()+0xba8>
 ba8:	be 10 00 00 00       	mov    $0x10,%esi
 bad:	48 89 c7             	mov    %rax,%rdi
 bb0:	b8 00 00 00 00       	mov    $0x0,%eax
 bb5:	e8 00 00 00 00       	call   bba <ArtNetNode::HandleDmx()+0xbba>
 bba:	eb 6b                	jmp    c27 <ArtNetNode::HandleDmx()+0xc27>
 bbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 bc0:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 bc4:	0f b6 c8             	movzbl %al,%ecx
 bc7:	8b 55 dc             	mov    -0x24(%rbp),%edx
 bca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 bce:	41 89 c8             	mov    %ecx,%r8d
 bd1:	89 d1                	mov    %edx,%ecx
 bd3:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # bda <ArtNetNode::HandleDmx()+0xbda>
 bda:	be 10 00 00 00       	mov    $0x10,%esi
 bdf:	48 89 c7             	mov    %rax,%rdi
 be2:	b8 00 00 00 00       	mov    $0x0,%eax
 be7:	e8 00 00 00 00       	call   bec <ArtNetNode::HandleDmx()+0xbec>
 bec:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # bf3 <ArtNetNode::HandleDmx()+0xbf3>
 bf3:	48 89 c7             	mov    %rax,%rdi
 bf6:	e8 00 00 00 00       	call   bfb <ArtNetNode::HandleDmx()+0xbfb>
 bfb:	e9 79 01 00 00       	jmp    d79 <ArtNetNode::HandleDmx()+0xd79>
 c00:	8b 55 dc             	mov    -0x24(%rbp),%edx
 c03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 c07:	89 d1                	mov    %edx,%ecx
 c09:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c10 <ArtNetNode::HandleDmx()+0xc10>
 c10:	be 80 ff ff ff       	mov    $0xffffff80,%esi
 c15:	48 89 c7             	mov    %rax,%rdi
 c18:	b8 00 00 00 00       	mov    $0x0,%eax
 c1d:	e8 00 00 00 00       	call   c22 <ArtNetNode::HandleDmx()+0xc22>
 c22:	e9 52 01 00 00       	jmp    d79 <ArtNetNode::HandleDmx()+0xd79>
 c27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 c2b:	0f b6 80 5d 03 00 00 	movzbl 0x35d(%rax),%eax
 c32:	84 c0                	test   %al,%al
 c34:	74 77                	je     cad <ArtNetNode::HandleDmx()+0xcad>
 c36:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 c3a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 c3d:	48 c1 e0 05          	shl    $0x5,%rax
 c41:	48 01 d0             	add    %rdx,%rax
 c44:	48 05 80 03 00 00    	add    $0x380,%rax
 c4a:	0f b6 00             	movzbl (%rax),%eax
 c4d:	0f b6 c0             	movzbl %al,%eax
 c50:	83 e0 08             	and    $0x8,%eax
 c53:	85 c0                	test   %eax,%eax
 c55:	75 56                	jne    cad <ArtNetNode::HandleDmx()+0xcad>
 c57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 c5b:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 c62:	8b 55 dc             	mov    -0x24(%rbp),%edx
 c65:	89 d6                	mov    %edx,%esi
 c67:	48 89 c7             	mov    %rax,%rdi
 c6a:	e8 00 00 00 00       	call   c6f <ArtNetNode::HandleDmx()+0xc6f>
 c6f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 c73:	8b 45 dc             	mov    -0x24(%rbp),%eax
 c76:	48 c1 e0 05          	shl    $0x5,%rax
 c7a:	48 01 d0             	add    %rdx,%rax
 c7d:	48 05 84 03 00 00    	add    $0x384,%rax
 c83:	c6 00 01             	movb   $0x1,(%rax)
 c86:	8b 55 dc             	mov    -0x24(%rbp),%edx
 c89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 c8d:	89 d1                	mov    %edx,%ecx
 c8f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c96 <ArtNetNode::HandleDmx()+0xc96>
 c96:	be 10 00 00 00       	mov    $0x10,%esi
 c9b:	48 89 c7             	mov    %rax,%rdi
 c9e:	b8 00 00 00 00       	mov    $0x0,%eax
 ca3:	e8 00 00 00 00       	call   ca8 <ArtNetNode::HandleDmx()+0xca8>
 ca8:	e9 a4 00 00 00       	jmp    d51 <ArtNetNode::HandleDmx()+0xd51>
 cad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 cb1:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 cb8:	8b 55 dc             	mov    -0x24(%rbp),%edx
 cbb:	89 d6                	mov    %edx,%esi
 cbd:	48 89 c7             	mov    %rax,%rdi
 cc0:	e8 00 00 00 00       	call   cc5 <ArtNetNode::HandleDmx()+0xcc5>
 cc5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 cc9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 ccc:	48 c1 e0 05          	shl    $0x5,%rax
 cd0:	48 01 d0             	add    %rdx,%rax
 cd3:	48 05 83 03 00 00    	add    $0x383,%rax
 cd9:	0f b6 00             	movzbl (%rax),%eax
 cdc:	83 f0 01             	xor    $0x1,%eax
 cdf:	84 c0                	test   %al,%al
 ce1:	74 4c                	je     d2f <ArtNetNode::HandleDmx()+0xd2f>
 ce3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 ce7:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 cee:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 cf2:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
 cf9:	48 8b 12             	mov    (%rdx),%rdx
 cfc:	48 83 c2 10          	add    $0x10,%rdx
 d00:	48 8b 0a             	mov    (%rdx),%rcx
 d03:	8b 55 dc             	mov    -0x24(%rbp),%edx
 d06:	89 d6                	mov    %edx,%esi
 d08:	48 89 c7             	mov    %rax,%rdi
 d0b:	ff d1                	call   *%rcx
 d0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 d11:	c6 80 5f 03 00 00 01 	movb   $0x1,0x35f(%rax)
 d18:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 d1c:	8b 45 dc             	mov    -0x24(%rbp),%eax
 d1f:	48 c1 e0 05          	shl    $0x5,%rax
 d23:	48 01 d0             	add    %rdx,%rax
 d26:	48 05 83 03 00 00    	add    $0x383,%rax
 d2c:	c6 00 01             	movb   $0x1,(%rax)
 d2f:	8b 55 dc             	mov    -0x24(%rbp),%edx
 d32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 d36:	89 d1                	mov    %edx,%ecx
 d38:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # d3f <ArtNetNode::HandleDmx()+0xd3f>
 d3f:	be 10 00 00 00       	mov    $0x10,%esi
 d44:	48 89 c7             	mov    %rax,%rdi
 d47:	b8 00 00 00 00       	mov    $0x0,%eax
 d4c:	e8 00 00 00 00       	call   d51 <ArtNetNode::HandleDmx()+0xd51>
 d51:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 d55:	0f b6 80 61 03 00 00 	movzbl 0x361(%rax),%eax
 d5c:	83 c8 02             	or     $0x2,%eax
 d5f:	89 c2                	mov    %eax,%edx
 d61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 d65:	88 90 61 03 00 00    	mov    %dl,0x361(%rax)
 d6b:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 d6f:	83 7d dc 03          	cmpl   $0x3,-0x24(%rbp)
 d73:	0f 86 fd f2 ff ff    	jbe    76 <ArtNetNode::HandleDmx()+0x76>
 d79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 d7d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 d84:	00 00 
 d86:	74 05                	je     d8d <ArtNetNode::HandleDmx()+0xd8d>
 d88:	e8 00 00 00 00       	call   d8d <ArtNetNode::HandleDmx()+0xd8d>
 d8d:	c9                   	leave  
 d8e:	c3                   	ret    

Disassembly of section .text._ZSt3maxIhERKT_S2_S2_:

0000000000000000 <unsigned char const& std::max<unsigned char>(unsigned char const&, unsigned char const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	0f b6 10             	movzbl (%rax),%edx
  2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  2e:	0f b6 00             	movzbl (%rax),%eax
  31:	38 c2                	cmp    %al,%dl
  33:	73 06                	jae    3b <unsigned char const& std::max<unsigned char>(unsigned char const&, unsigned char const&)+0x3b>
  35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  39:	eb 04                	jmp    3f <unsigned char const& std::max<unsigned char>(unsigned char const&, unsigned char const&)+0x3f>
  3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4a:	00 00 
  4c:	74 05                	je     53 <unsigned char const& std::max<unsigned char>(unsigned char const&, unsigned char const&)+0x53>
  4e:	e8 00 00 00 00       	call   53 <unsigned char const& std::max<unsigned char>(unsigned char const&, unsigned char const&)+0x53>
  53:	c9                   	leave  
  54:	c3                   	ret    

Disassembly of section .text._ZSt3minIjERKT_S2_S2_:

0000000000000000 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  27:	8b 10                	mov    (%rax),%edx
  29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2d:	8b 00                	mov    (%rax),%eax
  2f:	39 c2                	cmp    %eax,%edx
  31:	73 06                	jae    39 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x39>
  33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  37:	eb 04                	jmp    3d <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x3d>
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  48:	00 00 
  4a:	74 05                	je     51 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x51>
  4c:	e8 00 00 00 00       	call   51 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x51>
  51:	c9                   	leave  
  52:	c3                   	ret    

artnetnodehandleipprog.o:     file format elf64-x86-64


Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 40 10             	mov    0x10(%rax),%eax
  26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  31:	00 00 
  33:	74 05                	je     3a <Network::GetIp() const+0x3a>
  35:	e8 00 00 00 00       	call   3a <Network::GetIp() const+0x3a>
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZN7Network10EnableDhcpEv:

0000000000000000 <Network::EnableDhcp()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	b8 00 00 00 00       	mov    $0x0,%eax
  24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  28:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2f:	00 00 
  31:	74 05                	je     38 <Network::EnableDhcp()+0x38>
  33:	e8 00 00 00 00       	call   38 <Network::EnableDhcp()+0x38>
  38:	c9                   	leave  
  39:	c3                   	ret    

Disassembly of section .text._ZNK7Network12GetGatewayIpEv:

0000000000000000 <Network::GetGatewayIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 40 14             	mov    0x14(%rax),%eax
  26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  31:	00 00 
  33:	74 05                	je     3a <Network::GetGatewayIp() const+0x3a>
  35:	e8 00 00 00 00       	call   3a <Network::GetGatewayIp() const+0x3a>
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZNK7Network10GetNetmaskEv:

0000000000000000 <Network::GetNetmask() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 40 18             	mov    0x18(%rax),%eax
  26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  31:	00 00 
  33:	74 05                	je     3a <Network::GetNetmask() const+0x3a>
  35:	e8 00 00 00 00       	call   3a <Network::GetNetmask() const+0x3a>
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZNK7Network10IsDhcpUsedEv:

0000000000000000 <Network::IsDhcpUsed() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  32:	00 00 
  34:	74 05                	je     3b <Network::IsDhcpUsed() const+0x3b>
  36:	e8 00 00 00 00       	call   3b <Network::IsDhcpUsed() const+0x3b>
  3b:	c9                   	leave  
  3c:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Network::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Network::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Network::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode12HandleIpProgEv:

0000000000000000 <ArtNetNode::HandleIpProg()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  24:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  33:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
  37:	88 45 d5             	mov    %al,-0x2b(%rbp)
  3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  3e:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  45:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  49:	e8 00 00 00 00       	call   4e <ArtNetNode::HandleIpProg()+0x4e>
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	call   56 <ArtNetNode::HandleIpProg()+0x56>
  56:	88 45 d6             	mov    %al,-0x2a(%rbp)
  59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  5d:	66 c7 40 08 00 f9    	movw   $0xf900,0x8(%rax)
  63:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
  67:	25 c0 00 00 00       	and    $0xc0,%eax
  6c:	3d c0 00 00 00       	cmp    $0xc0,%eax
  71:	75 0d                	jne    80 <ArtNetNode::HandleIpProg()+0x80>
  73:	e8 00 00 00 00       	call   78 <ArtNetNode::HandleIpProg()+0x78>
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	e8 00 00 00 00       	call   80 <ArtNetNode::HandleIpProg()+0x80>
  80:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
  84:	25 88 00 00 00       	and    $0x88,%eax
  89:	3d 88 00 00 00       	cmp    $0x88,%eax
  8e:	75 12                	jne    a2 <ArtNetNode::HandleIpProg()+0xa2>
  90:	e8 00 00 00 00       	call   95 <ArtNetNode::HandleIpProg()+0x95>
  95:	be 00 00 00 00       	mov    $0x0,%esi
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <ArtNetNode::HandleIpProg()+0xa2>
  a2:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
  a6:	25 84 00 00 00       	and    $0x84,%eax
  ab:	3d 84 00 00 00       	cmp    $0x84,%eax
  b0:	75 28                	jne    da <ArtNetNode::HandleIpProg()+0xda>
  b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b6:	48 83 c0 10          	add    $0x10,%rax
  ba:	8b 00                	mov    (%rax),%eax
  bc:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # c2 <ArtNetNode::HandleIpProg()+0xc2>
  c2:	e8 00 00 00 00       	call   c7 <ArtNetNode::HandleIpProg()+0xc7>
  c7:	48 89 c2             	mov    %rax,%rdx
  ca:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # d0 <ArtNetNode::HandleIpProg()+0xd0>
  d0:	89 c6                	mov    %eax,%esi
  d2:	48 89 d7             	mov    %rdx,%rdi
  d5:	e8 00 00 00 00       	call   da <ArtNetNode::HandleIpProg()+0xda>
  da:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
  de:	25 82 00 00 00       	and    $0x82,%eax
  e3:	3d 82 00 00 00       	cmp    $0x82,%eax
  e8:	75 28                	jne    112 <ArtNetNode::HandleIpProg()+0x112>
  ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ee:	48 83 c0 14          	add    $0x14,%rax
  f2:	8b 00                	mov    (%rax),%eax
  f4:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # fa <ArtNetNode::HandleIpProg()+0xfa>
  fa:	e8 00 00 00 00       	call   ff <ArtNetNode::HandleIpProg()+0xff>
  ff:	48 89 c2             	mov    %rax,%rdx
 102:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 108 <ArtNetNode::HandleIpProg()+0x108>
 108:	89 c6                	mov    %eax,%esi
 10a:	48 89 d7             	mov    %rdx,%rdi
 10d:	e8 00 00 00 00       	call   112 <ArtNetNode::HandleIpProg()+0x112>
 112:	0f b6 45 d5          	movzbl -0x2b(%rbp),%eax
 116:	25 90 00 00 00       	and    $0x90,%eax
 11b:	3d 90 00 00 00       	cmp    $0x90,%eax
 120:	75 28                	jne    14a <ArtNetNode::HandleIpProg()+0x14a>
 122:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 126:	48 83 c0 1a          	add    $0x1a,%rax
 12a:	8b 00                	mov    (%rax),%eax
 12c:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 132 <ArtNetNode::HandleIpProg()+0x132>
 132:	e8 00 00 00 00       	call   137 <ArtNetNode::HandleIpProg()+0x137>
 137:	48 89 c2             	mov    %rax,%rdx
 13a:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 140 <ArtNetNode::HandleIpProg()+0x140>
 140:	89 c6                	mov    %eax,%esi
 142:	48 89 d7             	mov    %rdx,%rdi
 145:	e8 00 00 00 00       	call   14a <ArtNetNode::HandleIpProg()+0x14a>
 14a:	e8 00 00 00 00       	call   14f <ArtNetNode::HandleIpProg()+0x14f>
 14f:	48 89 c7             	mov    %rax,%rdi
 152:	e8 00 00 00 00       	call   157 <ArtNetNode::HandleIpProg()+0x157>
 157:	84 c0                	test   %al,%al
 159:	74 0a                	je     165 <ArtNetNode::HandleIpProg()+0x165>
 15b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 15f:	c6 40 1a 40          	movb   $0x40,0x1a(%rax)
 163:	eb 08                	jmp    16d <ArtNetNode::HandleIpProg()+0x16d>
 165:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 169:	c6 40 1a 00          	movb   $0x0,0x1a(%rax)
 16d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 171:	c6 40 1b 00          	movb   $0x0,0x1b(%rax)
 175:	e8 00 00 00 00       	call   17a <ArtNetNode::HandleIpProg()+0x17a>
 17a:	48 89 c7             	mov    %rax,%rdi
 17d:	e8 00 00 00 00       	call   182 <ArtNetNode::HandleIpProg()+0x182>
 182:	38 45 d6             	cmp    %al,-0x2a(%rbp)
 185:	0f 95 c0             	setne  %al
 188:	88 45 d7             	mov    %al,-0x29(%rbp)
 18b:	e8 00 00 00 00       	call   190 <ArtNetNode::HandleIpProg()+0x190>
 190:	48 89 c7             	mov    %rax,%rdi
 193:	e8 00 00 00 00       	call   198 <ArtNetNode::HandleIpProg()+0x198>
 198:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 19e <ArtNetNode::HandleIpProg()+0x19e>
 19e:	0f b6 5d d7          	movzbl -0x29(%rbp),%ebx
 1a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1a6:	48 83 c0 10          	add    $0x10,%rax
 1aa:	ba 04 00 00 00       	mov    $0x4,%edx
 1af:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 1b6 <ArtNetNode::HandleIpProg()+0x1b6>
 1b6:	48 89 ce             	mov    %rcx,%rsi
 1b9:	48 89 c7             	mov    %rax,%rdi
 1bc:	e8 00 00 00 00       	call   1c1 <ArtNetNode::HandleIpProg()+0x1c1>
 1c1:	85 c0                	test   %eax,%eax
 1c3:	0f 95 c0             	setne  %al
 1c6:	0f b6 c0             	movzbl %al,%eax
 1c9:	09 d8                	or     %ebx,%eax
 1cb:	85 c0                	test   %eax,%eax
 1cd:	0f 95 c0             	setne  %al
 1d0:	88 45 d7             	mov    %al,-0x29(%rbp)
 1d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1d7:	48 8d 50 10          	lea    0x10(%rax),%rdx
 1db:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1e1 <ArtNetNode::HandleIpProg()+0x1e1>
 1e1:	89 02                	mov    %eax,(%rdx)
 1e3:	e8 00 00 00 00       	call   1e8 <ArtNetNode::HandleIpProg()+0x1e8>
 1e8:	48 89 c7             	mov    %rax,%rdi
 1eb:	e8 00 00 00 00       	call   1f0 <ArtNetNode::HandleIpProg()+0x1f0>
 1f0:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 1f6 <ArtNetNode::HandleIpProg()+0x1f6>
 1f6:	0f b6 5d d7          	movzbl -0x29(%rbp),%ebx
 1fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1fe:	48 83 c0 14          	add    $0x14,%rax
 202:	ba 04 00 00 00       	mov    $0x4,%edx
 207:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 20e <ArtNetNode::HandleIpProg()+0x20e>
 20e:	48 89 ce             	mov    %rcx,%rsi
 211:	48 89 c7             	mov    %rax,%rdi
 214:	e8 00 00 00 00       	call   219 <ArtNetNode::HandleIpProg()+0x219>
 219:	85 c0                	test   %eax,%eax
 21b:	0f 95 c0             	setne  %al
 21e:	0f b6 c0             	movzbl %al,%eax
 221:	09 d8                	or     %ebx,%eax
 223:	85 c0                	test   %eax,%eax
 225:	0f 95 c0             	setne  %al
 228:	88 45 d7             	mov    %al,-0x29(%rbp)
 22b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 22f:	48 8d 50 14          	lea    0x14(%rax),%rdx
 233:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 239 <ArtNetNode::HandleIpProg()+0x239>
 239:	89 02                	mov    %eax,(%rdx)
 23b:	e8 00 00 00 00       	call   240 <ArtNetNode::HandleIpProg()+0x240>
 240:	48 89 c7             	mov    %rax,%rdi
 243:	e8 00 00 00 00       	call   248 <ArtNetNode::HandleIpProg()+0x248>
 248:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 24e <ArtNetNode::HandleIpProg()+0x24e>
 24e:	0f b6 5d d7          	movzbl -0x29(%rbp),%ebx
 252:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 256:	48 83 c0 1a          	add    $0x1a,%rax
 25a:	ba 04 00 00 00       	mov    $0x4,%edx
 25f:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 266 <ArtNetNode::HandleIpProg()+0x266>
 266:	48 89 ce             	mov    %rcx,%rsi
 269:	48 89 c7             	mov    %rax,%rdi
 26c:	e8 00 00 00 00       	call   271 <ArtNetNode::HandleIpProg()+0x271>
 271:	85 c0                	test   %eax,%eax
 273:	0f 95 c0             	setne  %al
 276:	0f b6 c0             	movzbl %al,%eax
 279:	09 d8                	or     %ebx,%eax
 27b:	85 c0                	test   %eax,%eax
 27d:	0f 95 c0             	setne  %al
 280:	88 45 d7             	mov    %al,-0x29(%rbp)
 283:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 287:	48 8d 50 1c          	lea    0x1c(%rax),%rdx
 28b:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 291 <ArtNetNode::HandleIpProg()+0x291>
 291:	89 02                	mov    %eax,(%rdx)
 293:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 297:	c6 40 20 00          	movb   $0x0,0x20(%rax)
 29b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 29f:	c6 40 21 00          	movb   $0x0,0x21(%rax)
 2a3:	e8 00 00 00 00       	call   2a8 <ArtNetNode::HandleIpProg()+0x2a8>
 2a8:	48 89 c7             	mov    %rax,%rdi
 2ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2af:	8b 88 40 02 00 00    	mov    0x240(%rax),%ecx
 2b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2b9:	48 8b 90 38 02 00 00 	mov    0x238(%rax),%rdx
 2c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2c4:	8b 80 30 02 00 00    	mov    0x230(%rax),%eax
 2ca:	41 b9 36 19 00 00    	mov    $0x1936,%r9d
 2d0:	41 89 c8             	mov    %ecx,%r8d
 2d3:	b9 22 00 00 00       	mov    $0x22,%ecx
 2d8:	89 c6                	mov    %eax,%esi
 2da:	e8 00 00 00 00       	call   2df <ArtNetNode::HandleIpProg()+0x2df>
 2df:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
 2e3:	0f 84 98 00 00 00    	je     381 <ArtNetNode::HandleIpProg()+0x381>
 2e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2ed:	0f b6 80 ec 04 00 00 	movzbl 0x4ec(%rax),%eax
 2f4:	83 e0 fd             	and    $0xfffffffd,%eax
 2f7:	89 c3                	mov    %eax,%ebx
 2f9:	e8 00 00 00 00       	call   2fe <ArtNetNode::HandleIpProg()+0x2fe>
 2fe:	48 89 c7             	mov    %rax,%rdi
 301:	e8 00 00 00 00       	call   306 <ArtNetNode::HandleIpProg()+0x306>
 306:	84 c0                	test   %al,%al
 308:	74 07                	je     311 <ArtNetNode::HandleIpProg()+0x311>
 30a:	b8 02 00 00 00       	mov    $0x2,%eax
 30f:	eb 05                	jmp    316 <ArtNetNode::HandleIpProg()+0x316>
 311:	b8 00 00 00 00       	mov    $0x0,%eax
 316:	09 d8                	or     %ebx,%eax
 318:	89 c2                	mov    %eax,%edx
 31a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 31e:	88 90 ec 04 00 00    	mov    %dl,0x4ec(%rax)
 324:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 328:	48 83 c0 10          	add    $0x10,%rax
 32c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 330:	48 81 c2 22 04 00 00 	add    $0x422,%rdx
 337:	8b 00                	mov    (%rax),%eax
 339:	89 02                	mov    %eax,(%rdx)
 33b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33f:	48 83 c0 10          	add    $0x10,%rax
 343:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 347:	48 81 c2 e7 04 00 00 	add    $0x4e7,%rdx
 34e:	8b 00                	mov    (%rax),%eax
 350:	89 02                	mov    %eax,(%rdx)
 352:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 356:	0f b6 80 5a 03 00 00 	movzbl 0x35a(%rax),%eax
 35d:	84 c0                	test   %al,%al
 35f:	74 20                	je     381 <ArtNetNode::HandleIpProg()+0x381>
 361:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 365:	8b 90 40 02 00 00    	mov    0x240(%rax),%edx
 36b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 36f:	b9 00 00 00 00       	mov    $0x0,%ecx
 374:	be 00 00 00 00       	mov    $0x0,%esi
 379:	48 89 c7             	mov    %rax,%rdi
 37c:	e8 00 00 00 00       	call   381 <ArtNetNode::HandleIpProg()+0x381>
 381:	90                   	nop
 382:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 386:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 38d:	00 00 
 38f:	74 05                	je     396 <ArtNetNode::HandleIpProg()+0x396>
 391:	e8 00 00 00 00       	call   396 <ArtNetNode::HandleIpProg()+0x396>
 396:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 39a:	c9                   	leave  
 39b:	c3                   	ret    

artnetnodehandlepoll.o:     file format elf64-x86-64


Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 40 10             	mov    0x10(%rax),%eax
  26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  31:	00 00 
  33:	74 05                	je     3a <Network::GetIp() const+0x3a>
  35:	e8 00 00 00 00       	call   3a <Network::GetIp() const+0x3a>
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZNK7Network14GetBroadcastIpEv:

0000000000000000 <Network::GetBroadcastIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 50 10             	mov    0x10(%rax),%edx
  26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2a:	8b 40 18             	mov    0x18(%rax),%eax
  2d:	f7 d0                	not    %eax
  2f:	09 d0                	or     %edx,%eax
  31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  35:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  3c:	00 00 
  3e:	74 05                	je     45 <Network::GetBroadcastIp() const+0x45>
  40:	e8 00 00 00 00       	call   45 <Network::GetBroadcastIp() const+0x45>
  45:	c9                   	leave  
  46:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Network::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Network::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Network::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Hardware::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Hardware::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Hardware::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode17ProcessPollRelplyEjRjS0_:

0000000000000000 <ArtNetNode::ProcessPollRelply(unsigned int, unsigned int&, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  1b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  22:	00 00 
  24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  28:	31 c0                	xor    %eax,%eax
  2a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  2e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  31:	48 89 d0             	mov    %rdx,%rax
  34:	48 c1 e0 03          	shl    $0x3,%rax
  38:	48 01 d0             	add    %rdx,%rax
  3b:	48 c1 e0 02          	shl    $0x2,%rax
  3f:	48 01 c8             	add    %rcx,%rax
  42:	48 05 98 02 00 00    	add    $0x298,%rax
  48:	8b 00                	mov    (%rax),%eax
  4a:	83 f8 01             	cmp    $0x1,%eax
  4d:	0f 85 31 01 00 00    	jne    184 <ArtNetNode::ProcessPollRelply(unsigned int, unsigned int&, unsigned int&)+0x184>
  53:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  57:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  5a:	48 89 d0             	mov    %rdx,%rax
  5d:	48 c1 e0 03          	shl    $0x3,%rax
  61:	48 01 d0             	add    %rdx,%rax
  64:	48 c1 e0 02          	shl    $0x2,%rax
  68:	48 01 c8             	add    %rcx,%rax
  6b:	48 05 9c 02 00 00    	add    $0x29c,%rax
  71:	8b 00                	mov    (%rax),%eax
  73:	83 f8 01             	cmp    $0x1,%eax
  76:	75 5f                	jne    d7 <ArtNetNode::ProcessPollRelply(unsigned int, unsigned int&, unsigned int&)+0xd7>
  78:	c7 45 f4 89 00 00 00 	movl   $0x89,-0xc(%rbp)
  7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  83:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  86:	48 c1 e0 05          	shl    $0x5,%rax
  8a:	48 01 d0             	add    %rdx,%rax
  8d:	48 05 80 03 00 00    	add    $0x380,%rax
  93:	0f b6 00             	movzbl (%rax),%eax
  96:	88 45 f3             	mov    %al,-0xd(%rbp)
  99:	80 65 f3 76          	andb   $0x76,-0xd(%rbp)
  9d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a4:	89 d6                	mov    %edx,%esi
  a6:	48 89 c7             	mov    %rax,%rdi
  a9:	e8 00 00 00 00       	call   ae <ArtNetNode::ProcessPollRelply(unsigned int, unsigned int&, unsigned int&)+0xae>
  ae:	83 e0 89             	and    $0xffffff89,%eax
  b1:	89 c2                	mov    %eax,%edx
  b3:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
  b7:	09 d0                	or     %edx,%eax
  b9:	88 45 f3             	mov    %al,-0xd(%rbp)
  bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  c0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  c3:	48 c1 e0 05          	shl    $0x5,%rax
  c7:	48 01 d0             	add    %rdx,%rax
  ca:	48 8d 90 80 03 00 00 	lea    0x380(%rax),%rdx
  d1:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
  d5:	88 02                	mov    %al,(%rdx)
  d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  db:	0f b6 80 c6 04 00 00 	movzbl 0x4c6(%rax),%eax
  e2:	83 c8 80             	or     $0xffffff80,%eax
  e5:	89 c2                	mov    %eax,%edx
  e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  eb:	88 90 c6 04 00 00    	mov    %dl,0x4c6(%rax)
  f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  f5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  f8:	48 c1 e0 05          	shl    $0x5,%rax
  fc:	48 01 d0             	add    %rdx,%rax
  ff:	48 05 80 03 00 00    	add    $0x380,%rax
 105:	0f b6 10             	movzbl (%rax),%edx
 108:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10c:	88 90 ce 04 00 00    	mov    %dl,0x4ce(%rax)
 112:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 116:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 119:	48 c1 e0 05          	shl    $0x5,%rax
 11d:	48 01 d0             	add    %rdx,%rax
 120:	48 05 81 03 00 00    	add    $0x381,%rax
 126:	0f b6 10             	movzbl (%rax),%edx
 129:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 12d:	88 90 ed 04 00 00    	mov    %dl,0x4ed(%rax)
 133:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 137:	c6 80 ca 04 00 00 00 	movb   $0x0,0x4ca(%rax)
 13e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 142:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 145:	48 89 d0             	mov    %rdx,%rax
 148:	48 c1 e0 03          	shl    $0x3,%rax
 14c:	48 01 d0             	add    %rdx,%rax
 14f:	48 c1 e0 02          	shl    $0x2,%rax
 153:	48 01 c8             	add    %rcx,%rax
 156:	48 05 94 02 00 00    	add    $0x294,%rax
 15c:	0f b6 10             	movzbl (%rax),%edx
 15f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 163:	88 90 d6 04 00 00    	mov    %dl,0x4d6(%rax)
 169:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 16d:	c6 80 d2 04 00 00 00 	movb   $0x0,0x4d2(%rax)
 174:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 178:	8b 00                	mov    (%rax),%eax
 17a:	8d 50 01             	lea    0x1(%rax),%edx
 17d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 181:	89 10                	mov    %edx,(%rax)
 183:	90                   	nop
 184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 188:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 18f:	00 00 
 191:	74 05                	je     198 <ArtNetNode::ProcessPollRelply(unsigned int, unsigned int&, unsigned int&)+0x198>
 193:	e8 00 00 00 00       	call   198 <ArtNetNode::ProcessPollRelply(unsigned int, unsigned int&, unsigned int&)+0x198>
 198:	c9                   	leave  
 199:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode14SendPollRelplyEjjPN10artnetnode12ArtPollQueueE:

0000000000000000 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 50          	sub    $0x50,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  13:	89 55 c0             	mov    %edx,-0x40(%rbp)
  16:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  1a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  21:	00 00 
  23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  27:	31 c0                	xor    %eax,%eax
  29:	e8 00 00 00 00       	call   2e <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2e>
  2e:	48 89 c7             	mov    %rax,%rdi
  31:	e8 00 00 00 00       	call   36 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x36>
  36:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 3c <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x3c>
  3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40:	48 8d 90 22 04 00 00 	lea    0x422(%rax),%rdx
  47:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 4d <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x4d>
  4d:	89 02                	mov    %eax,(%rdx)
  4f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  53:	48 8d 90 e7 04 00 00 	lea    0x4e7(%rax),%rdx
  5a:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 60 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x60>
  60:	89 02                	mov    %eax,(%rdx)
  62:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  69:	e9 78 02 00 00       	jmp    2e6 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2e6>
  6e:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  72:	74 0f                	je     83 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x83>
  74:	8b 45 e8             	mov    -0x18(%rbp),%eax
  77:	83 c0 01             	add    $0x1,%eax
  7a:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
  7d:	0f 85 5b 02 00 00    	jne    2de <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2de>
  83:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  8a:	eb 31                	jmp    bd <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0xbd>
  8c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  90:	8b 45 ec             	mov    -0x14(%rbp),%eax
  93:	c6 84 02 c6 04 00 00 	movb   $0x0,0x4c6(%rdx,%rax,1)
  9a:	00 
  9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  9f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  a2:	c6 84 02 d2 04 00 00 	movb   $0x0,0x4d2(%rdx,%rax,1)
  a9:	00 
  aa:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  ae:	8b 45 ec             	mov    -0x14(%rbp),%eax
  b1:	c6 84 02 d6 04 00 00 	movb   $0x0,0x4d6(%rdx,%rax,1)
  b8:	00 
  b9:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  bd:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
  c1:	76 c9                	jbe    8c <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x8c>
  c3:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  c7:	8b 55 e8             	mov    -0x18(%rbp),%edx
  ca:	48 89 d0             	mov    %rdx,%rax
  cd:	48 c1 e0 03          	shl    $0x3,%rax
  d1:	48 01 d0             	add    %rdx,%rax
  d4:	48 c1 e0 02          	shl    $0x2,%rax
  d8:	48 01 c8             	add    %rcx,%rax
  db:	48 05 95 02 00 00    	add    $0x295,%rax
  e1:	0f b6 10             	movzbl (%rax),%edx
  e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  e8:	88 90 2a 04 00 00    	mov    %dl,0x42a(%rax)
  ee:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  f2:	8b 55 e8             	mov    -0x18(%rbp),%edx
  f5:	48 89 d0             	mov    %rdx,%rax
  f8:	48 c1 e0 03          	shl    $0x3,%rax
  fc:	48 01 d0             	add    %rdx,%rax
  ff:	48 c1 e0 02          	shl    $0x2,%rax
 103:	48 01 c8             	add    %rcx,%rax
 106:	48 05 96 02 00 00    	add    $0x296,%rax
 10c:	0f b6 10             	movzbl (%rax),%edx
 10f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 113:	88 90 2b 04 00 00    	mov    %dl,0x42b(%rax)
 119:	8b 45 e8             	mov    -0x18(%rbp),%eax
 11c:	8d 50 01             	lea    0x1(%rax),%edx
 11f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 123:	88 90 eb 04 00 00    	mov    %dl,0x4eb(%rax)
 129:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 130:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 137:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
 13b:	75 6b                	jne    1a8 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x1a8>
 13d:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
 142:	74 64                	je     1a8 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x1a8>
 144:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 148:	8b 55 e8             	mov    -0x18(%rbp),%edx
 14b:	48 89 d0             	mov    %rdx,%rax
 14e:	48 c1 e0 03          	shl    $0x3,%rax
 152:	48 01 d0             	add    %rdx,%rax
 155:	48 c1 e0 02          	shl    $0x2,%rax
 159:	48 01 c8             	add    %rcx,%rax
 15c:	48 05 92 02 00 00    	add    $0x292,%rax
 162:	0f b7 10             	movzwl (%rax),%edx
 165:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 169:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
 16d:	66 39 c2             	cmp    %ax,%dx
 170:	0f 82 6b 01 00 00    	jb     2e1 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2e1>
 176:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 17a:	8b 55 e8             	mov    -0x18(%rbp),%edx
 17d:	48 89 d0             	mov    %rdx,%rax
 180:	48 c1 e0 03          	shl    $0x3,%rax
 184:	48 01 d0             	add    %rdx,%rax
 187:	48 c1 e0 02          	shl    $0x2,%rax
 18b:	48 01 c8             	add    %rcx,%rax
 18e:	48 05 92 02 00 00    	add    $0x292,%rax
 194:	0f b7 10             	movzwl (%rax),%edx
 197:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 19b:	0f b7 40 08          	movzwl 0x8(%rax),%eax
 19f:	66 39 c2             	cmp    %ax,%dx
 1a2:	0f 87 39 01 00 00    	ja     2e1 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2e1>
 1a8:	8b 55 e8             	mov    -0x18(%rbp),%edx
 1ab:	48 89 d0             	mov    %rdx,%rax
 1ae:	48 c1 e0 03          	shl    $0x3,%rax
 1b2:	48 01 d0             	add    %rdx,%rax
 1b5:	48 c1 e0 02          	shl    $0x2,%rax
 1b9:	48 8d 90 70 02 00 00 	lea    0x270(%rax),%rdx
 1c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1c4:	48 01 d0             	add    %rdx,%rax
 1c7:	48 8d 48 10          	lea    0x10(%rax),%rcx
 1cb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1cf:	48 05 32 04 00 00    	add    $0x432,%rax
 1d5:	ba 12 00 00 00       	mov    $0x12,%edx
 1da:	48 89 ce             	mov    %rcx,%rsi
 1dd:	48 89 c7             	mov    %rax,%rdi
 1e0:	e8 00 00 00 00       	call   1e5 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x1e5>
 1e5:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
 1e9:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
 1ed:	8b 75 e8             	mov    -0x18(%rbp),%esi
 1f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1f4:	48 89 c7             	mov    %rax,%rdi
 1f7:	e8 00 00 00 00       	call   1fc <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x1fc>
 1fc:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
 200:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
 204:	48 89 d6             	mov    %rdx,%rsi
 207:	48 89 c7             	mov    %rax,%rdi
 20a:	e8 00 00 00 00       	call   20f <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x20f>
 20f:	8b 00                	mov    (%rax),%eax
 211:	89 c2                	mov    %eax,%edx
 213:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 217:	88 90 c5 04 00 00    	mov    %dl,0x4c5(%rax)
 21d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 221:	8b 80 18 03 00 00    	mov    0x318(%rax),%eax
 227:	8d 50 01             	lea    0x1(%rax),%edx
 22a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 22e:	89 90 18 03 00 00    	mov    %edx,0x318(%rax)
 234:	e8 00 00 00 00       	call   239 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x239>
 239:	48 89 c2             	mov    %rax,%rdx
 23c:	48 8d 45 df          	lea    -0x21(%rbp),%rax
 240:	48 89 c6             	mov    %rax,%rsi
 243:	48 89 d7             	mov    %rdx,%rdi
 246:	e8 00 00 00 00       	call   24b <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x24b>
 24b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 24f:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
 253:	0f b6 c8             	movzbl %al,%ecx
 256:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 25a:	8b 80 18 03 00 00    	mov    0x318(%rax),%eax
 260:	89 c6                	mov    %eax,%esi
 262:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 266:	0f b6 80 58 03 00 00 	movzbl 0x358(%rax),%eax
 26d:	0f b6 c0             	movzbl %al,%eax
 270:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 274:	48 8d ba 84 04 00 00 	lea    0x484(%rdx),%rdi
 27b:	48 83 ec 08          	sub    $0x8,%rsp
 27f:	ff 75 f0             	push   -0x10(%rbp)
 282:	41 89 c9             	mov    %ecx,%r9d
 285:	41 89 f0             	mov    %esi,%r8d
 288:	89 c1                	mov    %eax,%ecx
 28a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 291 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x291>
 291:	48 89 c2             	mov    %rax,%rdx
 294:	be 40 00 00 00       	mov    $0x40,%esi
 299:	b8 00 00 00 00       	mov    $0x0,%eax
 29e:	e8 00 00 00 00       	call   2a3 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2a3>
 2a3:	48 83 c4 10          	add    $0x10,%rsp
 2a7:	e8 00 00 00 00       	call   2ac <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2ac>
 2ac:	48 89 c7             	mov    %rax,%rdi
 2af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2b3:	48 8d 90 18 04 00 00 	lea    0x418(%rax),%rdx
 2ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2be:	8b 80 30 02 00 00    	mov    0x230(%rax),%eax
 2c4:	8b 4d c0             	mov    -0x40(%rbp),%ecx
 2c7:	41 b9 36 19 00 00    	mov    $0x1936,%r9d
 2cd:	41 89 c8             	mov    %ecx,%r8d
 2d0:	b9 ef 00 00 00       	mov    $0xef,%ecx
 2d5:	89 c6                	mov    %eax,%esi
 2d7:	e8 00 00 00 00       	call   2dc <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2dc>
 2dc:	eb 04                	jmp    2e2 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2e2>
 2de:	90                   	nop
 2df:	eb 01                	jmp    2e2 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x2e2>
 2e1:	90                   	nop
 2e2:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 2e6:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
 2ea:	0f 86 7e fd ff ff    	jbe    6e <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x6e>
 2f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2f4:	c6 80 5f 03 00 00 00 	movb   $0x0,0x35f(%rax)
 2fb:	90                   	nop
 2fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 300:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 307:	00 00 
 309:	74 05                	je     310 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x310>
 30b:	e8 00 00 00 00       	call   310 <ArtNetNode::SendPollRelply(unsigned int, unsigned int, artnetnode::ArtPollQueue*)+0x310>
 310:	c9                   	leave  
 311:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode10HandlePollEv:

0000000000000000 <ArtNetNode::HandlePoll()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 50          	sub    $0x50,%rsp
   c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  32:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  36:	0f b6 c0             	movzbl %al,%eax
  39:	83 e0 02             	and    $0x2,%eax
  3c:	85 c0                	test   %eax,%eax
  3e:	74 0d                	je     4d <ArtNetNode::HandlePoll()+0x4d>
  40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  44:	c6 80 5a 03 00 00 01 	movb   $0x1,0x35a(%rax)
  4b:	eb 0b                	jmp    58 <ArtNetNode::HandlePoll()+0x58>
  4d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  51:	c6 80 5a 03 00 00 00 	movb   $0x0,0x35a(%rax)
  58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5c:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  60:	0f b6 c0             	movzbl %al,%eax
  63:	83 e0 04             	and    $0x4,%eax
  66:	85 c0                	test   %eax,%eax
  68:	0f 84 1b 01 00 00    	je     189 <ArtNetNode::HandlePoll()+0x189>
  6e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  72:	c6 80 5b 03 00 00 01 	movb   $0x1,0x35b(%rax)
  79:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  7d:	8b 80 14 03 00 00    	mov    0x314(%rax),%eax
  83:	85 c0                	test   %eax,%eax
  85:	75 16                	jne    9d <ArtNetNode::HandlePoll()+0x9d>
  87:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  8b:	8b 90 40 02 00 00    	mov    0x240(%rax),%edx
  91:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  95:	89 90 14 03 00 00    	mov    %edx,0x314(%rax)
  9b:	eb 4c                	jmp    e9 <ArtNetNode::HandlePoll()+0xe9>
  9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  a1:	0f b6 80 5c 03 00 00 	movzbl 0x35c(%rax),%eax
  a8:	83 f0 01             	xor    $0x1,%eax
  ab:	84 c0                	test   %al,%al
  ad:	74 3a                	je     e9 <ArtNetNode::HandlePoll()+0xe9>
  af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  b3:	8b 90 14 03 00 00    	mov    0x314(%rax),%edx
  b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  bd:	8b 80 40 02 00 00    	mov    0x240(%rax),%eax
  c3:	39 c2                	cmp    %eax,%edx
  c5:	74 22                	je     e9 <ArtNetNode::HandlePoll()+0xe9>
  c7:	e8 00 00 00 00       	call   cc <ArtNetNode::HandlePoll()+0xcc>
  cc:	48 89 c7             	mov    %rax,%rdi
  cf:	e8 00 00 00 00       	call   d4 <ArtNetNode::HandlePoll()+0xd4>
  d4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  d8:	89 82 10 03 00 00    	mov    %eax,0x310(%rdx)
  de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  e2:	c6 80 5c 03 00 00 01 	movb   $0x1,0x35c(%rax)
  e9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  ed:	0f b6 80 5c 03 00 00 	movzbl 0x35c(%rax),%eax
  f4:	84 c0                	test   %al,%al
  f6:	74 2c                	je     124 <ArtNetNode::HandlePoll()+0x124>
  f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  fc:	48 8d 50 0d          	lea    0xd(%rax),%rdx
 100:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 104:	48 05 64 03 00 00    	add    $0x364,%rax
 10a:	48 89 d6             	mov    %rdx,%rsi
 10d:	48 89 c7             	mov    %rax,%rdi
 110:	e8 00 00 00 00       	call   115 <ArtNetNode::HandlePoll()+0x115>
 115:	0f b6 10             	movzbl (%rax),%edx
 118:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 11c:	88 90 64 03 00 00    	mov    %dl,0x364(%rax)
 122:	eb 12                	jmp    136 <ArtNetNode::HandlePoll()+0x136>
 124:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 128:	0f b6 50 0d          	movzbl 0xd(%rax),%edx
 12c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 130:	88 90 64 03 00 00    	mov    %dl,0x364(%rax)
 136:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 13a:	0f b6 80 5c 03 00 00 	movzbl 0x35c(%rax),%eax
 141:	83 f0 01             	xor    $0x1,%eax
 144:	84 c0                	test   %al,%al
 146:	74 28                	je     170 <ArtNetNode::HandlePoll()+0x170>
 148:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 14c:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
 150:	0f b6 c0             	movzbl %al,%eax
 153:	83 e0 08             	and    $0x8,%eax
 156:	85 c0                	test   %eax,%eax
 158:	74 16                	je     170 <ArtNetNode::HandlePoll()+0x170>
 15a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 15e:	8b 90 40 02 00 00    	mov    0x240(%rax),%edx
 164:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 168:	89 90 10 03 00 00    	mov    %edx,0x310(%rax)
 16e:	eb 32                	jmp    1a2 <ArtNetNode::HandlePoll()+0x1a2>
 170:	e8 00 00 00 00       	call   175 <ArtNetNode::HandlePoll()+0x175>
 175:	48 89 c7             	mov    %rax,%rdi
 178:	e8 00 00 00 00       	call   17d <ArtNetNode::HandlePoll()+0x17d>
 17d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 181:	89 82 10 03 00 00    	mov    %eax,0x310(%rdx)
 187:	eb 19                	jmp    1a2 <ArtNetNode::HandlePoll()+0x1a2>
 189:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 18d:	c6 80 5b 03 00 00 00 	movb   $0x0,0x35b(%rax)
 194:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 198:	c7 80 10 03 00 00 00 	movl   $0x0,0x310(%rax)
 19f:	00 00 00 
 1a2:	66 c7 45 cc ff 7f    	movw   $0x7fff,-0x34(%rbp)
 1a8:	66 c7 45 ce 00 00    	movw   $0x0,-0x32(%rbp)
 1ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1b2:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
 1b6:	0f b6 c0             	movzbl %al,%eax
 1b9:	83 e0 01             	and    $0x1,%eax
 1bc:	85 c0                	test   %eax,%eax
 1be:	74 42                	je     202 <ArtNetNode::HandlePoll()+0x202>
 1c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1c4:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
 1c8:	0f b6 c0             	movzbl %al,%eax
 1cb:	c1 f8 08             	sar    $0x8,%eax
 1ce:	89 c2                	mov    %eax,%edx
 1d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1d4:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
 1d8:	0f b6 c0             	movzbl %al,%eax
 1db:	09 d0                	or     %edx,%eax
 1dd:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
 1e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1e5:	0f b6 40 10          	movzbl 0x10(%rax),%eax
 1e9:	0f b6 c0             	movzbl %al,%eax
 1ec:	c1 f8 08             	sar    $0x8,%eax
 1ef:	89 c2                	mov    %eax,%edx
 1f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1f5:	0f b6 40 11          	movzbl 0x11(%rax),%eax
 1f9:	0f b6 c0             	movzbl %al,%eax
 1fc:	09 d0                	or     %edx,%eax
 1fe:	66 89 45 ce          	mov    %ax,-0x32(%rbp)
 202:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 206:	48 05 20 03 00 00    	add    $0x320,%rax
 20c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 210:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 214:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 218:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 21c:	48 83 c0 30          	add    $0x30,%rax
 220:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 224:	eb 55                	jmp    27b <ArtNetNode::HandlePoll()+0x27b>
 226:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 22a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 22e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 232:	8b 00                	mov    (%rax),%eax
 234:	85 c0                	test   %eax,%eax
 236:	75 3e                	jne    276 <ArtNetNode::HandlePoll()+0x276>
 238:	e8 00 00 00 00       	call   23d <ArtNetNode::HandlePoll()+0x23d>
 23d:	48 89 c7             	mov    %rax,%rdi
 240:	e8 00 00 00 00       	call   245 <ArtNetNode::HandlePoll()+0x245>
 245:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 249:	89 02                	mov    %eax,(%rdx)
 24b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 24f:	8b 90 40 02 00 00    	mov    0x240(%rax),%edx
 255:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 259:	89 50 04             	mov    %edx,0x4(%rax)
 25c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 260:	0f b7 55 cc          	movzwl -0x34(%rbp),%edx
 264:	66 89 50 08          	mov    %dx,0x8(%rax)
 268:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 26c:	0f b7 55 ce          	movzwl -0x32(%rbp),%edx
 270:	66 89 50 0a          	mov    %dx,0xa(%rax)
 274:	eb 0f                	jmp    285 <ArtNetNode::HandlePoll()+0x285>
 276:	48 83 45 d0 0c       	addq   $0xc,-0x30(%rbp)
 27b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 27f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 283:	75 a1                	jne    226 <ArtNetNode::HandlePoll()+0x226>
 285:	90                   	nop
 286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 28a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 291:	00 00 
 293:	74 05                	je     29a <ArtNetNode::HandlePoll()+0x29a>
 295:	e8 00 00 00 00       	call   29a <ArtNetNode::HandlePoll()+0x29a>
 29a:	c9                   	leave  
 29b:	c3                   	ret    

Disassembly of section .text._ZSt3maxIjERKT_S2_S2_:

0000000000000000 <unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	8b 10                	mov    (%rax),%edx
  29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  2d:	8b 00                	mov    (%rax),%eax
  2f:	39 c2                	cmp    %eax,%edx
  31:	73 06                	jae    39 <unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)+0x39>
  33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  37:	eb 04                	jmp    3d <unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)+0x3d>
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  48:	00 00 
  4a:	74 05                	je     51 <unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)+0x51>
  4c:	e8 00 00 00 00       	call   51 <unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)+0x51>
  51:	c9                   	leave  
  52:	c3                   	ret    

Disassembly of section .text._ZSt3minIhERKT_S2_S2_:

0000000000000000 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  27:	0f b6 10             	movzbl (%rax),%edx
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	0f b6 00             	movzbl (%rax),%eax
  31:	38 c2                	cmp    %al,%dl
  33:	73 06                	jae    3b <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x3b>
  35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  39:	eb 04                	jmp    3f <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x3f>
  3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  43:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4a:	00 00 
  4c:	74 05                	je     53 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x53>
  4e:	e8 00 00 00 00       	call   53 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x53>
  53:	c9                   	leave  
  54:	c3                   	ret    

artnetnodehandlesync.o:     file format elf64-x86-64


Disassembly of section .text._ZN10ArtNetNode8SendDiagEN6artnet13PriorityCodesEPKcz:

0000000000000000 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   f:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
  16:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
  1d:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  24:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  2b:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  32:	84 c0                	test   %al,%al
  34:	74 20                	je     56 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)+0x56>
  36:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  3a:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  3e:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  42:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  46:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  4a:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  4e:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  52:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  56:	89 f0                	mov    %esi,%eax
  58:	88 85 34 ff ff ff    	mov    %al,-0xcc(%rbp)
  5e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  65:	00 00 
  67:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6e:	31 c0                	xor    %eax,%eax
  70:	90                   	nop
  71:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  78:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  7f:	00 00 
  81:	74 05                	je     88 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)+0x88>
  83:	e8 00 00 00 00       	call   88 <ArtNetNode::SendDiag(artnet::PriorityCodes, char const*, ...)+0x88>
  88:	c9                   	leave  
  89:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode10HandleSyncEv:

0000000000000000 <ArtNetNode::HandleSync()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  23:	0f b6 80 5d 03 00 00 	movzbl 0x35d(%rax),%eax
  2a:	83 f0 01             	xor    $0x1,%eax
  2d:	84 c0                	test   %al,%al
  2f:	74 57                	je     88 <ArtNetNode::HandleSync()+0x88>
  31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  35:	c6 80 5d 03 00 00 01 	movb   $0x1,0x35d(%rax)
  3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
  47:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4b:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
  52:	48 8b 12             	mov    (%rdx),%rdx
  55:	48 83 c2 30          	add    $0x30,%rdx
  59:	48 8b 12             	mov    (%rdx),%rdx
  5c:	be 01 00 00 00       	mov    $0x1,%esi
  61:	48 89 c7             	mov    %rax,%rdi
  64:	ff d2                	call   *%rdx
  66:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  6a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 71 <ArtNetNode::HandleSync()+0x71>
  71:	be 10 00 00 00       	mov    $0x10,%esi
  76:	48 89 c7             	mov    %rax,%rdi
  79:	b8 00 00 00 00       	mov    $0x0,%eax
  7e:	e8 00 00 00 00       	call   83 <ArtNetNode::HandleSync()+0x83>
  83:	e9 32 01 00 00       	jmp    1ba <ArtNetNode::HandleSync()+0x1ba>
  88:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  8f:	eb 6b                	jmp    fc <ArtNetNode::HandleSync()+0xfc>
  91:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  95:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  98:	48 c1 e0 05          	shl    $0x5,%rax
  9c:	48 01 d0             	add    %rdx,%rax
  9f:	48 05 84 03 00 00    	add    $0x384,%rax
  a5:	0f b6 00             	movzbl (%rax),%eax
  a8:	84 c0                	test   %al,%al
  aa:	74 4c                	je     f8 <ArtNetNode::HandleSync()+0xf8>
  ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b0:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
  b7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  bb:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
  c2:	48 8b 12             	mov    (%rdx),%rdx
  c5:	48 83 c2 28          	add    $0x28,%rdx
  c9:	48 8b 0a             	mov    (%rdx),%rcx
  cc:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  cf:	89 d6                	mov    %edx,%esi
  d1:	48 89 c7             	mov    %rax,%rdi
  d4:	ff d1                	call   *%rcx
  d6:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  dd:	89 d1                	mov    %edx,%ecx
  df:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # e6 <ArtNetNode::HandleSync()+0xe6>
  e6:	be 10 00 00 00       	mov    $0x10,%esi
  eb:	48 89 c7             	mov    %rax,%rdi
  ee:	b8 00 00 00 00       	mov    $0x0,%eax
  f3:	e8 00 00 00 00       	call   f8 <ArtNetNode::HandleSync()+0xf8>
  f8:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
  fc:	83 7d d4 03          	cmpl   $0x3,-0x2c(%rbp)
 100:	76 8f                	jbe    91 <ArtNetNode::HandleSync()+0x91>
 102:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 106:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 10d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 111:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
 118:	48 8b 12             	mov    (%rdx),%rdx
 11b:	48 83 c2 30          	add    $0x30,%rdx
 11f:	48 8b 12             	mov    (%rdx),%rdx
 122:	be 00 00 00 00       	mov    $0x0,%esi
 127:	48 89 c7             	mov    %rax,%rdi
 12a:	ff d2                	call   *%rdx
 12c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 130:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 137 <ArtNetNode::HandleSync()+0x137>
 137:	be 10 00 00 00       	mov    $0x10,%esi
 13c:	48 89 c7             	mov    %rax,%rdi
 13f:	b8 00 00 00 00       	mov    $0x0,%eax
 144:	e8 00 00 00 00       	call   149 <ArtNetNode::HandleSync()+0x149>
 149:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 14d:	48 05 68 03 00 00    	add    $0x368,%rax
 153:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 157:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 15b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 15f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 163:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
 167:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 16b:	eb 43                	jmp    1b0 <ArtNetNode::HandleSync()+0x1b0>
 16d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 171:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 175:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 179:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
 17d:	84 c0                	test   %al,%al
 17f:	74 2a                	je     1ab <ArtNetNode::HandleSync()+0x1ab>
 181:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 185:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
 189:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 18d:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
 191:	83 f0 01             	xor    $0x1,%eax
 194:	84 c0                	test   %al,%al
 196:	74 13                	je     1ab <ArtNetNode::HandleSync()+0x1ab>
 198:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 19c:	c6 40 1b 01          	movb   $0x1,0x1b(%rax)
 1a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1a4:	c6 80 5f 03 00 00 01 	movb   $0x1,0x35f(%rax)
 1ab:	48 83 45 d8 20       	addq   $0x20,-0x28(%rbp)
 1b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1b4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 1b8:	75 b3                	jne    16d <ArtNetNode::HandleSync()+0x16d>
 1ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1be:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1c5:	00 00 
 1c7:	74 05                	je     1ce <ArtNetNode::HandleSync()+0x1ce>
 1c9:	e8 00 00 00 00       	call   1ce <ArtNetNode::HandleSync()+0x1ce>
 1ce:	c9                   	leave  
 1cf:	c3                   	ret    

artnetnodehandletimesync.o:     file format elf64-x86-64


Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Hardware::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Hardware::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Hardware::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode14HandleTimeSyncEv:

0000000000000000 <ArtNetNode::HandleTimeSync()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  2e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  32:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
  36:	0f b6 c0             	movzbl %al,%eax
  39:	89 45 c0             	mov    %eax,-0x40(%rbp)
  3c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  44:	0f b6 c0             	movzbl %al,%eax
  47:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4e:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  52:	0f b6 c0             	movzbl %al,%eax
  55:	89 45 c8             	mov    %eax,-0x38(%rbp)
  58:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  5c:	0f b6 40 12          	movzbl 0x12(%rax),%eax
  60:	0f b6 c0             	movzbl %al,%eax
  63:	89 45 cc             	mov    %eax,-0x34(%rbp)
  66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  6a:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  6e:	0f b6 c0             	movzbl %al,%eax
  71:	89 45 d0             	mov    %eax,-0x30(%rbp)
  74:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  78:	0f b6 40 14          	movzbl 0x14(%rax),%eax
  7c:	0f b6 c0             	movzbl %al,%eax
  7f:	c1 e0 08             	shl    $0x8,%eax
  82:	89 c2                	mov    %eax,%edx
  84:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  88:	0f b6 40 15          	movzbl 0x15(%rax),%eax
  8c:	0f b6 c0             	movzbl %al,%eax
  8f:	01 d0                	add    %edx,%eax
  91:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  94:	e8 00 00 00 00       	call   99 <ArtNetNode::HandleTimeSync()+0x99>
  99:	48 89 c2             	mov    %rax,%rdx
  9c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  a0:	48 89 c6             	mov    %rax,%rsi
  a3:	48 89 d7             	mov    %rdx,%rdi
  a6:	e8 00 00 00 00       	call   ab <ArtNetNode::HandleTimeSync()+0xab>
  ab:	90                   	nop
  ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  b7:	00 00 
  b9:	74 05                	je     c0 <ArtNetNode::HandleTimeSync()+0xc0>
  bb:	e8 00 00 00 00       	call   c0 <ArtNetNode::HandleTimeSync()+0xc0>
  c0:	c9                   	leave  
  c1:	c3                   	ret    

artnetnodeprint.o:     file format elf64-x86-64


Disassembly of section .text._ZN6artnet17get_protocol_modeENS_12PortProtocolEb:

0000000000000000 <artnet::get_protocol_mode(artnet::PortProtocol, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	40 84 f6             	test   %sil,%sil
  1b:	74 12                	je     2f <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x2f>
  1d:	85 ff                	test   %edi,%edi
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x26>
  26:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x2d>
  2d:	eb 10                	jmp    3f <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x3f>
  2f:	85 ff                	test   %edi,%edi
  31:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 38 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x38>
  38:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3f <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x3f>
  3f:	48 0f 45 c2          	cmovne %rdx,%rax
  43:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  48:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4f:	00 00 
  51:	74 05                	je     58 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x58>
  53:	e8 00 00 00 00       	call   58 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x58>
  58:	48 83 c4 18          	add    $0x18,%rsp
  5c:	c3                   	ret    

Disassembly of section .text._ZN8lightset14get_merge_modeENS_9MergeModeEb:

0000000000000000 <lightset::get_merge_mode(lightset::MergeMode, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	40 84 f6             	test   %sil,%sil
  1b:	74 12                	je     2f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x2f>
  1d:	85 ff                	test   %edi,%edi
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x26>
  26:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d <lightset::get_merge_mode(lightset::MergeMode, bool)+0x2d>
  2d:	eb 10                	jmp    3f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x3f>
  2f:	85 ff                	test   %edi,%edi
  31:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 38 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x38>
  38:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x3f>
  3f:	48 0f 45 c2          	cmovne %rdx,%rax
  43:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  48:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4f:	00 00 
  51:	74 05                	je     58 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x58>
  53:	e8 00 00 00 00       	call   58 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x58>
  58:	48 83 c4 18          	add    $0x18,%rsp
  5c:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode20GetActiveOutputPortsEv:

0000000000000000 <ArtNetNode::GetActiveOutputPorts() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	0f b6 87 62 03 00 00 	movzbl 0x362(%rdi),%eax
  1f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  24:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2b:	00 00 
  2d:	74 05                	je     34 <ArtNetNode::GetActiveOutputPorts() const+0x34>
  2f:	e8 00 00 00 00       	call   34 <ArtNetNode::GetActiveOutputPorts() const+0x34>
  34:	48 83 c4 18          	add    $0x18,%rsp
  38:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode14GetPortAddressEjRtN8lightset7PortDirE:

0000000000000000 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	83 f9 02             	cmp    $0x2,%ecx
  1b:	74 1c                	je     39 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x39>
  1d:	89 f6                	mov    %esi,%esi
  1f:	48 6b f6 24          	imul   $0x24,%rsi,%rsi
  23:	48 01 f7             	add    %rsi,%rdi
  26:	66 8b 87 92 02 00 00 	mov    0x292(%rdi),%ax
  2d:	39 8f 98 02 00 00    	cmp    %ecx,0x298(%rdi)
  33:	66 89 02             	mov    %ax,(%rdx)
  36:	0f 94 c0             	sete   %al
  39:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  3e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  45:	00 00 
  47:	74 05                	je     4e <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x4e>
  49:	e8 00 00 00 00       	call   4e <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x4e>
  4e:	48 83 c4 18          	add    $0x18,%rsp
  52:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode6GetRdmEj:

0000000000000000 <ArtNetNode::GetRdm(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	89 f6                	mov    %esi,%esi
   a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  11:	00 00 
  13:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  18:	31 c0                	xor    %eax,%eax
  1a:	48 c1 e6 05          	shl    $0x5,%rsi
  1e:	8a 84 3e 81 03 00 00 	mov    0x381(%rsi,%rdi,1),%al
  25:	f7 d0                	not    %eax
  27:	c0 e8 07             	shr    $0x7,%al
  2a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  2f:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  36:	00 00 
  38:	74 05                	je     3f <ArtNetNode::GetRdm(unsigned int) const+0x3f>
  3a:	e8 00 00 00 00       	call   3f <ArtNetNode::GetRdm(unsigned int) const+0x3f>
  3f:	48 83 c4 18          	add    $0x18,%rsp
  43:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode14IsMapUniverse0Ev:

0000000000000000 <ArtNetNode::IsMapUniverse0() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	8a 87 7d 02 00 00    	mov    0x27d(%rdi),%al
  1e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  23:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2a:	00 00 
  2c:	74 05                	je     33 <ArtNetNode::IsMapUniverse0() const+0x33>
  2e:	e8 00 00 00 00       	call   33 <ArtNetNode::IsMapUniverse0() const+0x33>
  33:	48 83 c4 18          	add    $0x18,%rsp
  37:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode5PrintEv:

0000000000000000 <ArtNetNode::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	be 04 00 00 00       	mov    $0x4,%esi
   b:	41 56                	push   %r14
   d:	41 55                	push   %r13
   f:	41 54                	push   %r12
  11:	55                   	push   %rbp
  12:	48 89 fd             	mov    %rdi,%rbp
  15:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1c <ArtNetNode::Print()+0x1c>
  1c:	53                   	push   %rbx
  1d:	48 83 ec 18          	sub    $0x18,%rsp
  21:	0f b6 0d 00 00 00 00 	movzbl 0x0(%rip),%ecx        # 28 <ArtNetNode::Print()+0x28>
  28:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 2f <ArtNetNode::Print()+0x2f>
  2f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  36:	00 00 
  38:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  3d:	31 c0                	xor    %eax,%eax
  3f:	e8 00 00 00 00       	call   44 <ArtNetNode::Print()+0x44>
  44:	31 c0                	xor    %eax,%eax
  46:	48 8d b5 44 04 00 00 	lea    0x444(%rbp),%rsi
  4d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 54 <ArtNetNode::Print()+0x54>
  54:	e8 00 00 00 00       	call   59 <ArtNetNode::Print()+0x59>
  59:	80 bd 62 03 00 00 00 	cmpb   $0x0,0x362(%rbp)
  60:	0f 84 b6 00 00 00    	je     11c <ArtNetNode::Print()+0x11c>
  66:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 6d <ArtNetNode::Print()+0x6d>
  6d:	31 db                	xor    %ebx,%ebx
  6f:	4c 8d 2d 00 00 00 00 	lea    0x0(%rip),%r13        # 76 <ArtNetNode::Print()+0x76>
  76:	e8 00 00 00 00       	call   7b <ArtNetNode::Print()+0x7b>
  7b:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
  80:	b9 01 00 00 00       	mov    $0x1,%ecx
  85:	89 de                	mov    %ebx,%esi
  87:	48 89 ef             	mov    %rbp,%rdi
  8a:	e8 00 00 00 00       	call   8f <ArtNetNode::Print()+0x8f>
  8f:	84 c0                	test   %al,%al
  91:	74 7c                	je     10f <ArtNetNode::Print()+0x10f>
  93:	48 89 d8             	mov    %rbx,%rax
  96:	31 f6                	xor    %esi,%esi
  98:	4c 8d 3d 00 00 00 00 	lea    0x0(%rip),%r15        # 9f <ArtNetNode::Print()+0x9f>
  9f:	48 89 ef             	mov    %rbp,%rdi
  a2:	48 c1 e0 05          	shl    $0x5,%rax
  a6:	44 0f b6 a4 05 80 03 	movzbl 0x380(%rbp,%rax,1),%r12d
  ad:	00 00 
  af:	e8 00 00 00 00       	call   b4 <ArtNetNode::Print()+0xb4>
  b4:	be 01 00 00 00       	mov    $0x1,%esi
  b9:	41 d1 fc             	sar    %r12d
  bc:	41 83 e4 01          	and    $0x1,%r12d
  c0:	84 c0                	test   %al,%al
  c2:	4d 0f 45 fd          	cmovne %r13,%r15
  c6:	44 89 e7             	mov    %r12d,%edi
  c9:	e8 00 00 00 00       	call   ce <ArtNetNode::Print()+0xce>
  ce:	0f b7 54 24 06       	movzwl 0x6(%rsp),%edx
  d3:	89 de                	mov    %ebx,%esi
  d5:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # dc <ArtNetNode::Print()+0xdc>
  dc:	48 89 c1             	mov    %rax,%rcx
  df:	4d 89 f8             	mov    %r15,%r8
  e2:	31 c0                	xor    %eax,%eax
  e4:	e8 00 00 00 00       	call   e9 <ArtNetNode::Print()+0xe9>
  e9:	48 6b c3 24          	imul   $0x24,%rbx,%rax
  ed:	be 01 00 00 00       	mov    $0x1,%esi
  f2:	8b bc 05 9c 02 00 00 	mov    0x29c(%rbp,%rax,1),%edi
  f9:	e8 00 00 00 00       	call   fe <ArtNetNode::Print()+0xfe>
  fe:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 105 <ArtNetNode::Print()+0x105>
 105:	48 89 c6             	mov    %rax,%rsi
 108:	31 c0                	xor    %eax,%eax
 10a:	e8 00 00 00 00       	call   10f <ArtNetNode::Print()+0x10f>
 10f:	48 ff c3             	inc    %rbx
 112:	48 83 fb 04          	cmp    $0x4,%rbx
 116:	0f 85 5f ff ff ff    	jne    7b <ArtNetNode::Print()+0x7b>
 11c:	48 89 ef             	mov    %rbp,%rdi
 11f:	e8 00 00 00 00       	call   124 <ArtNetNode::Print()+0x124>
 124:	85 c0                	test   %eax,%eax
 126:	74 18                	je     140 <ArtNetNode::Print()+0x140>
 128:	48 89 ef             	mov    %rbp,%rdi
 12b:	e8 00 00 00 00       	call   130 <ArtNetNode::Print()+0x130>
 130:	84 c0                	test   %al,%al
 132:	74 0c                	je     140 <ArtNetNode::Print()+0x140>
 134:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 13b <ArtNetNode::Print()+0x13b>
 13b:	e8 00 00 00 00       	call   140 <ArtNetNode::Print()+0x140>
 140:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 145:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 14c:	00 00 
 14e:	74 05                	je     155 <ArtNetNode::Print()+0x155>
 150:	e8 00 00 00 00       	call   155 <ArtNetNode::Print()+0x155>
 155:	48 83 c4 18          	add    $0x18,%rsp
 159:	48 89 ef             	mov    %rbp,%rdi
 15c:	5b                   	pop    %rbx
 15d:	5d                   	pop    %rbp
 15e:	41 5c                	pop    %r12
 160:	41 5d                	pop    %r13
 162:	41 5e                	pop    %r14
 164:	41 5f                	pop    %r15
 166:	e9 00 00 00 00       	jmp    16b <.LC15+0x11d>

artnetparamsconst.o:     file format elf64-x86-64


artnetparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN6artnet17get_protocol_modeENS_12PortProtocolEb:

0000000000000000 <artnet::get_protocol_mode(artnet::PortProtocol, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	40 84 f6             	test   %sil,%sil
  1b:	74 12                	je     2f <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x2f>
  1d:	85 ff                	test   %edi,%edi
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x26>
  26:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x2d>
  2d:	eb 10                	jmp    3f <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x3f>
  2f:	85 ff                	test   %edi,%edi
  31:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 38 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x38>
  38:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3f <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x3f>
  3f:	48 0f 45 c2          	cmovne %rdx,%rax
  43:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  48:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4f:	00 00 
  51:	74 05                	je     58 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x58>
  53:	e8 00 00 00 00       	call   58 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x58>
  58:	48 83 c4 18          	add    $0x18,%rsp
  5c:	c3                   	ret    

Disassembly of section .text._ZN6artnet17get_protocol_modeEPKc:

0000000000000000 <artnet::get_protocol_mode(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 85 ff             	test   %rdi,%rdi
  1b:	74 2e                	je     4b <artnet::get_protocol_mode(char const*)+0x4b>
  1d:	8a 17                	mov    (%rdi),%dl
  1f:	83 ca 20             	or     $0x20,%edx
  22:	80 fa 73             	cmp    $0x73,%dl
  25:	75 24                	jne    4b <artnet::get_protocol_mode(char const*)+0x4b>
  27:	8a 57 01             	mov    0x1(%rdi),%dl
  2a:	83 ca 20             	or     $0x20,%edx
  2d:	80 fa 61             	cmp    $0x61,%dl
  30:	75 19                	jne    4b <artnet::get_protocol_mode(char const*)+0x4b>
  32:	8a 57 02             	mov    0x2(%rdi),%dl
  35:	83 ca 20             	or     $0x20,%edx
  38:	80 fa 63             	cmp    $0x63,%dl
  3b:	75 0e                	jne    4b <artnet::get_protocol_mode(char const*)+0x4b>
  3d:	8a 47 03             	mov    0x3(%rdi),%al
  40:	83 c8 20             	or     $0x20,%eax
  43:	3c 6e                	cmp    $0x6e,%al
  45:	0f 94 c0             	sete   %al
  48:	0f b6 c0             	movzbl %al,%eax
  4b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  50:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  57:	00 00 
  59:	74 05                	je     60 <artnet::get_protocol_mode(char const*)+0x60>
  5b:	e8 00 00 00 00       	call   60 <artnet::get_protocol_mode(char const*)+0x60>
  60:	48 83 c4 18          	add    $0x18,%rsp
  64:	c3                   	ret    

Disassembly of section .text._ZN8lightset4node22get_short_name_defaultEjPc:

0000000000000000 <lightset::node::get_short_name_default(unsigned int, char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  1d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  24:	00 00 
  26:	74 05                	je     2d <lightset::node::get_short_name_default(unsigned int, char*)+0x2d>
  28:	e8 00 00 00 00       	call   2d <lightset::node::get_short_name_default(unsigned int, char*)+0x2d>
  2d:	89 f9                	mov    %edi,%ecx
  2f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 36 <lightset::node::get_short_name_default(unsigned int, char*)+0x36>
  36:	48 89 f7             	mov    %rsi,%rdi
  39:	31 c0                	xor    %eax,%eax
  3b:	ff c1                	inc    %ecx
  3d:	be 11 00 00 00       	mov    $0x11,%esi
  42:	48 83 c4 18          	add    $0x18,%rsp
  46:	e9 00 00 00 00       	jmp    4b <.LC21+0x36>

Disassembly of section .text._ZN8lightset14get_merge_modeEPKc:

0000000000000000 <lightset::get_merge_mode(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 85 ff             	test   %rdi,%rdi
  1b:	74 23                	je     40 <lightset::get_merge_mode(char const*)+0x40>
  1d:	8a 17                	mov    (%rdi),%dl
  1f:	83 ca 20             	or     $0x20,%edx
  22:	80 fa 6c             	cmp    $0x6c,%dl
  25:	75 19                	jne    40 <lightset::get_merge_mode(char const*)+0x40>
  27:	8a 57 01             	mov    0x1(%rdi),%dl
  2a:	83 ca 20             	or     $0x20,%edx
  2d:	80 fa 74             	cmp    $0x74,%dl
  30:	75 0e                	jne    40 <lightset::get_merge_mode(char const*)+0x40>
  32:	8a 47 02             	mov    0x2(%rdi),%al
  35:	83 c8 20             	or     $0x20,%eax
  38:	3c 70                	cmp    $0x70,%al
  3a:	0f 94 c0             	sete   %al
  3d:	0f b6 c0             	movzbl %al,%eax
  40:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  45:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4c:	00 00 
  4e:	74 05                	je     55 <lightset::get_merge_mode(char const*)+0x55>
  50:	e8 00 00 00 00       	call   55 <lightset::get_merge_mode(char const*)+0x55>
  55:	48 83 c4 18          	add    $0x18,%rsp
  59:	c3                   	ret    

Disassembly of section .text._ZN8lightset14get_merge_modeENS_9MergeModeEb:

0000000000000000 <lightset::get_merge_mode(lightset::MergeMode, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	40 84 f6             	test   %sil,%sil
  1b:	74 12                	je     2f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x2f>
  1d:	85 ff                	test   %edi,%edi
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x26>
  26:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d <lightset::get_merge_mode(lightset::MergeMode, bool)+0x2d>
  2d:	eb 10                	jmp    3f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x3f>
  2f:	85 ff                	test   %edi,%edi
  31:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 38 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x38>
  38:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x3f>
  3f:	48 0f 45 c2          	cmovne %rdx,%rax
  43:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  48:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4f:	00 00 
  51:	74 05                	je     58 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x58>
  53:	e8 00 00 00 00       	call   58 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x58>
  58:	48 83 c4 18          	add    $0x18,%rsp
  5c:	c3                   	ret    

Disassembly of section .text._ZN8lightset13get_directionEPKc:

0000000000000000 <lightset::get_direction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	b8 01 00 00 00       	mov    $0x1,%eax
  1b:	48 85 ff             	test   %rdi,%rdi
  1e:	0f 84 8c 00 00 00    	je     b0 <lightset::get_direction(char const*)+0xb0>
  24:	8a 17                	mov    (%rdi),%dl
  26:	83 ca 20             	or     $0x20,%edx
  29:	80 fa 69             	cmp    $0x69,%dl
  2c:	75 31                	jne    5f <lightset::get_direction(char const*)+0x5f>
  2e:	8a 57 01             	mov    0x1(%rdi),%dl
  31:	83 ca 20             	or     $0x20,%edx
  34:	80 fa 6e             	cmp    $0x6e,%dl
  37:	75 77                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  39:	8a 57 02             	mov    0x2(%rdi),%dl
  3c:	83 ca 20             	or     $0x20,%edx
  3f:	80 fa 70             	cmp    $0x70,%dl
  42:	75 6c                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  44:	8a 57 03             	mov    0x3(%rdi),%dl
  47:	83 ca 20             	or     $0x20,%edx
  4a:	80 fa 75             	cmp    $0x75,%dl
  4d:	75 61                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  4f:	8a 47 04             	mov    0x4(%rdi),%al
  52:	83 c8 20             	or     $0x20,%eax
  55:	3c 74                	cmp    $0x74,%al
  57:	0f 95 c0             	setne  %al
  5a:	0f b6 c0             	movzbl %al,%eax
  5d:	eb 51                	jmp    b0 <lightset::get_direction(char const*)+0xb0>
  5f:	b8 01 00 00 00       	mov    $0x1,%eax
  64:	80 fa 64             	cmp    $0x64,%dl
  67:	75 47                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  69:	8a 57 01             	mov    0x1(%rdi),%dl
  6c:	83 ca 20             	or     $0x20,%edx
  6f:	80 fa 69             	cmp    $0x69,%dl
  72:	75 3c                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  74:	8a 57 02             	mov    0x2(%rdi),%dl
  77:	83 ca 20             	or     $0x20,%edx
  7a:	80 fa 73             	cmp    $0x73,%dl
  7d:	75 31                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  7f:	8a 57 03             	mov    0x3(%rdi),%dl
  82:	83 ca 20             	or     $0x20,%edx
  85:	80 fa 61             	cmp    $0x61,%dl
  88:	75 26                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  8a:	8a 57 04             	mov    0x4(%rdi),%dl
  8d:	83 ca 20             	or     $0x20,%edx
  90:	80 fa 62             	cmp    $0x62,%dl
  93:	75 1b                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  95:	8a 57 05             	mov    0x5(%rdi),%dl
  98:	83 ca 20             	or     $0x20,%edx
  9b:	80 fa 6c             	cmp    $0x6c,%dl
  9e:	75 10                	jne    b0 <lightset::get_direction(char const*)+0xb0>
  a0:	8a 47 06             	mov    0x6(%rdi),%al
  a3:	83 c8 20             	or     $0x20,%eax
  a6:	3c 65                	cmp    $0x65,%al
  a8:	0f 94 c0             	sete   %al
  ab:	0f b6 c0             	movzbl %al,%eax
  ae:	ff c0                	inc    %eax
  b0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  b5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  bc:	00 00 
  be:	74 05                	je     c5 <lightset::get_direction(char const*)+0xc5>
  c0:	e8 00 00 00 00       	call   c5 <lightset::get_direction(char const*)+0xc5>
  c5:	48 83 c4 18          	add    $0x18,%rsp
  c9:	c3                   	ret    

Disassembly of section .text._ZN8lightset13get_directionENS_7PortDirE:

0000000000000000 <lightset::get_direction(lightset::PortDir)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f <lightset::get_direction(lightset::PortDir)+0x1f>
  1f:	85 ff                	test   %edi,%edi
  21:	74 15                	je     38 <lightset::get_direction(lightset::PortDir)+0x38>
  23:	83 ff 02             	cmp    $0x2,%edi
  26:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2d <lightset::get_direction(lightset::PortDir)+0x2d>
  2d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 34 <lightset::get_direction(lightset::PortDir)+0x34>
  34:	48 0f 44 c2          	cmove  %rdx,%rax
  38:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  3d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  44:	00 00 
  46:	74 05                	je     4d <lightset::get_direction(lightset::PortDir)+0x4d>
  48:	e8 00 00 00 00       	call   4d <lightset::get_direction(lightset::PortDir)+0x4d>
  4d:	48 83 c4 18          	add    $0x18,%rsp
  51:	c3                   	ret    

Disassembly of section .text._ZN8lightset12get_failsafeEPKc:

0000000000000000 <lightset::get_failsafe(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	ba 04 00 00 00       	mov    $0x4,%edx
   a:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 11 <lightset::get_failsafe(char const*)+0x11>
  11:	48 89 fd             	mov    %rdi,%rbp
  14:	48 83 ec 10          	sub    $0x10,%rsp
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  26:	31 c0                	xor    %eax,%eax
  28:	e8 00 00 00 00       	call   2d <lightset::get_failsafe(char const*)+0x2d>
  2d:	85 c0                	test   %eax,%eax
  2f:	74 5e                	je     8f <lightset::get_failsafe(char const*)+0x8f>
  31:	ba 03 00 00 00       	mov    $0x3,%edx
  36:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3d <lightset::get_failsafe(char const*)+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	e8 00 00 00 00       	call   45 <lightset::get_failsafe(char const*)+0x45>
  45:	41 89 c0             	mov    %eax,%r8d
  48:	b8 01 00 00 00       	mov    $0x1,%eax
  4d:	45 85 c0             	test   %r8d,%r8d
  50:	74 3d                	je     8f <lightset::get_failsafe(char const*)+0x8f>
  52:	ba 02 00 00 00       	mov    $0x2,%edx
  57:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5e <lightset::get_failsafe(char const*)+0x5e>
  5e:	48 89 ef             	mov    %rbp,%rdi
  61:	e8 00 00 00 00       	call   66 <lightset::get_failsafe(char const*)+0x66>
  66:	41 89 c0             	mov    %eax,%r8d
  69:	b8 02 00 00 00       	mov    $0x2,%eax
  6e:	45 85 c0             	test   %r8d,%r8d
  71:	74 1c                	je     8f <lightset::get_failsafe(char const*)+0x8f>
  73:	ba 08 00 00 00       	mov    $0x8,%edx
  78:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 7f <lightset::get_failsafe(char const*)+0x7f>
  7f:	48 89 ef             	mov    %rbp,%rdi
  82:	e8 00 00 00 00       	call   87 <lightset::get_failsafe(char const*)+0x87>
  87:	83 f8 01             	cmp    $0x1,%eax
  8a:	19 c0                	sbb    %eax,%eax
  8c:	83 e0 03             	and    $0x3,%eax
  8f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  94:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  9b:	00 00 
  9d:	74 05                	je     a4 <lightset::get_failsafe(char const*)+0xa4>
  9f:	e8 00 00 00 00       	call   a4 <lightset::get_failsafe(char const*)+0xa4>
  a4:	48 83 c4 10          	add    $0x10,%rsp
  a8:	5d                   	pop    %rbp
  a9:	c3                   	ret    

Disassembly of section .text._ZN8lightset12get_failsafeENS_8FailSafeE:

0000000000000000 <lightset::get_failsafe(lightset::FailSafe)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1d <lightset::get_failsafe(lightset::FailSafe)+0x1d>
  1d:	83 ff 02             	cmp    $0x2,%edi
  20:	74 1d                	je     3f <lightset::get_failsafe(lightset::FailSafe)+0x3f>
  22:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 29 <lightset::get_failsafe(lightset::FailSafe)+0x29>
  29:	7f 14                	jg     3f <lightset::get_failsafe(lightset::FailSafe)+0x3f>
  2b:	85 ff                	test   %edi,%edi
  2d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 34 <lightset::get_failsafe(lightset::FailSafe)+0x34>
  34:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3b <lightset::get_failsafe(lightset::FailSafe)+0x3b>
  3b:	48 0f 44 c2          	cmove  %rdx,%rax
  3f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  44:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4b:	00 00 
  4d:	74 05                	je     54 <lightset::get_failsafe(lightset::FailSafe)+0x54>
  4f:	e8 00 00 00 00       	call   54 <lightset::get_failsafe(lightset::FailSafe)+0x54>
  54:	48 83 c4 18          	add    $0x18,%rsp
  58:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL10clear_maskEj:

0000000000000000 <artnetparams::clear_mask(unsigned int)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	ba 01 00 00 00       	mov    $0x1,%edx
   9:	8d 4f 08             	lea    0x8(%rdi),%ecx
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  1a:	31 c0                	xor    %eax,%eax
  1c:	89 d0                	mov    %edx,%eax
  1e:	d3 e0                	shl    %cl,%eax
  20:	89 f9                	mov    %edi,%ecx
  22:	d3 e2                	shl    %cl,%edx
  24:	09 d0                	or     %edx,%eax
  26:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  2b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  32:	00 00 
  34:	74 05                	je     3b <artnetparams::clear_mask(unsigned int)+0x3b>
  36:	e8 00 00 00 00       	call   3b <artnetparams::clear_mask(unsigned int)+0x3b>
  3b:	f7 d0                	not    %eax
  3d:	48 83 c4 18          	add    $0x18,%rsp
  41:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL10shift_leftEjj:

0000000000000000 <artnetparams::shift_left(unsigned int, unsigned int)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	89 f1                	mov    %esi,%ecx
   6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   d:	00 00 
   f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  14:	89 f8                	mov    %edi,%eax
  16:	83 e0 01             	and    $0x1,%eax
  19:	d3 e0                	shl    %cl,%eax
  1b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  20:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  27:	00 00 
  29:	74 05                	je     30 <artnetparams::shift_left(unsigned int, unsigned int)+0x30>
  2b:	e8 00 00 00 00       	call   30 <artnetparams::shift_left(unsigned int, unsigned int)+0x30>
  30:	48 83 c4 18          	add    $0x18,%rsp
  34:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL13portdir_clearEj:

0000000000000000 <artnetparams::portdir_clear(unsigned int)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
   7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   e:	00 00 
  10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  15:	31 c0                	xor    %eax,%eax
  17:	b8 03 00 00 00       	mov    $0x3,%eax
  1c:	d3 e0                	shl    %cl,%eax
  1e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  23:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2a:	00 00 
  2c:	74 05                	je     33 <artnetparams::portdir_clear(unsigned int)+0x33>
  2e:	e8 00 00 00 00       	call   33 <artnetparams::portdir_clear(unsigned int)+0x33>
  33:	f7 d0                	not    %eax
  35:	48 83 c4 18          	add    $0x18,%rsp
  39:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL15mergemode_clearEj:

0000000000000000 <artnetparams::mergemode_clear(unsigned int)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
   7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   e:	00 00 
  10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  15:	31 c0                	xor    %eax,%eax
  17:	b8 03 00 00 00       	mov    $0x3,%eax
  1c:	d3 e0                	shl    %cl,%eax
  1e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  23:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2a:	00 00 
  2c:	74 05                	je     33 <artnetparams::mergemode_clear(unsigned int)+0x33>
  2e:	e8 00 00 00 00       	call   33 <artnetparams::mergemode_clear(unsigned int)+0x33>
  33:	f7 d0                	not    %eax
  35:	48 83 c4 18          	add    $0x18,%rsp
  39:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL13mergemode_setEjN8lightset9MergeModeE:

0000000000000000 <artnetparams::mergemode_set(unsigned int, lightset::MergeMode)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
   7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   e:	00 00 
  10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  15:	89 f0                	mov    %esi,%eax
  17:	83 e0 03             	and    $0x3,%eax
  1a:	d3 e0                	shl    %cl,%eax
  1c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  21:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  28:	00 00 
  2a:	74 05                	je     31 <artnetparams::mergemode_set(unsigned int, lightset::MergeMode)+0x31>
  2c:	e8 00 00 00 00       	call   31 <artnetparams::mergemode_set(unsigned int, lightset::MergeMode)+0x31>
  31:	48 83 c4 18          	add    $0x18,%rsp
  35:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL14protocol_clearEj:

0000000000000000 <artnetparams::protocol_clear(unsigned int)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
   7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   e:	00 00 
  10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  15:	31 c0                	xor    %eax,%eax
  17:	b8 03 00 00 00       	mov    $0x3,%eax
  1c:	d3 e0                	shl    %cl,%eax
  1e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  23:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2a:	00 00 
  2c:	74 05                	je     33 <artnetparams::protocol_clear(unsigned int)+0x33>
  2e:	e8 00 00 00 00       	call   33 <artnetparams::protocol_clear(unsigned int)+0x33>
  33:	f7 d0                	not    %eax
  35:	48 83 c4 18          	add    $0x18,%rsp
  39:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL12protocol_setEjN6artnet12PortProtocolE:

0000000000000000 <artnetparams::protocol_set(unsigned int, artnet::PortProtocol)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
   7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   e:	00 00 
  10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  15:	89 f0                	mov    %esi,%eax
  17:	83 e0 03             	and    $0x3,%eax
  1a:	d3 e0                	shl    %cl,%eax
  1c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  21:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  28:	00 00 
  2a:	74 05                	je     31 <artnetparams::protocol_set(unsigned int, artnet::PortProtocol)+0x31>
  2c:	e8 00 00 00 00       	call   31 <artnetparams::protocol_set(unsigned int, artnet::PortProtocol)+0x31>
  31:	48 83 c4 18          	add    $0x18,%rsp
  35:	c3                   	ret    

Disassembly of section .text._ZNK12ArtNetParams11portdir_getEj:

0000000000000000 <ArtNetParams::portdir_get(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	8d 0c 36             	lea    (%rsi,%rsi,1),%ecx
   b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  12:	00 00 
  14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  19:	31 c0                	xor    %eax,%eax
  1b:	0f b7 47 15          	movzwl 0x15(%rdi),%eax
  1f:	d3 f8                	sar    %cl,%eax
  21:	83 e0 03             	and    $0x3,%eax
  24:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  29:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  30:	00 00 
  32:	74 05                	je     39 <ArtNetParams::portdir_get(unsigned int) const+0x39>
  34:	e8 00 00 00 00       	call   39 <ArtNetParams::portdir_get(unsigned int) const+0x39>
  39:	48 83 c4 18          	add    $0x18,%rsp
  3d:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams11portdir_setEjN8lightset7PortDirE:

0000000000000000 <ArtNetParams::portdir_set(unsigned int, lightset::PortDir)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	8d 0c 36             	lea    (%rsi,%rsi,1),%ecx
   b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  12:	00 00 
  14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  19:	89 d0                	mov    %edx,%eax
  1b:	83 e0 03             	and    $0x3,%eax
  1e:	d3 e0                	shl    %cl,%eax
  20:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  25:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2c:	00 00 
  2e:	74 05                	je     35 <ArtNetParams::portdir_set(unsigned int, lightset::PortDir)+0x35>
  30:	e8 00 00 00 00       	call   35 <ArtNetParams::portdir_set(unsigned int, lightset::PortDir)+0x35>
  35:	48 83 c4 18          	add    $0x18,%rsp
  39:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams13mergemode_getEj:

0000000000000000 <ArtNetParams::mergemode_get(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	8d 0c 36             	lea    (%rsi,%rsi,1),%ecx
   b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  12:	00 00 
  14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  19:	31 c0                	xor    %eax,%eax
  1b:	0f b7 47 17          	movzwl 0x17(%rdi),%eax
  1f:	d3 f8                	sar    %cl,%eax
  21:	83 e0 03             	and    $0x3,%eax
  24:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  29:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  30:	00 00 
  32:	74 05                	je     39 <ArtNetParams::mergemode_get(unsigned int)+0x39>
  34:	e8 00 00 00 00       	call   39 <ArtNetParams::mergemode_get(unsigned int)+0x39>
  39:	48 83 c4 18          	add    $0x18,%rsp
  3d:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams12protocol_getEj:

0000000000000000 <ArtNetParams::protocol_get(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	8d 0c 36             	lea    (%rsi,%rsi,1),%ecx
   b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  12:	00 00 
  14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  19:	31 c0                	xor    %eax,%eax
  1b:	0f b7 87 a4 00 00 00 	movzwl 0xa4(%rdi),%eax
  22:	d3 f8                	sar    %cl,%eax
  24:	83 e0 03             	and    $0x3,%eax
  27:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  2c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  33:	00 00 
  35:	74 05                	je     3c <ArtNetParams::protocol_get(unsigned int)+0x3c>
  37:	e8 00 00 00 00       	call   3c <ArtNetParams::protocol_get(unsigned int)+0x3c>
  3c:	48 83 c4 18          	add    $0x18,%rsp
  40:	c3                   	ret    

Disassembly of section .text._ZNK12ArtNetParams9isMaskSetEj:

0000000000000000 <ArtNetParams::isMaskSet(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	89 f0                	mov    %esi,%eax
  18:	23 47 08             	and    0x8(%rdi),%eax
  1b:	39 f0                	cmp    %esi,%eax
  1d:	0f 94 c0             	sete   %al
  20:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  25:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2c:	00 00 
  2e:	74 05                	je     35 <ArtNetParams::isMaskSet(unsigned int) const+0x35>
  30:	e8 00 00 00 00       	call   35 <ArtNetParams::isMaskSet(unsigned int) const+0x35>
  35:	48 83 c4 18          	add    $0x18,%rsp
  39:	c3                   	ret    

Disassembly of section .text._ZN10E131Bridge22SetDisableMergeTimeoutEb:

0000000000000000 <E131Bridge::SetDisableMergeTimeout(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	40 88 77 79          	mov    %sil,0x79(%rdi)
  1c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  21:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  28:	00 00 
  2a:	74 05                	je     31 <E131Bridge::SetDisableMergeTimeout(bool)+0x31>
  2c:	e8 00 00 00 00       	call   31 <E131Bridge::SetDisableMergeTimeout(bool)+0x31>
  31:	48 83 c4 18          	add    $0x18,%rsp
  35:	c3                   	ret    

Disassembly of section .text._ZN10E131Bridge11SetPriorityEjh:

0000000000000000 <E131Bridge::SetPriority(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	8d 42 ff             	lea    -0x1(%rdx),%eax
  1b:	3c c7                	cmp    $0xc7,%al
  1d:	77 0d                	ja     2c <E131Bridge::SetPriority(unsigned int, unsigned char)+0x2c>
  1f:	89 f6                	mov    %esi,%esi
  21:	48 6b f6 0c          	imul   $0xc,%rsi,%rsi
  25:	88 94 37 e1 01 00 00 	mov    %dl,0x1e1(%rdi,%rsi,1)
  2c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  31:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  38:	00 00 
  3a:	74 05                	je     41 <E131Bridge::SetPriority(unsigned int, unsigned char)+0x41>
  3c:	e8 00 00 00 00       	call   41 <E131Bridge::SetPriority(unsigned int, unsigned char)+0x41>
  41:	48 83 c4 18          	add    $0x18,%rsp
  45:	c3                   	ret    

Disassembly of section .text._ZN10artnetnode16convert_failsafeEN8lightset8FailSafeE:

0000000000000000 <artnetnode::convert_failsafe(lightset::FailSafe)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  1d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  24:	00 00 
  26:	74 05                	je     2d <artnetnode::convert_failsafe(lightset::FailSafe)+0x2d>
  28:	e8 00 00 00 00       	call   2d <artnetnode::convert_failsafe(lightset::FailSafe)+0x2d>
  2d:	8d 47 08             	lea    0x8(%rdi),%eax
  30:	48 83 c4 18          	add    $0x18,%rsp
  34:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode12GetShortNameEj:

0000000000000000 <ArtNetNode::GetShortName(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	89 f6                	mov    %esi,%esi
   a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  11:	00 00 
  13:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  18:	31 c0                	xor    %eax,%eax
  1a:	48 6b f6 24          	imul   $0x24,%rsi,%rsi
  1e:	48 8d 84 3e 80 02 00 	lea    0x280(%rsi,%rdi,1),%rax
  25:	00 
  26:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  2b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  32:	00 00 
  34:	74 05                	je     3b <ArtNetNode::GetShortName(unsigned int) const+0x3b>
  36:	e8 00 00 00 00       	call   3b <ArtNetNode::GetShortName(unsigned int) const+0x3b>
  3b:	48 83 c4 18          	add    $0x18,%rsp
  3f:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode11GetLongNameEv:

0000000000000000 <ArtNetNode::GetLongName() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  1d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  24:	00 00 
  26:	74 05                	je     2d <ArtNetNode::GetLongName() const+0x2d>
  28:	e8 00 00 00 00       	call   2d <ArtNetNode::GetLongName() const+0x2d>
  2d:	48 8d 87 44 04 00 00 	lea    0x444(%rdi),%rax
  34:	48 83 c4 18          	add    $0x18,%rsp
  38:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode22SetDisableMergeTimeoutEb:

0000000000000000 <ArtNetNode::SetDisableMergeTimeout(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	40 88 b7 60 03 00 00 	mov    %sil,0x360(%rdi)
  1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  24:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  2b:	00 00 
  2d:	74 05                	je     34 <ArtNetNode::SetDisableMergeTimeout(bool)+0x34>
  2f:	e8 00 00 00 00       	call   34 <ArtNetNode::SetDisableMergeTimeout(bool)+0x34>
  34:	40 0f b6 f6          	movzbl %sil,%esi
  38:	48 83 c4 18          	add    $0x18,%rsp
  3c:	e9 00 00 00 00       	jmp    41 <.LC21+0x2c>

Disassembly of section .text._ZN10ArtNetNode3GetEv:

0000000000000000 <ArtNetNode::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1d <ArtNetNode::Get()+0x1d>
  1d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  22:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  29:	00 00 
  2b:	74 05                	je     32 <ArtNetNode::Get()+0x32>
  2d:	e8 00 00 00 00       	call   32 <ArtNetNode::Get()+0x32>
  32:	48 83 c4 18          	add    $0x18,%rsp
  36:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode15SetMapUniverse0Eb:

0000000000000000 <ArtNetNode::SetMapUniverse0(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	40 88 b7 7d 02 00 00 	mov    %sil,0x27d(%rdi)
  1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  24:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  2b:	00 00 
  2d:	74 05                	je     34 <ArtNetNode::SetMapUniverse0(bool)+0x34>
  2f:	e8 00 00 00 00       	call   34 <ArtNetNode::SetMapUniverse0(bool)+0x34>
  34:	48 83 c4 18          	add    $0x18,%rsp
  38:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode12SetPriority4Ej:

0000000000000000 <ArtNetNode::SetPriority4(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 fc             	mov    %rdi,%r12
   9:	55                   	push   %rbp
   a:	31 ed                	xor    %ebp,%ebp
   c:	53                   	push   %rbx
   d:	40 0f b6 de          	movzbl %sil,%ebx
  11:	48 83 ec 10          	sub    $0x10,%rsp
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  23:	31 c0                	xor    %eax,%eax
  25:	40 88 b7 da 04 00 00 	mov    %sil,0x4da(%rdi)
  2c:	89 ee                	mov    %ebp,%esi
  2e:	89 da                	mov    %ebx,%edx
  30:	4c 89 e7             	mov    %r12,%rdi
  33:	ff c5                	inc    %ebp
  35:	e8 00 00 00 00       	call   3a <ArtNetNode::SetPriority4(unsigned int)+0x3a>
  3a:	83 fd 04             	cmp    $0x4,%ebp
  3d:	75 ed                	jne    2c <ArtNetNode::SetPriority4(unsigned int)+0x2c>
  3f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  44:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4b:	00 00 
  4d:	74 05                	je     54 <ArtNetNode::SetPriority4(unsigned int)+0x54>
  4f:	e8 00 00 00 00       	call   54 <ArtNetNode::SetPriority4(unsigned int)+0x54>
  54:	48 83 c4 10          	add    $0x10,%rsp
  58:	5b                   	pop    %rbx
  59:	5d                   	pop    %rbp
  5a:	41 5c                	pop    %r12
  5c:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddEPKcb:

0000000000000000 <PropertiesBuilder::Add(char const*, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  1d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  24:	00 00 
  26:	74 05                	je     2d <PropertiesBuilder::Add(char const*, bool)+0x2d>
  28:	e8 00 00 00 00       	call   2d <PropertiesBuilder::Add(char const*, bool)+0x2d>
  2d:	0f b6 d2             	movzbl %dl,%edx
  30:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  36:	48 83 c4 18          	add    $0x18,%rsp
  3a:	89 d1                	mov    %edx,%ecx
  3c:	e9 00 00 00 00       	jmp    41 <.LC21+0x2c>

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
  1c:	74 1b                	je     39 <PropertiesBuilder::GetSize()+0x39>
  1e:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  22:	48 8b 17             	mov    (%rdi),%rdx
  25:	c6 44 02 ff 7d       	movb   $0x7d,-0x1(%rdx,%rax,1)
  2a:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  2e:	48 8b 17             	mov    (%rdi),%rdx
  31:	c6 04 02 7d          	movb   $0x7d,(%rdx,%rax,1)
  35:	66 ff 47 0a          	incw   0xa(%rdi)
  39:	66 8b 47 0a          	mov    0xa(%rdi),%ax
  3d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  42:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  49:	00 00 
  4b:	74 05                	je     52 <PropertiesBuilder::GetSize()+0x52>
  4d:	e8 00 00 00 00       	call   52 <PropertiesBuilder::GetSize()+0x52>
  52:	48 83 c4 18          	add    $0x18,%rsp
  56:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIPcEEiS1_jPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	49 89 fa             	mov    %rdi,%r10
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	89 d6                	mov    %edx,%esi
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  1e:	31 c0                	xor    %eax,%eax
  20:	41 8a 42 0c          	mov    0xc(%r10),%al
  24:	45 84 c9             	test   %r9b,%r9b
  27:	75 06                	jne    2f <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x2f>
  29:	84 c0                	test   %al,%al
  2b:	75 06                	jne    33 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x33>
  2d:	eb 36                	jmp    65 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x65>
  2f:	84 c0                	test   %al,%al
  31:	74 19                	je     4c <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x4c>
  33:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  38:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  3f:	00 00 
  41:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 48 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x48>
  48:	74 37                	je     81 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x81>
  4a:	eb 30                	jmp    7c <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x7c>
  4c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  51:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  58:	00 00 
  5a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 61 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x61>
  61:	74 1e                	je     81 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x81>
  63:	eb 17                	jmp    7c <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x7c>
  65:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  6a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  71:	00 00 
  73:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 7a <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x7a>
  7a:	74 05                	je     81 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x81>
  7c:	e8 00 00 00 00       	call   81 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x81>
  81:	31 c0                	xor    %eax,%eax
  83:	48 83 c4 18          	add    $0x18,%rsp
  87:	e9 00 00 00 00       	jmp    8c <.LC21+0x77>

Disassembly of section .text._ZN17PropertiesBuilder8add_partIPKcEEiPcjS2_T_bj:

0000000000000000 <int PropertiesBuilder::add_part<char const*>(char*, unsigned int, char const*, char const*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
   f:	00 00 
  11:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
  16:	45 31 d2             	xor    %r10d,%r10d
  19:	8b 44 24 20          	mov    0x20(%rsp),%eax
  1d:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
  22:	64 4c 2b 14 25 28 00 	sub    %fs:0x28,%r10
  29:	00 00 
  2b:	74 05                	je     32 <int PropertiesBuilder::add_part<char const*>(char*, unsigned int, char const*, char const*, bool, unsigned int)+0x32>
  2d:	e8 00 00 00 00       	call   32 <int PropertiesBuilder::add_part<char const*>(char*, unsigned int, char const*, char const*, bool, unsigned int)+0x32>
  32:	89 44 24 20          	mov    %eax,0x20(%rsp)
  36:	45 0f b6 c9          	movzbl %r9b,%r9d
  3a:	48 83 c4 18          	add    $0x18,%rsp
  3e:	e9 00 00 00 00       	jmp    43 <.LC21+0x2e>

Disassembly of section .text._ZN12artnetparamsL6is_setEtj:

0000000000000000 <artnetparams::is_set(unsigned short, unsigned int)>:
   0:	48 83 ec 18          	sub    $0x18,%rsp
   4:	8d 4e 08             	lea    0x8(%rsi),%ecx
   7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   e:	00 00 
  10:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  15:	31 c0                	xor    %eax,%eax
  17:	b8 01 00 00 00       	mov    $0x1,%eax
  1c:	d3 e0                	shl    %cl,%eax
  1e:	21 c7                	and    %eax,%edi
  20:	66 39 c7             	cmp    %ax,%di
  23:	0f 94 c0             	sete   %al
  26:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  2b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  32:	00 00 
  34:	74 05                	je     3b <artnetparams::is_set(unsigned short, unsigned int)+0x3b>
  36:	e8 00 00 00 00       	call   3b <artnetparams::is_set(unsigned short, unsigned int)+0x3b>
  3b:	48 83 c4 18          	add    $0x18,%rsp
  3f:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParamsC2EP17ArtNetParamsStore:

0000000000000000 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	53                   	push   %rbx
   5:	48 89 fb             	mov    %rdi,%rbx
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  1a:	31 c0                	xor    %eax,%eax
  1c:	48 89 37             	mov    %rsi,(%rdi)
  1f:	e8 00 00 00 00       	call   24 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)+0x24>
  24:	48 8d 53 08          	lea    0x8(%rbx),%rdx
  28:	b9 37 00 00 00       	mov    $0x37,%ecx
  2d:	48 8d 73 1b          	lea    0x1b(%rbx),%rsi
  31:	49 89 c0             	mov    %rax,%r8
  34:	48 89 d7             	mov    %rdx,%rdi
  37:	31 c0                	xor    %eax,%eax
  39:	f3 ab                	rep stos %eax,%es:(%rdi)
  3b:	66 c7 43 15 55 00    	movw   $0x55,0x15(%rbx)
  41:	4c 89 c7             	mov    %r8,%rdi
  44:	48 b8 01 00 02 00 03 	movabs $0x4000300020001,%rax
  4b:	00 04 00 
  4e:	48 89 43 0d          	mov    %rax,0xd(%rbx)
  52:	e8 00 00 00 00       	call   57 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)+0x57>
  57:	c6 43 1a 00          	movb   $0x0,0x1a(%rbx)
  5b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  60:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  67:	00 00 
  69:	74 05                	je     70 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)+0x70>
  6b:	e8 00 00 00 00       	call   70 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)+0x70>
  70:	48 83 c4 10          	add    $0x10,%rsp
  74:	5b                   	pop    %rbx
  75:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams4LoadEv:

0000000000000000 <ArtNetParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <ArtNetParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <ArtNetParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <ArtNetParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <ArtNetParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <ArtNetParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <ArtNetParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <ArtNetParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <ArtNetParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <ArtNetParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <ArtNetParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <ArtNetParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams4LoadEPKcj:

0000000000000000 <ArtNetParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 89 d5             	mov    %edx,%r13d
   9:	48 89 fa             	mov    %rdi,%rdx
   c:	41 54                	push   %r12
   e:	49 89 f4             	mov    %rsi,%r12
  11:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 18 <ArtNetParams::Load(char const*, unsigned int)+0x18>
  18:	55                   	push   %rbp
  19:	53                   	push   %rbx
  1a:	48 89 fb             	mov    %rdi,%rbx
  1d:	48 83 ec 28          	sub    $0x28,%rsp
  21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  28:	00 00 
  2a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  2f:	31 c0                	xor    %eax,%eax
  31:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  38:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	e8 00 00 00 00       	call   45 <ArtNetParams::Load(char const*, unsigned int)+0x45>
  45:	44 89 ea             	mov    %r13d,%edx
  48:	4c 89 e6             	mov    %r12,%rsi
  4b:	48 89 ef             	mov    %rbp,%rdi
  4e:	e8 00 00 00 00       	call   53 <ArtNetParams::Load(char const*, unsigned int)+0x53>
  53:	48 8b 3b             	mov    (%rbx),%rdi
  56:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  5a:	48 8b 07             	mov    (%rdi),%rax
  5d:	ff 50 10             	call   *0x10(%rax)
  60:	48 89 ef             	mov    %rbp,%rdi
  63:	e8 00 00 00 00       	call   68 <ArtNetParams::Load(char const*, unsigned int)+0x68>
  68:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  6d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  74:	00 00 
  76:	74 05                	je     7d <ArtNetParams::Load(char const*, unsigned int)+0x7d>
  78:	e8 00 00 00 00       	call   7d <ArtNetParams::Load(char const*, unsigned int)+0x7d>
  7d:	48 83 c4 28          	add    $0x28,%rsp
  81:	5b                   	pop    %rbx
  82:	5d                   	pop    %rbp
  83:	41 5c                	pop    %r12
  85:	41 5d                	pop    %r13
  87:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams7SetBoolEhj:

0000000000000000 <ArtNetParams::SetBool(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	8b 47 08             	mov    0x8(%rdi),%eax
  19:	40 84 f6             	test   %sil,%sil
  1c:	74 04                	je     22 <ArtNetParams::SetBool(unsigned char, unsigned int)+0x22>
  1e:	09 d0                	or     %edx,%eax
  20:	eb 04                	jmp    26 <ArtNetParams::SetBool(unsigned char, unsigned int)+0x26>
  22:	f7 d2                	not    %edx
  24:	21 d0                	and    %edx,%eax
  26:	89 47 08             	mov    %eax,0x8(%rdi)
  29:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  2e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  35:	00 00 
  37:	74 05                	je     3e <ArtNetParams::SetBool(unsigned char, unsigned int)+0x3e>
  39:	e8 00 00 00 00       	call   3e <ArtNetParams::SetBool(unsigned char, unsigned int)+0x3e>
  3e:	48 83 c4 18          	add    $0x18,%rsp
  42:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams16callbackFunctionEPKc:

0000000000000000 <ArtNetParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	41 55                	push   %r13
   a:	41 54                	push   %r12
   c:	49 89 f4             	mov    %rsi,%r12
   f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 16 <ArtNetParams::callbackFunction(char const*)+0x16>
  16:	55                   	push   %rbp
  17:	48 89 fd             	mov    %rdi,%rbp
  1a:	4c 89 e7             	mov    %r12,%rdi
  1d:	53                   	push   %rbx
  1e:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  25:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  2c:	00 00 
  2e:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
  35:	00 
  36:	31 c0                	xor    %eax,%eax
  38:	48 8d 44 24 3f       	lea    0x3f(%rsp),%rax
  3d:	48 89 c2             	mov    %rax,%rdx
  40:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  45:	e8 00 00 00 00       	call   4a <ArtNetParams::callbackFunction(char const*)+0x4a>
  4a:	85 c0                	test   %eax,%eax
  4c:	75 26                	jne    74 <ArtNetParams::callbackFunction(char const*)+0x74>
  4e:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
  55:	00 
  56:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5d:	00 00 
  5f:	0f 85 33 04 00 00    	jne    498 <ArtNetParams::callbackFunction(char const*)+0x498>
  65:	0f b6 74 24 3f       	movzbl 0x3f(%rsp),%esi
  6a:	ba 00 00 01 00       	mov    $0x10000,%edx
  6f:	e9 f8 03 00 00       	jmp    46c <ArtNetParams::callbackFunction(char const*)+0x46c>
  74:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7b <ArtNetParams::callbackFunction(char const*)+0x7b>
  7b:	31 db                	xor    %ebx,%ebx
  7d:	45 31 f6             	xor    %r14d,%r14d
  80:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  85:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8c <ArtNetParams::callbackFunction(char const*)+0x8c>
  8c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  91:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
  96:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  9b:	4c 89 e7             	mov    %r12,%rdi
  9e:	48 89 c2             	mov    %rax,%rdx
  a1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  a6:	e8 00 00 00 00       	call   ab <ArtNetParams::callbackFunction(char const*)+0xab>
  ab:	85 c0                	test   %eax,%eax
  ad:	75 3c                	jne    eb <ArtNetParams::callbackFunction(char const*)+0xeb>
  af:	8b 74 24 40          	mov    0x40(%rsp),%esi
  b3:	66 85 f6             	test   %si,%si
  b6:	0f 84 c9 03 00 00    	je     485 <ArtNetParams::callbackFunction(char const*)+0x485>
  bc:	44 89 f0             	mov    %r14d,%eax
  bf:	44 89 f1             	mov    %r14d,%ecx
  c2:	45 8d 46 01          	lea    0x1(%r14),%r8d
  c6:	66 89 74 45 0d       	mov    %si,0xd(%rbp,%rax,2)
  cb:	b8 02 00 00 00       	mov    $0x2,%eax
  d0:	d3 e0                	shl    %cl,%eax
  d2:	89 c2                	mov    %eax,%edx
  d4:	0b 45 08             	or     0x8(%rbp),%eax
  d7:	f7 d2                	not    %edx
  d9:	23 55 08             	and    0x8(%rbp),%edx
  dc:	66 44 39 c6          	cmp    %r8w,%si
  e0:	0f 44 c2             	cmove  %edx,%eax
  e3:	89 45 08             	mov    %eax,0x8(%rbp)
  e6:	e9 9a 03 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
  eb:	4c 8d 7c 24 44       	lea    0x44(%rsp),%r15
  f0:	4c 8d 6c 24 48       	lea    0x48(%rsp),%r13
  f5:	4c 89 e7             	mov    %r12,%rdi
  f8:	c7 44 24 44 07 00 00 	movl   $0x7,0x44(%rsp)
  ff:	00 
 100:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 107 <ArtNetParams::callbackFunction(char const*)+0x107>
 107:	4c 89 f9             	mov    %r15,%rcx
 10a:	4c 89 ea             	mov    %r13,%rdx
 10d:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
 111:	e8 00 00 00 00       	call   116 <ArtNetParams::callbackFunction(char const*)+0x116>
 116:	85 c0                	test   %eax,%eax
 118:	75 43                	jne    15d <ArtNetParams::callbackFunction(char const*)+0x15d>
 11a:	4c 89 ef             	mov    %r13,%rdi
 11d:	e8 00 00 00 00       	call   122 <ArtNetParams::callbackFunction(char const*)+0x122>
 122:	44 89 f7             	mov    %r14d,%edi
 125:	41 89 c4             	mov    %eax,%r12d
 128:	e8 00 00 00 00       	call   12d <ArtNetParams::callbackFunction(char const*)+0x12d>
 12d:	66 23 45 15          	and    0x15(%rbp),%ax
 131:	ba 02 00 00 00       	mov    $0x2,%edx
 136:	66 89 45 15          	mov    %ax,0x15(%rbp)
 13a:	89 c3                	mov    %eax,%ebx
 13c:	41 83 fc 02          	cmp    $0x2,%r12d
 140:	74 05                	je     147 <ArtNetParams::callbackFunction(char const*)+0x147>
 142:	ba 01 00 00 00       	mov    $0x1,%edx
 147:	44 89 f6             	mov    %r14d,%esi
 14a:	48 89 ef             	mov    %rbp,%rdi
 14d:	e8 00 00 00 00       	call   152 <ArtNetParams::callbackFunction(char const*)+0x152>
 152:	09 c3                	or     %eax,%ebx
 154:	66 89 5d 15          	mov    %bx,0x15(%rbp)
 158:	e9 28 03 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 15d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 164 <ArtNetParams::callbackFunction(char const*)+0x164>
 164:	4c 89 f9             	mov    %r15,%rcx
 167:	4c 89 ea             	mov    %r13,%rdx
 16a:	4c 89 e7             	mov    %r12,%rdi
 16d:	48 01 de             	add    %rbx,%rsi
 170:	c7 44 24 44 03 00 00 	movl   $0x3,0x44(%rsp)
 177:	00 
 178:	e8 00 00 00 00       	call   17d <ArtNetParams::callbackFunction(char const*)+0x17d>
 17d:	85 c0                	test   %eax,%eax
 17f:	75 2f                	jne    1b0 <ArtNetParams::callbackFunction(char const*)+0x1b0>
 181:	44 89 f7             	mov    %r14d,%edi
 184:	e8 00 00 00 00       	call   189 <ArtNetParams::callbackFunction(char const*)+0x189>
 189:	66 23 45 17          	and    0x17(%rbp),%ax
 18d:	4c 89 ef             	mov    %r13,%rdi
 190:	66 89 45 17          	mov    %ax,0x17(%rbp)
 194:	89 c3                	mov    %eax,%ebx
 196:	e8 00 00 00 00       	call   19b <ArtNetParams::callbackFunction(char const*)+0x19b>
 19b:	44 89 f7             	mov    %r14d,%edi
 19e:	89 c6                	mov    %eax,%esi
 1a0:	e8 00 00 00 00       	call   1a5 <ArtNetParams::callbackFunction(char const*)+0x1a5>
 1a5:	09 c3                	or     %eax,%ebx
 1a7:	66 89 5d 17          	mov    %bx,0x17(%rbp)
 1ab:	e9 d5 02 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 1b0:	4c 8d 4c 1d 5b       	lea    0x5b(%rbp,%rbx,1),%r9
 1b5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
 1ba:	4c 89 f9             	mov    %r15,%rcx
 1bd:	4c 89 e7             	mov    %r12,%rdi
 1c0:	4c 89 ca             	mov    %r9,%rdx
 1c3:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
 1c8:	c7 44 24 44 11 00 00 	movl   $0x11,0x44(%rsp)
 1cf:	00 
 1d0:	e8 00 00 00 00       	call   1d5 <ArtNetParams::callbackFunction(char const*)+0x1d5>
 1d5:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
 1da:	85 c0                	test   %eax,%eax
 1dc:	75 54                	jne    232 <ArtNetParams::callbackFunction(char const*)+0x232>
 1de:	44 89 f0             	mov    %r14d,%eax
 1e1:	8b 54 24 44          	mov    0x44(%rsp),%edx
 1e5:	4c 89 ee             	mov    %r13,%rsi
 1e8:	44 89 f7             	mov    %r14d,%edi
 1eb:	48 6b c0 12          	imul   $0x12,%rax,%rax
 1ef:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
 1f4:	48 01 e8             	add    %rbp,%rax
 1f7:	c6 44 02 5b 00       	movb   $0x0,0x5b(%rdx,%rax,1)
 1fc:	e8 00 00 00 00       	call   201 <ArtNetParams::callbackFunction(char const*)+0x201>
 201:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
 206:	4c 89 ee             	mov    %r13,%rsi
 209:	e8 00 00 00 00       	call   20e <ArtNetParams::callbackFunction(char const*)+0x20e>
 20e:	44 89 f1             	mov    %r14d,%ecx
 211:	41 89 c1             	mov    %eax,%r9d
 214:	b8 80 00 00 00       	mov    $0x80,%eax
 219:	d3 e0                	shl    %cl,%eax
 21b:	45 85 c9             	test   %r9d,%r9d
 21e:	75 0a                	jne    22a <ArtNetParams::callbackFunction(char const*)+0x22a>
 220:	f7 d0                	not    %eax
 222:	21 45 08             	and    %eax,0x8(%rbp)
 225:	e9 5b 02 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 22a:	09 45 08             	or     %eax,0x8(%rbp)
 22d:	e9 53 02 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 232:	48 83 c3 12          	add    $0x12,%rbx
 236:	48 83 44 24 20 10    	addq   $0x10,0x20(%rsp)
 23c:	41 ff c6             	inc    %r14d
 23f:	48 83 44 24 18 0e    	addq   $0xe,0x18(%rsp)
 245:	48 83 fb 48          	cmp    $0x48,%rbx
 249:	0f 85 42 fe ff ff    	jne    91 <ArtNetParams::callbackFunction(char const*)+0x91>
 24f:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
 254:	4c 89 ea             	mov    %r13,%rdx
 257:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 25e <ArtNetParams::callbackFunction(char const*)+0x25e>
 25e:	4c 89 e7             	mov    %r12,%rdi
 261:	c7 44 24 40 08 00 00 	movl   $0x8,0x40(%rsp)
 268:	00 
 269:	e8 00 00 00 00       	call   26e <ArtNetParams::callbackFunction(char const*)+0x26e>
 26e:	85 c0                	test   %eax,%eax
 270:	75 22                	jne    294 <ArtNetParams::callbackFunction(char const*)+0x294>
 272:	4c 89 ef             	mov    %r13,%rdi
 275:	e8 00 00 00 00       	call   27a <ArtNetParams::callbackFunction(char const*)+0x27a>
 27a:	8b 55 08             	mov    0x8(%rbp),%edx
 27d:	85 c0                	test   %eax,%eax
 27f:	75 05                	jne    286 <ArtNetParams::callbackFunction(char const*)+0x286>
 281:	83 e2 df             	and    $0xffffffdf,%edx
 284:	eb 03                	jmp    289 <ArtNetParams::callbackFunction(char const*)+0x289>
 286:	83 ca 20             	or     $0x20,%edx
 289:	89 55 08             	mov    %edx,0x8(%rbp)
 28c:	88 45 1a             	mov    %al,0x1a(%rbp)
 28f:	e9 f1 01 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 294:	4c 8d 4d 1b          	lea    0x1b(%rbp),%r9
 298:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
 29d:	4c 89 e7             	mov    %r12,%rdi
 2a0:	31 db                	xor    %ebx,%ebx
 2a2:	4c 89 ca             	mov    %r9,%rdx
 2a5:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 2ac <ArtNetParams::callbackFunction(char const*)+0x2ac>
 2ac:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
 2b1:	4c 8d 35 00 00 00 00 	lea    0x0(%rip),%r14        # 2b8 <ArtNetParams::callbackFunction(char const*)+0x2b8>
 2b8:	c7 44 24 40 3f 00 00 	movl   $0x3f,0x40(%rsp)
 2bf:	00 
 2c0:	e8 00 00 00 00       	call   2c5 <ArtNetParams::callbackFunction(char const*)+0x2c5>
 2c5:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
 2ca:	85 c0                	test   %eax,%eax
 2cc:	75 71                	jne    33f <ArtNetParams::callbackFunction(char const*)+0x33f>
 2ce:	8b 44 24 40          	mov    0x40(%rsp),%eax
 2d2:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
 2d7:	c6 44 05 1b 00       	movb   $0x0,0x1b(%rbp,%rax,1)
 2dc:	e8 00 00 00 00       	call   2e1 <ArtNetParams::callbackFunction(char const*)+0x2e1>
 2e1:	4c 89 ee             	mov    %r13,%rsi
 2e4:	48 89 c7             	mov    %rax,%rdi
 2e7:	e8 00 00 00 00       	call   2ec <ArtNetParams::callbackFunction(char const*)+0x2ec>
 2ec:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
 2f1:	4c 89 ee             	mov    %r13,%rsi
 2f4:	e8 00 00 00 00       	call   2f9 <ArtNetParams::callbackFunction(char const*)+0x2f9>
 2f9:	85 c0                	test   %eax,%eax
 2fb:	75 09                	jne    306 <ArtNetParams::callbackFunction(char const*)+0x306>
 2fd:	83 65 08 bf          	andl   $0xffffffbf,0x8(%rbp)
 301:	e9 7f 01 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 306:	83 4d 08 40          	orl    $0x40,0x8(%rbp)
 30a:	e9 76 01 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 30f:	48 6b f3 12          	imul   $0x12,%rbx,%rsi
 313:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31a <ArtNetParams::callbackFunction(char const*)+0x31a>
 31a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 31f:	4c 89 e7             	mov    %r12,%rdi
 322:	48 01 c6             	add    %rax,%rsi
 325:	e8 00 00 00 00       	call   32a <ArtNetParams::callbackFunction(char const*)+0x32a>
 32a:	85 c0                	test   %eax,%eax
 32c:	0f 84 80 00 00 00    	je     3b2 <ArtNetParams::callbackFunction(char const*)+0x3b2>
 332:	48 ff c3             	inc    %rbx
 335:	48 83 fb 04          	cmp    $0x4,%rbx
 339:	0f 84 c1 00 00 00    	je     400 <ArtNetParams::callbackFunction(char const*)+0x400>
 33f:	48 89 de             	mov    %rbx,%rsi
 342:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
 347:	4c 89 f9             	mov    %r15,%rcx
 34a:	4c 89 e7             	mov    %r12,%rdi
 34d:	48 c1 e6 04          	shl    $0x4,%rsi
 351:	4c 89 ca             	mov    %r9,%rdx
 354:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
 359:	41 89 dd             	mov    %ebx,%r13d
 35c:	4c 01 f6             	add    %r14,%rsi
 35f:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%rsp)
 366:	00 
 367:	e8 00 00 00 00       	call   36c <ArtNetParams::callbackFunction(char const*)+0x36c>
 36c:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
 371:	85 c0                	test   %eax,%eax
 373:	75 9a                	jne    30f <ArtNetParams::callbackFunction(char const*)+0x30f>
 375:	89 df                	mov    %ebx,%edi
 377:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
 37c:	e8 00 00 00 00       	call   381 <ArtNetParams::callbackFunction(char const*)+0x381>
 381:	23 85 a4 00 00 00    	and    0xa4(%rbp),%eax
 387:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
 38c:	66 89 85 a4 00 00 00 	mov    %ax,0xa4(%rbp)
 393:	89 c3                	mov    %eax,%ebx
 395:	e8 00 00 00 00       	call   39a <ArtNetParams::callbackFunction(char const*)+0x39a>
 39a:	44 89 ef             	mov    %r13d,%edi
 39d:	89 c6                	mov    %eax,%esi
 39f:	e8 00 00 00 00       	call   3a4 <ArtNetParams::callbackFunction(char const*)+0x3a4>
 3a4:	09 c3                	or     %eax,%ebx
 3a6:	66 89 9d a4 00 00 00 	mov    %bx,0xa4(%rbp)
 3ad:	e9 d3 00 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 3b2:	89 df                	mov    %ebx,%edi
 3b4:	e8 00 00 00 00       	call   3b9 <ArtNetParams::callbackFunction(char const*)+0x3b9>
 3b9:	66 23 85 a6 00 00 00 	and    0xa6(%rbp),%ax
 3c0:	80 7c 24 3f 00       	cmpb   $0x0,0x3f(%rsp)
 3c5:	66 89 85 a6 00 00 00 	mov    %ax,0xa6(%rbp)
 3cc:	89 c3                	mov    %eax,%ebx
 3ce:	0f 84 b1 00 00 00    	je     485 <ArtNetParams::callbackFunction(char const*)+0x485>
 3d4:	44 89 ee             	mov    %r13d,%esi
 3d7:	bf 01 00 00 00       	mov    $0x1,%edi
 3dc:	e8 00 00 00 00       	call   3e1 <ArtNetParams::callbackFunction(char const*)+0x3e1>
 3e1:	41 8d 4d 08          	lea    0x8(%r13),%ecx
 3e5:	41 89 c0             	mov    %eax,%r8d
 3e8:	b8 01 00 00 00       	mov    $0x1,%eax
 3ed:	d3 e0                	shl    %cl,%eax
 3ef:	09 c3                	or     %eax,%ebx
 3f1:	44 09 c3             	or     %r8d,%ebx
 3f4:	66 89 9d a6 00 00 00 	mov    %bx,0xa6(%rbp)
 3fb:	e9 85 00 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 400:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 405:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 40c <ArtNetParams::callbackFunction(char const*)+0x40c>
 40c:	4c 89 e7             	mov    %r12,%rdi
 40f:	e8 00 00 00 00       	call   414 <ArtNetParams::callbackFunction(char const*)+0x414>
 414:	85 c0                	test   %eax,%eax
 416:	75 1f                	jne    437 <ArtNetParams::callbackFunction(char const*)+0x437>
 418:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
 41f:	00 
 420:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 427:	00 00 
 429:	75 6d                	jne    498 <ArtNetParams::callbackFunction(char const*)+0x498>
 42b:	0f b6 74 24 3f       	movzbl 0x3f(%rsp),%esi
 430:	ba 00 00 02 00       	mov    $0x20000,%edx
 435:	eb 35                	jmp    46c <ArtNetParams::callbackFunction(char const*)+0x46c>
 437:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
 43c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 443 <ArtNetParams::callbackFunction(char const*)+0x443>
 443:	4c 89 e7             	mov    %r12,%rdi
 446:	e8 00 00 00 00       	call   44b <ArtNetParams::callbackFunction(char const*)+0x44b>
 44b:	85 c0                	test   %eax,%eax
 44d:	75 36                	jne    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 44f:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
 456:	00 
 457:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 45e:	00 00 
 460:	75 36                	jne    498 <ArtNetParams::callbackFunction(char const*)+0x498>
 462:	0f b6 74 24 3f       	movzbl 0x3f(%rsp),%esi
 467:	ba 00 08 00 00       	mov    $0x800,%edx
 46c:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
 473:	48 89 ef             	mov    %rbp,%rdi
 476:	5b                   	pop    %rbx
 477:	5d                   	pop    %rbp
 478:	41 5c                	pop    %r12
 47a:	41 5d                	pop    %r13
 47c:	41 5e                	pop    %r14
 47e:	41 5f                	pop    %r15
 480:	e9 00 00 00 00       	jmp    485 <ArtNetParams::callbackFunction(char const*)+0x485>
 485:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
 48c:	00 
 48d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 494:	00 00 
 496:	74 05                	je     49d <ArtNetParams::callbackFunction(char const*)+0x49d>
 498:	e8 00 00 00 00       	call   49d <ArtNetParams::callbackFunction(char const*)+0x49d>
 49d:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
 4a4:	5b                   	pop    %rbx
 4a5:	5d                   	pop    %rbp
 4a6:	41 5c                	pop    %r12
 4a8:	41 5d                	pop    %r13
 4aa:	41 5e                	pop    %r14
 4ac:	41 5f                	pop    %r15
 4ae:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams22staticCallbackFunctionEPvPKc:

0000000000000000 <ArtNetParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  1d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  24:	00 00 
  26:	74 05                	je     2d <ArtNetParams::staticCallbackFunction(void*, char const*)+0x2d>
  28:	e8 00 00 00 00       	call   2d <ArtNetParams::staticCallbackFunction(void*, char const*)+0x2d>
  2d:	48 83 c4 18          	add    $0x18,%rsp
  31:	e9 00 00 00 00       	jmp    36 <.LC21+0x21>

Disassembly of section .text._ZN12ArtNetParams7BuilderEPKN12artnetparams6ParamsEPcjRj:

0000000000000000 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	41 89 cf             	mov    %ecx,%r15d
   9:	41 56                	push   %r14
   b:	41 55                	push   %r13
   d:	49 89 d5             	mov    %rdx,%r13
  10:	41 54                	push   %r12
  12:	55                   	push   %rbp
  13:	48 89 fd             	mov    %rdi,%rbp
  16:	53                   	push   %rbx
  17:	48 83 ec 38          	sub    $0x38,%rsp
  1b:	4c 89 04 24          	mov    %r8,(%rsp)
  1f:	4c 8d 47 08          	lea    0x8(%rdi),%r8
  23:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  2a:	00 00 
  2c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  31:	31 c0                	xor    %eax,%eax
  33:	48 85 f6             	test   %rsi,%rsi
  36:	74 0c                	je     44 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x44>
  38:	b9 37 00 00 00       	mov    $0x37,%ecx
  3d:	4c 89 c7             	mov    %r8,%rdi
  40:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
  42:	eb 0c                	jmp    50 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x50>
  44:	48 8b 3f             	mov    (%rdi),%rdi
  47:	4c 89 c6             	mov    %r8,%rsi
  4a:	48 8b 07             	mov    (%rdi),%rax
  4d:	ff 50 18             	call   *0x18(%rax)
  50:	4c 8d 64 24 18       	lea    0x18(%rsp),%r12
  55:	4c 89 ea             	mov    %r13,%rdx
  58:	44 89 f9             	mov    %r15d,%ecx
  5b:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 62 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x62>
  62:	4c 89 e7             	mov    %r12,%rdi
  65:	4c 8d 6d 1b          	lea    0x1b(%rbp),%r13
  69:	e8 00 00 00 00       	call   6e <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x6e>
  6e:	be 40 00 00 00       	mov    $0x40,%esi
  73:	48 89 ef             	mov    %rbp,%rdi
  76:	e8 00 00 00 00       	call   7b <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x7b>
  7b:	84 c0                	test   %al,%al
  7d:	75 1a                	jne    99 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x99>
  7f:	e8 00 00 00 00       	call   84 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
  84:	48 89 c7             	mov    %rax,%rdi
  87:	e8 00 00 00 00       	call   8c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x8c>
  8c:	b9 10 00 00 00       	mov    $0x10,%ecx
  91:	4c 89 ef             	mov    %r13,%rdi
  94:	48 89 c6             	mov    %rax,%rsi
  97:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
  99:	be 40 00 00 00       	mov    $0x40,%esi
  9e:	48 89 ef             	mov    %rbp,%rdi
  a1:	4c 8d 75 5b          	lea    0x5b(%rbp),%r14
  a5:	e8 00 00 00 00       	call   aa <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xaa>
  aa:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  b0:	4c 89 ea             	mov    %r13,%rdx
  b3:	4c 89 e7             	mov    %r12,%rdi
  b6:	0f b6 c8             	movzbl %al,%ecx
  b9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # c0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xc0>
  c0:	4c 8d 3d 00 00 00 00 	lea    0x0(%rip),%r15        # c7 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xc7>
  c7:	e8 00 00 00 00       	call   cc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
  cc:	be 00 00 01 00       	mov    $0x10000,%esi
  d1:	48 89 ef             	mov    %rbp,%rdi
  d4:	e8 00 00 00 00       	call   d9 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xd9>
  d9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # e0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xe0>
  e0:	4c 89 e7             	mov    %r12,%rdi
  e3:	0f b6 d0             	movzbl %al,%edx
  e6:	e8 00 00 00 00       	call   eb <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xeb>
  eb:	be 20 00 00 00       	mov    $0x20,%esi
  f0:	48 89 ef             	mov    %rbp,%rdi
  f3:	e8 00 00 00 00       	call   f8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
  f8:	0f b6 7d 1a          	movzbl 0x1a(%rbp),%edi
  fc:	89 c3                	mov    %eax,%ebx
  fe:	e8 00 00 00 00       	call   103 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x103>
 103:	0f b6 cb             	movzbl %bl,%ecx
 106:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 10c:	31 db                	xor    %ebx,%ebx
 10e:	48 89 c2             	mov    %rax,%rdx
 111:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 118 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x118>
 118:	4c 89 e7             	mov    %r12,%rdi
 11b:	e8 00 00 00 00       	call   120 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x120>
 120:	39 1d 00 00 00 00    	cmp    %ebx,0x0(%rip)        # 126 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x126>
 126:	41 89 dd             	mov    %ebx,%r13d
 129:	0f 86 de 00 00 00    	jbe    20d <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x20d>
 12f:	89 d9                	mov    %ebx,%ecx
 131:	be 02 00 00 00       	mov    $0x2,%esi
 136:	48 89 ef             	mov    %rbp,%rdi
 139:	d3 e6                	shl    %cl,%esi
 13b:	e8 00 00 00 00       	call   140 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x140>
 140:	48 89 de             	mov    %rbx,%rsi
 143:	0f b7 54 5d 0d       	movzwl 0xd(%rbp,%rbx,2),%edx
 148:	4c 89 e7             	mov    %r12,%rdi
 14b:	48 c1 e6 04          	shl    $0x4,%rsi
 14f:	0f b6 c8             	movzbl %al,%ecx
 152:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 158:	4c 01 fe             	add    %r15,%rsi
 15b:	e8 00 00 00 00       	call   160 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x160>
 160:	44 89 ee             	mov    %r13d,%esi
 163:	48 89 ef             	mov    %rbp,%rdi
 166:	e8 00 00 00 00       	call   16b <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x16b>
 16b:	89 c7                	mov    %eax,%edi
 16d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
 171:	e8 00 00 00 00       	call   176 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x176>
 176:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
 17a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 180:	4c 89 e7             	mov    %r12,%rdi
 183:	48 89 c2             	mov    %rax,%rdx
 186:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 18d <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x18d>
 18d:	ff c9                	dec    %ecx
 18f:	0f 95 c1             	setne  %cl
 192:	48 6b f3 12          	imul   $0x12,%rbx,%rsi
 196:	0f b6 c9             	movzbl %cl,%ecx
 199:	48 01 c6             	add    %rax,%rsi
 19c:	e8 00 00 00 00       	call   1a1 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x1a1>
 1a1:	89 d9                	mov    %ebx,%ecx
 1a3:	be 80 00 00 00       	mov    $0x80,%esi
 1a8:	48 89 ef             	mov    %rbp,%rdi
 1ab:	d3 e6                	shl    %cl,%esi
 1ad:	e8 00 00 00 00       	call   1b2 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x1b2>
 1b2:	0f b6 c8             	movzbl %al,%ecx
 1b5:	84 c9                	test   %cl,%cl
 1b7:	75 29                	jne    1e2 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x1e2>
 1b9:	88 4c 24 0c          	mov    %cl,0xc(%rsp)
 1bd:	e8 00 00 00 00       	call   1c2 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x1c2>
 1c2:	44 89 ee             	mov    %r13d,%esi
 1c5:	48 89 c7             	mov    %rax,%rdi
 1c8:	e8 00 00 00 00       	call   1cd <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x1cd>
 1cd:	0f b6 4c 24 0c       	movzbl 0xc(%rsp),%ecx
 1d2:	0f 10 00             	movups (%rax),%xmm0
 1d5:	41 0f 11 06          	movups %xmm0,(%r14)
 1d9:	66 8b 40 10          	mov    0x10(%rax),%ax
 1dd:	66 41 89 46 10       	mov    %ax,0x10(%r14)
 1e2:	48 6b f3 0e          	imul   $0xe,%rbx,%rsi
 1e6:	4c 89 f2             	mov    %r14,%rdx
 1e9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 1ef:	4c 89 e7             	mov    %r12,%rdi
 1f2:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f9 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x1f9>
 1f9:	48 ff c3             	inc    %rbx
 1fc:	49 83 c6 12          	add    $0x12,%r14
 200:	48 01 c6             	add    %rax,%rsi
 203:	e8 00 00 00 00       	call   208 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x208>
 208:	e9 13 ff ff ff       	jmp    120 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x120>
 20d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 214 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x214>
 214:	4c 89 e7             	mov    %r12,%rdi
 217:	31 db                	xor    %ebx,%ebx
 219:	e8 00 00 00 00       	call   21e <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x21e>
 21e:	4c 8d 3d 00 00 00 00 	lea    0x0(%rip),%r15        # 225 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x225>
 225:	39 1d 00 00 00 00    	cmp    %ebx,0x0(%rip)        # 22b <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x22b>
 22b:	76 69                	jbe    296 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x296>
 22d:	89 de                	mov    %ebx,%esi
 22f:	48 89 ef             	mov    %rbp,%rdi
 232:	41 89 dd             	mov    %ebx,%r13d
 235:	e8 00 00 00 00       	call   23a <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x23a>
 23a:	31 f6                	xor    %esi,%esi
 23c:	4d 6b ed 12          	imul   $0x12,%r13,%r13
 240:	89 c7                	mov    %eax,%edi
 242:	89 44 24 0c          	mov    %eax,0xc(%rsp)
 246:	e8 00 00 00 00       	call   24b <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x24b>
 24b:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
 24f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 255:	4c 89 e7             	mov    %r12,%rdi
 258:	48 89 c2             	mov    %rax,%rdx
 25b:	4b 8d 74 3d 00       	lea    0x0(%r13,%r15,1),%rsi
 260:	85 c9                	test   %ecx,%ecx
 262:	0f 95 c1             	setne  %cl
 265:	0f b6 c9             	movzbl %cl,%ecx
 268:	e8 00 00 00 00       	call   26d <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x26d>
 26d:	0f b7 bd a6 00 00 00 	movzwl 0xa6(%rbp),%edi
 274:	89 de                	mov    %ebx,%esi
 276:	ff c3                	inc    %ebx
 278:	e8 00 00 00 00       	call   27d <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x27d>
 27d:	4c 89 e7             	mov    %r12,%rdi
 280:	0f b6 d0             	movzbl %al,%edx
 283:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 28a <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x28a>
 28a:	49 8d 74 05 00       	lea    0x0(%r13,%rax,1),%rsi
 28f:	e8 00 00 00 00       	call   294 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x294>
 294:	eb 8f                	jmp    225 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x225>
 296:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 29d <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x29d>
 29d:	4c 89 e7             	mov    %r12,%rdi
 2a0:	31 db                	xor    %ebx,%ebx
 2a2:	e8 00 00 00 00       	call   2a7 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2a7>
 2a7:	4c 8d 2d 00 00 00 00 	lea    0x0(%rip),%r13        # 2ae <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2ae>
 2ae:	39 1d 00 00 00 00    	cmp    %ebx,0x0(%rip)        # 2b4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>
 2b4:	76 3c                	jbe    2f2 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2f2>
 2b6:	89 de                	mov    %ebx,%esi
 2b8:	48 89 ef             	mov    %rbp,%rdi
 2bb:	e8 00 00 00 00       	call   2c0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>
 2c0:	31 f6                	xor    %esi,%esi
 2c2:	41 89 c7             	mov    %eax,%r15d
 2c5:	89 c7                	mov    %eax,%edi
 2c7:	e8 00 00 00 00       	call   2cc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>
 2cc:	31 c9                	xor    %ecx,%ecx
 2ce:	89 de                	mov    %ebx,%esi
 2d0:	45 85 ff             	test   %r15d,%r15d
 2d3:	0f 95 c1             	setne  %cl
 2d6:	48 c1 e6 04          	shl    $0x4,%rsi
 2da:	48 89 c2             	mov    %rax,%rdx
 2dd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 2e3:	4c 01 ee             	add    %r13,%rsi
 2e6:	4c 89 e7             	mov    %r12,%rdi
 2e9:	ff c3                	inc    %ebx
 2eb:	e8 00 00 00 00       	call   2f0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2f0>
 2f0:	eb bc                	jmp    2ae <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2ae>
 2f2:	be 00 00 02 00       	mov    $0x20000,%esi
 2f7:	48 89 ef             	mov    %rbp,%rdi
 2fa:	e8 00 00 00 00       	call   2ff <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2ff>
 2ff:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 306 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x306>
 306:	4c 89 e7             	mov    %r12,%rdi
 309:	0f b6 d0             	movzbl %al,%edx
 30c:	e8 00 00 00 00       	call   311 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x311>
 311:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 318 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x318>
 318:	4c 89 e7             	mov    %r12,%rdi
 31b:	e8 00 00 00 00       	call   320 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x320>
 320:	be 00 08 00 00       	mov    $0x800,%esi
 325:	48 89 ef             	mov    %rbp,%rdi
 328:	e8 00 00 00 00       	call   32d <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x32d>
 32d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 334 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x334>
 334:	4c 89 e7             	mov    %r12,%rdi
 337:	0f b6 d0             	movzbl %al,%edx
 33a:	e8 00 00 00 00       	call   33f <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x33f>
 33f:	4c 89 e7             	mov    %r12,%rdi
 342:	e8 00 00 00 00       	call   347 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x347>
 347:	48 8b 1c 24          	mov    (%rsp),%rbx
 34b:	0f b7 c0             	movzwl %ax,%eax
 34e:	89 03                	mov    %eax,(%rbx)
 350:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
 355:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 35c:	00 00 
 35e:	74 05                	je     365 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x365>
 360:	e8 00 00 00 00       	call   365 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x365>
 365:	48 83 c4 38          	add    $0x38,%rsp
 369:	5b                   	pop    %rbx
 36a:	5d                   	pop    %rbp
 36b:	41 5c                	pop    %r12
 36d:	41 5d                	pop    %r13
 36f:	41 5e                	pop    %r14
 371:	41 5f                	pop    %r15
 373:	c3                   	ret    

Disassembly of section .text._ZN12ArtNetParams3SetEj:

0000000000000000 <ArtNetParams::Set(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	41 55                	push   %r13
   a:	41 89 f5             	mov    %esi,%r13d
   d:	41 54                	push   %r12
   f:	55                   	push   %rbp
  10:	48 89 fd             	mov    %rdi,%rbp
  13:	53                   	push   %rbx
  14:	48 83 ec 28          	sub    $0x28,%rsp
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  26:	31 c0                	xor    %eax,%eax
  28:	83 fe 04             	cmp    $0x4,%esi
  2b:	77 24                	ja     51 <ArtNetParams::Set(unsigned int)+0x51>
  2d:	b8 04 00 00 00       	mov    $0x4,%eax
  32:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 39 <ArtNetParams::Set(unsigned int)+0x39>
  39:	29 f0                	sub    %esi,%eax
  3b:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
  40:	89 44 24 14          	mov    %eax,0x14(%rsp)
  44:	e8 00 00 00 00       	call   49 <ArtNetParams::Set(unsigned int)+0x49>
  49:	8b 00                	mov    (%rax),%eax
  4b:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 51 <ArtNetParams::Set(unsigned int)+0x51>
  51:	e8 00 00 00 00       	call   56 <ArtNetParams::Set(unsigned int)+0x56>
  56:	be 40 00 00 00       	mov    $0x40,%esi
  5b:	48 89 ef             	mov    %rbp,%rdi
  5e:	49 89 c4             	mov    %rax,%r12
  61:	e8 00 00 00 00       	call   66 <ArtNetParams::Set(unsigned int)+0x66>
  66:	84 c0                	test   %al,%al
  68:	74 0c                	je     76 <ArtNetParams::Set(unsigned int)+0x76>
  6a:	48 8d 75 1b          	lea    0x1b(%rbp),%rsi
  6e:	4c 89 e7             	mov    %r12,%rdi
  71:	e8 00 00 00 00       	call   76 <ArtNetParams::Set(unsigned int)+0x76>
  76:	48 8d 45 5b          	lea    0x5b(%rbp),%rax
  7a:	31 db                	xor    %ebx,%ebx
  7c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  81:	39 1d 00 00 00 00    	cmp    %ebx,0x0(%rip)        # 87 <ArtNetParams::Set(unsigned int)+0x87>
  87:	41 89 df             	mov    %ebx,%r15d
  8a:	0f 86 c4 00 00 00    	jbe    154 <ArtNetParams::Set(unsigned int)+0x154>
  90:	45 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%r14d
  95:	41 83 fe 03          	cmp    $0x3,%r14d
  99:	0f 87 b5 00 00 00    	ja     154 <ArtNetParams::Set(unsigned int)+0x154>
  9f:	44 89 f9             	mov    %r15d,%ecx
  a2:	be 80 00 00 00       	mov    $0x80,%esi
  a7:	48 89 ef             	mov    %rbp,%rdi
  aa:	d3 e6                	shl    %cl,%esi
  ac:	e8 00 00 00 00       	call   b1 <ArtNetParams::Set(unsigned int)+0xb1>
  b1:	31 d2                	xor    %edx,%edx
  b3:	84 c0                	test   %al,%al
  b5:	74 05                	je     bc <ArtNetParams::Set(unsigned int)+0xbc>
  b7:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  bc:	44 89 f6             	mov    %r14d,%esi
  bf:	4c 89 e7             	mov    %r12,%rdi
  c2:	e8 00 00 00 00       	call   c7 <ArtNetParams::Set(unsigned int)+0xc7>
  c7:	44 89 fe             	mov    %r15d,%esi
  ca:	48 89 ef             	mov    %rbp,%rdi
  cd:	e8 00 00 00 00       	call   d2 <ArtNetParams::Set(unsigned int)+0xd2>
  d2:	44 89 f6             	mov    %r14d,%esi
  d5:	4c 89 e7             	mov    %r12,%rdi
  d8:	89 c2                	mov    %eax,%edx
  da:	e8 00 00 00 00       	call   df <ArtNetParams::Set(unsigned int)+0xdf>
  df:	44 89 fe             	mov    %r15d,%esi
  e2:	48 89 ef             	mov    %rbp,%rdi
  e5:	e8 00 00 00 00       	call   ea <ArtNetParams::Set(unsigned int)+0xea>
  ea:	44 89 f6             	mov    %r14d,%esi
  ed:	4c 89 e7             	mov    %r12,%rdi
  f0:	89 c2                	mov    %eax,%edx
  f2:	e8 00 00 00 00       	call   f7 <ArtNetParams::Set(unsigned int)+0xf7>
  f7:	0f b7 bd a6 00 00 00 	movzwl 0xa6(%rbp),%edi
  fe:	44 89 fe             	mov    %r15d,%esi
 101:	e8 00 00 00 00       	call   106 <ArtNetParams::Set(unsigned int)+0x106>
 106:	84 c0                	test   %al,%al
 108:	74 10                	je     11a <ArtNetParams::Set(unsigned int)+0x11a>
 10a:	ba 01 00 00 00       	mov    $0x1,%edx
 10f:	44 89 f6             	mov    %r14d,%esi
 112:	4c 89 e7             	mov    %r12,%rdi
 115:	e8 00 00 00 00       	call   11a <ArtNetParams::Set(unsigned int)+0x11a>
 11a:	be 00 00 40 00       	mov    $0x400000,%esi
 11f:	44 89 f9             	mov    %r15d,%ecx
 122:	48 89 ef             	mov    %rbp,%rdi
 125:	d3 e6                	shl    %cl,%esi
 127:	e8 00 00 00 00       	call   12c <ArtNetParams::Set(unsigned int)+0x12c>
 12c:	84 c0                	test   %al,%al
 12e:	74 16                	je     146 <ArtNetParams::Set(unsigned int)+0x146>
 130:	44 89 e8             	mov    %r13d,%eax
 133:	4c 89 e7             	mov    %r12,%rdi
 136:	48 01 e8             	add    %rbp,%rax
 139:	0f b6 b4 18 b8 00 00 	movzbl 0xb8(%rax,%rbx,1),%esi
 140:	00 
 141:	e8 00 00 00 00       	call   146 <ArtNetParams::Set(unsigned int)+0x146>
 146:	48 83 44 24 08 12    	addq   $0x12,0x8(%rsp)
 14c:	48 ff c3             	inc    %rbx
 14f:	e9 2d ff ff ff       	jmp    81 <ArtNetParams::Set(unsigned int)+0x81>
 154:	0f b6 7d 1a          	movzbl 0x1a(%rbp),%edi
 158:	e8 00 00 00 00       	call   15d <ArtNetParams::Set(unsigned int)+0x15d>
 15d:	4c 89 e7             	mov    %r12,%rdi
 160:	89 c6                	mov    %eax,%esi
 162:	e8 00 00 00 00       	call   167 <ArtNetParams::Set(unsigned int)+0x167>
 167:	be 00 00 02 00       	mov    $0x20000,%esi
 16c:	48 89 ef             	mov    %rbp,%rdi
 16f:	e8 00 00 00 00       	call   174 <ArtNetParams::Set(unsigned int)+0x174>
 174:	84 c0                	test   %al,%al
 176:	74 0d                	je     185 <ArtNetParams::Set(unsigned int)+0x185>
 178:	be 01 00 00 00       	mov    $0x1,%esi
 17d:	4c 89 e7             	mov    %r12,%rdi
 180:	e8 00 00 00 00       	call   185 <ArtNetParams::Set(unsigned int)+0x185>
 185:	be 00 08 00 00       	mov    $0x800,%esi
 18a:	48 89 ef             	mov    %rbp,%rdi
 18d:	e8 00 00 00 00       	call   192 <ArtNetParams::Set(unsigned int)+0x192>
 192:	84 c0                	test   %al,%al
 194:	74 2b                	je     1c1 <ArtNetParams::Set(unsigned int)+0x1c1>
 196:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 19b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1a2:	00 00 
 1a4:	75 2b                	jne    1d1 <ArtNetParams::Set(unsigned int)+0x1d1>
 1a6:	48 83 c4 28          	add    $0x28,%rsp
 1aa:	4c 89 e7             	mov    %r12,%rdi
 1ad:	be 01 00 00 00       	mov    $0x1,%esi
 1b2:	5b                   	pop    %rbx
 1b3:	5d                   	pop    %rbp
 1b4:	41 5c                	pop    %r12
 1b6:	41 5d                	pop    %r13
 1b8:	41 5e                	pop    %r14
 1ba:	41 5f                	pop    %r15
 1bc:	e9 00 00 00 00       	jmp    1c1 <ArtNetParams::Set(unsigned int)+0x1c1>
 1c1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 1c6:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1cd:	00 00 
 1cf:	74 05                	je     1d6 <ArtNetParams::Set(unsigned int)+0x1d6>
 1d1:	e8 00 00 00 00       	call   1d6 <ArtNetParams::Set(unsigned int)+0x1d6>
 1d6:	48 83 c4 28          	add    $0x28,%rsp
 1da:	5b                   	pop    %rbx
 1db:	5d                   	pop    %rbp
 1dc:	41 5c                	pop    %r12
 1de:	41 5d                	pop    %r13
 1e0:	41 5e                	pop    %r14
 1e2:	41 5f                	pop    %r15
 1e4:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIbEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	49 89 f2             	mov    %rsi,%r10
   8:	89 d0                	mov    %edx,%eax
   a:	53                   	push   %rbx
   b:	48 83 ec 18          	sub    $0x18,%rsp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
  17:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
  1e:	00 00 
  20:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  25:	31 d2                	xor    %edx,%edx
  27:	66 39 ee             	cmp    %bp,%si
  2a:	72 04                	jb     30 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x30>
  2c:	31 c0                	xor    %eax,%eax
  2e:	eb 2c                	jmp    5c <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x5c>
  30:	0f b7 d6             	movzwl %si,%edx
  33:	44 0f b6 c9          	movzbl %cl,%r9d
  37:	48 03 37             	add    (%rdi),%rsi
  3a:	4c 89 d1             	mov    %r10,%rcx
  3d:	29 d5                	sub    %edx,%ebp
  3f:	52                   	push   %rdx
  40:	48 89 fb             	mov    %rdi,%rbx
  43:	41 50                	push   %r8
  45:	89 ea                	mov    %ebp,%edx
  47:	44 0f b6 c0          	movzbl %al,%r8d
  4b:	e8 00 00 00 00       	call   50 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x50>
  50:	59                   	pop    %rcx
  51:	5e                   	pop    %rsi
  52:	39 c5                	cmp    %eax,%ebp
  54:	7c d6                	jl     2c <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x2c>
  56:	66 01 43 0a          	add    %ax,0xa(%rbx)
  5a:	b0 01                	mov    $0x1,%al
  5c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  61:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  68:	00 00 
  6a:	74 05                	je     71 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x71>
  6c:	e8 00 00 00 00       	call   71 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x71>
  71:	48 83 c4 18          	add    $0x18,%rsp
  75:	5b                   	pop    %rbx
  76:	5d                   	pop    %rbp
  77:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIPKcEEbS2_T_bj:

0000000000000000 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	49 89 f2             	mov    %rsi,%r10
   8:	48 89 d0             	mov    %rdx,%rax
   b:	53                   	push   %rbx
   c:	48 83 ec 18          	sub    $0x18,%rsp
  10:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  14:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
  18:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
  1f:	00 00 
  21:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  26:	31 d2                	xor    %edx,%edx
  28:	66 39 ee             	cmp    %bp,%si
  2b:	72 04                	jb     31 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x31>
  2d:	31 c0                	xor    %eax,%eax
  2f:	eb 2b                	jmp    5c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x5c>
  31:	0f b7 d6             	movzwl %si,%edx
  34:	44 0f b6 c9          	movzbl %cl,%r9d
  38:	48 03 37             	add    (%rdi),%rsi
  3b:	4c 89 d1             	mov    %r10,%rcx
  3e:	29 d5                	sub    %edx,%ebp
  40:	52                   	push   %rdx
  41:	48 89 fb             	mov    %rdi,%rbx
  44:	41 50                	push   %r8
  46:	89 ea                	mov    %ebp,%edx
  48:	49 89 c0             	mov    %rax,%r8
  4b:	e8 00 00 00 00       	call   50 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x50>
  50:	59                   	pop    %rcx
  51:	5e                   	pop    %rsi
  52:	39 c5                	cmp    %eax,%ebp
  54:	7c d7                	jl     2d <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x2d>
  56:	66 01 43 0a          	add    %ax,0xa(%rbx)
  5a:	b0 01                	mov    $0x1,%al
  5c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  61:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  68:	00 00 
  6a:	74 05                	je     71 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x71>
  6c:	e8 00 00 00 00       	call   71 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x71>
  71:	48 83 c4 18          	add    $0x18,%rsp
  75:	5b                   	pop    %rbx
  76:	5d                   	pop    %rbp
  77:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddItEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	49 89 f2             	mov    %rsi,%r10
   8:	89 d0                	mov    %edx,%eax
   a:	53                   	push   %rbx
   b:	48 83 ec 18          	sub    $0x18,%rsp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
  17:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
  1e:	00 00 
  20:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  25:	31 d2                	xor    %edx,%edx
  27:	66 39 ee             	cmp    %bp,%si
  2a:	72 04                	jb     30 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x30>
  2c:	31 c0                	xor    %eax,%eax
  2e:	eb 2c                	jmp    5c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x5c>
  30:	0f b7 d6             	movzwl %si,%edx
  33:	44 0f b6 c9          	movzbl %cl,%r9d
  37:	48 03 37             	add    (%rdi),%rsi
  3a:	4c 89 d1             	mov    %r10,%rcx
  3d:	29 d5                	sub    %edx,%ebp
  3f:	52                   	push   %rdx
  40:	48 89 fb             	mov    %rdi,%rbx
  43:	41 50                	push   %r8
  45:	89 ea                	mov    %ebp,%edx
  47:	44 0f b7 c0          	movzwl %ax,%r8d
  4b:	e8 00 00 00 00       	call   50 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x50>
  50:	59                   	pop    %rcx
  51:	5e                   	pop    %rsi
  52:	39 c5                	cmp    %eax,%ebp
  54:	7c d6                	jl     2c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x2c>
  56:	66 01 43 0a          	add    %ax,0xa(%rbx)
  5a:	b0 01                	mov    $0x1,%al
  5c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  61:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  68:	00 00 
  6a:	74 05                	je     71 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x71>
  6c:	e8 00 00 00 00       	call   71 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x71>
  71:	48 83 c4 18          	add    $0x18,%rsp
  75:	5b                   	pop    %rbx
  76:	5d                   	pop    %rbp
  77:	c3                   	ret    

Disassembly of section .text._ZSt3minIjERKT_S2_S2_:

0000000000000000 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	48 89 f0             	mov    %rsi,%rax
   b:	8b 0f                	mov    (%rdi),%ecx
   d:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
  14:	00 00 
  16:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
  1b:	31 d2                	xor    %edx,%edx
  1d:	39 0e                	cmp    %ecx,(%rsi)
  1f:	72 03                	jb     24 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x24>
  21:	48 89 f8             	mov    %rdi,%rax
  24:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  29:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  30:	00 00 
  32:	74 05                	je     39 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x39>
  34:	e8 00 00 00 00       	call   39 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x39>
  39:	48 83 c4 18          	add    $0x18,%rsp
  3d:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIbEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	49 89 fa             	mov    %rdi,%r10
   b:	45 0f b6 c0          	movzbl %r8b,%r8d
   f:	48 89 f7             	mov    %rsi,%rdi
  12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  19:	00 00 
  1b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  20:	31 c0                	xor    %eax,%eax
  22:	89 d6                	mov    %edx,%esi
  24:	41 8a 42 0c          	mov    0xc(%r10),%al
  28:	45 84 c9             	test   %r9b,%r9b
  2b:	75 06                	jne    33 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x33>
  2d:	84 c0                	test   %al,%al
  2f:	75 06                	jne    37 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x37>
  31:	eb 36                	jmp    69 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x69>
  33:	84 c0                	test   %al,%al
  35:	74 19                	je     50 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x50>
  37:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  3c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  43:	00 00 
  45:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 4c <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x4c>
  4c:	74 37                	je     85 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x85>
  4e:	eb 30                	jmp    80 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x80>
  50:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  55:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5c:	00 00 
  5e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 65 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x65>
  65:	74 1e                	je     85 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x85>
  67:	eb 17                	jmp    80 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x80>
  69:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  6e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  75:	00 00 
  77:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 7e <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x7e>
  7e:	74 05                	je     85 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x85>
  80:	e8 00 00 00 00       	call   85 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x85>
  85:	31 c0                	xor    %eax,%eax
  87:	48 83 c4 18          	add    $0x18,%rsp
  8b:	e9 00 00 00 00       	jmp    90 <.LC21+0x7b>

Disassembly of section .text._ZN17PropertiesBuilder8add_partItEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	49 89 fa             	mov    %rdi,%r10
   b:	45 0f b7 c0          	movzwl %r8w,%r8d
   f:	48 89 f7             	mov    %rsi,%rdi
  12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  19:	00 00 
  1b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  20:	31 c0                	xor    %eax,%eax
  22:	89 d6                	mov    %edx,%esi
  24:	41 8a 42 0c          	mov    0xc(%r10),%al
  28:	45 84 c9             	test   %r9b,%r9b
  2b:	75 06                	jne    33 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x33>
  2d:	84 c0                	test   %al,%al
  2f:	75 06                	jne    37 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x37>
  31:	eb 36                	jmp    69 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x69>
  33:	84 c0                	test   %al,%al
  35:	74 19                	je     50 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x50>
  37:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  3c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  43:	00 00 
  45:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 4c <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x4c>
  4c:	74 37                	je     85 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x85>
  4e:	eb 30                	jmp    80 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x80>
  50:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  55:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5c:	00 00 
  5e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 65 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x65>
  65:	74 1e                	je     85 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x85>
  67:	eb 17                	jmp    80 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x80>
  69:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  6e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  75:	00 00 
  77:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 7e <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x7e>
  7e:	74 05                	je     85 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x85>
  80:	e8 00 00 00 00       	call   85 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x85>
  85:	31 c0                	xor    %eax,%eax
  87:	48 83 c4 18          	add    $0x18,%rsp
  8b:	e9 00 00 00 00       	jmp    90 <.LC21+0x7b>

artnetparamsdump.o:     file format elf64-x86-64


Disassembly of section .text._ZN12ArtNetParams4DumpEv:

0000000000000000 <ArtNetParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ec 18          	sub    $0x18,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  16:	31 c0                	xor    %eax,%eax
  18:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  1d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  24:	00 00 
  26:	74 05                	je     2d <ArtNetParams::Dump()+0x2d>
  28:	e8 00 00 00 00       	call   2d <ArtNetParams::Dump()+0x2d>
  2d:	48 83 c4 18          	add    $0x18,%rsp
  31:	c3                   	ret    

artnettrigger.o:     file format elf64-x86-64


Disassembly of section .text._ZN10ArtNetNode13HandleTriggerEv:

0000000000000000 <ArtNetNode::HandleTrigger()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  32:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
  36:	3c ff                	cmp    $0xff,%al
  38:	75 0c                	jne    46 <ArtNetNode::HandleTrigger()+0x46>
  3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  3e:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
  42:	3c ff                	cmp    $0xff,%al
  44:	74 26                	je     6c <ArtNetNode::HandleTrigger()+0x6c>
  46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4a:	0f b6 50 0e          	movzbl 0xe(%rax),%edx
  4e:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 55 <ArtNetNode::HandleTrigger()+0x55>
  55:	38 c2                	cmp    %al,%dl
  57:	75 43                	jne    9c <ArtNetNode::HandleTrigger()+0x9c>
  59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5d:	0f b6 50 0f          	movzbl 0xf(%rax),%edx
  61:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 68 <ArtNetNode::HandleTrigger()+0x68>
  68:	38 c2                	cmp    %al,%dl
  6a:	75 30                	jne    9c <ArtNetNode::HandleTrigger()+0x9c>
  6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  70:	48 8b 80 68 02 00 00 	mov    0x268(%rax),%rax
  77:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  7b:	48 8b 92 68 02 00 00 	mov    0x268(%rdx),%rdx
  82:	48 8b 12             	mov    (%rdx),%rdx
  85:	48 83 c2 10          	add    $0x10,%rdx
  89:	48 8b 12             	mov    (%rdx),%rdx
  8c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  90:	48 83 c1 10          	add    $0x10,%rcx
  94:	48 89 ce             	mov    %rcx,%rsi
  97:	48 89 c7             	mov    %rax,%rdi
  9a:	ff d2                	call   *%rdx
  9c:	90                   	nop
  9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  a8:	00 00 
  aa:	74 05                	je     b1 <ArtNetNode::HandleTrigger()+0xb1>
  ac:	e8 00 00 00 00       	call   b1 <ArtNetNode::HandleTrigger()+0xb1>
  b1:	c9                   	leave  
  b2:	c3                   	ret    

handlerdm.o:     file format elf64-x86-64


Disassembly of section .text._ZNK7Network14GetBroadcastIpEv:

0000000000000000 <Network::GetBroadcastIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 50 10             	mov    0x10(%rax),%edx
  26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2a:	8b 40 18             	mov    0x18(%rax),%eax
  2d:	f7 d0                	not    %eax
  2f:	09 d0                	or     %edx,%eax
  31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  35:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  3c:	00 00 
  3e:	74 05                	je     45 <Network::GetBroadcastIp() const+0x45>
  40:	e8 00 00 00 00       	call   45 <Network::GetBroadcastIp() const+0x45>
  45:	c9                   	leave  
  46:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Network::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Network::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Network::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode6SetRmdEjb:

0000000000000000 <ArtNetNode::SetRmd(unsigned int, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 e0             	mov    %al,-0x20(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  2b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  2e:	48 c1 e0 05          	shl    $0x5,%rax
  32:	48 01 d0             	add    %rdx,%rax
  35:	48 05 81 03 00 00    	add    $0x381,%rax
  3b:	0f b6 00             	movzbl (%rax),%eax
  3e:	f7 d0                	not    %eax
  40:	c0 e8 07             	shr    $0x7,%al
  43:	88 45 f7             	mov    %al,-0x9(%rbp)
  46:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  4a:	3a 45 e0             	cmp    -0x20(%rbp),%al
  4d:	0f 84 d1 00 00 00    	je     124 <ArtNetNode::SetRmd(unsigned int, bool)+0x124>
  53:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
  57:	83 f0 01             	xor    $0x1,%eax
  5a:	84 c0                	test   %al,%al
  5c:	74 34                	je     92 <ArtNetNode::SetRmd(unsigned int, bool)+0x92>
  5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  62:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  65:	48 c1 e0 05          	shl    $0x5,%rax
  69:	48 01 d0             	add    %rdx,%rax
  6c:	48 05 81 03 00 00    	add    $0x381,%rax
  72:	0f b6 00             	movzbl (%rax),%eax
  75:	83 c8 80             	or     $0xffffff80,%eax
  78:	89 c2                	mov    %eax,%edx
  7a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  7e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  81:	48 c1 e0 05          	shl    $0x5,%rax
  85:	48 01 c8             	add    %rcx,%rax
  88:	48 05 81 03 00 00    	add    $0x381,%rax
  8e:	88 10                	mov    %dl,(%rax)
  90:	eb 32                	jmp    c4 <ArtNetNode::SetRmd(unsigned int, bool)+0xc4>
  92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  96:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  99:	48 c1 e0 05          	shl    $0x5,%rax
  9d:	48 01 d0             	add    %rdx,%rax
  a0:	48 05 81 03 00 00    	add    $0x381,%rax
  a6:	0f b6 00             	movzbl (%rax),%eax
  a9:	83 e0 7f             	and    $0x7f,%eax
  ac:	89 c2                	mov    %eax,%edx
  ae:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  b2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  b5:	48 c1 e0 05          	shl    $0x5,%rax
  b9:	48 01 c8             	add    %rcx,%rax
  bc:	48 05 81 03 00 00    	add    $0x381,%rax
  c2:	88 10                	mov    %dl,(%rax)
  c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c8:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  cf:	3c 02                	cmp    $0x2,%al
  d1:	75 52                	jne    125 <ArtNetNode::SetRmd(unsigned int, bool)+0x125>
  d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d7:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  de:	48 85 c0             	test   %rax,%rax
  e1:	74 2f                	je     112 <ArtNetNode::SetRmd(unsigned int, bool)+0x112>
  e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e7:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  f2:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
  f9:	48 8b 12             	mov    (%rdx),%rdx
  fc:	48 83 c2 50          	add    $0x50,%rdx
 100:	4c 8b 02             	mov    (%rdx),%r8
 103:	0f b6 55 e0          	movzbl -0x20(%rbp),%edx
 107:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 10a:	89 ce                	mov    %ecx,%esi
 10c:	48 89 c7             	mov    %rax,%rdi
 10f:	41 ff d0             	call   *%r8
 112:	0f b6 55 e0          	movzbl -0x20(%rbp),%edx
 116:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 119:	89 d6                	mov    %edx,%esi
 11b:	89 c7                	mov    %eax,%edi
 11d:	e8 00 00 00 00       	call   122 <ArtNetNode::SetRmd(unsigned int, bool)+0x122>
 122:	eb 01                	jmp    125 <ArtNetNode::SetRmd(unsigned int, bool)+0x125>
 124:	90                   	nop
 125:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 129:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 130:	00 00 
 132:	74 05                	je     139 <ArtNetNode::SetRmd(unsigned int, bool)+0x139>
 134:	e8 00 00 00 00       	call   139 <ArtNetNode::SetRmd(unsigned int, bool)+0x139>
 139:	c9                   	leave  
 13a:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode16HandleTodControlEv:

0000000000000000 <ArtNetNode::HandleTodControl()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  32:	0f b6 40 15          	movzbl 0x15(%rax),%eax
  36:	0f b6 c0             	movzbl %al,%eax
  39:	c1 e0 08             	shl    $0x8,%eax
  3c:	0f b7 d0             	movzwl %ax,%edx
  3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  47:	0f b6 c0             	movzbl %al,%eax
  4a:	09 d0                	or     %edx,%eax
  4c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  56:	e9 71 01 00 00       	jmp    1cc <ArtNetNode::HandleTodControl()+0x1cc>
  5b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  5f:	8b 45 e8             	mov    -0x18(%rbp),%eax
  62:	48 c1 e0 05          	shl    $0x5,%rax
  66:	48 01 d0             	add    %rdx,%rax
  69:	48 05 81 03 00 00    	add    $0x381,%rax
  6f:	0f b6 00             	movzbl (%rax),%eax
  72:	84 c0                	test   %al,%al
  74:	0f 88 4d 01 00 00    	js     1c7 <ArtNetNode::HandleTodControl()+0x1c7>
  7a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  7e:	8b 55 e8             	mov    -0x18(%rbp),%edx
  81:	48 89 d0             	mov    %rdx,%rax
  84:	48 c1 e0 03          	shl    $0x3,%rax
  88:	48 01 d0             	add    %rdx,%rax
  8b:	48 c1 e0 02          	shl    $0x2,%rax
  8f:	48 01 c8             	add    %rcx,%rax
  92:	48 05 92 02 00 00    	add    $0x292,%rax
  98:	0f b7 00             	movzwl (%rax),%eax
  9b:	0f b7 c0             	movzwl %ax,%eax
  9e:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  a1:	0f 85 21 01 00 00    	jne    1c8 <ArtNetNode::HandleTodControl()+0x1c8>
  a7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  ab:	8b 55 e8             	mov    -0x18(%rbp),%edx
  ae:	48 89 d0             	mov    %rdx,%rax
  b1:	48 c1 e0 03          	shl    $0x3,%rax
  b5:	48 01 d0             	add    %rdx,%rax
  b8:	48 c1 e0 02          	shl    $0x2,%rax
  bc:	48 01 c8             	add    %rcx,%rax
  bf:	48 05 98 02 00 00    	add    $0x298,%rax
  c5:	8b 00                	mov    (%rax),%eax
  c7:	83 f8 01             	cmp    $0x1,%eax
  ca:	0f 85 f8 00 00 00    	jne    1c8 <ArtNetNode::HandleTodControl()+0x1c8>
  d0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  d4:	8b 45 e8             	mov    -0x18(%rbp),%eax
  d7:	48 c1 e0 05          	shl    $0x5,%rax
  db:	48 01 d0             	add    %rdx,%rax
  de:	48 05 83 03 00 00    	add    $0x383,%rax
  e4:	0f b6 00             	movzbl (%rax),%eax
  e7:	84 c0                	test   %al,%al
  e9:	74 3c                	je     127 <ArtNetNode::HandleTodControl()+0x127>
  eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ef:	0f b6 80 7c 02 00 00 	movzbl 0x27c(%rax),%eax
  f6:	83 f0 01             	xor    $0x1,%eax
  f9:	84 c0                	test   %al,%al
  fb:	74 2a                	je     127 <ArtNetNode::HandleTodControl()+0x127>
  fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 101:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 108:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 10c:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
 113:	48 8b 12             	mov    (%rdx),%rdx
 116:	48 83 c2 18          	add    $0x18,%rdx
 11a:	48 8b 0a             	mov    (%rdx),%rcx
 11d:	8b 55 e8             	mov    -0x18(%rbp),%edx
 120:	89 d6                	mov    %edx,%esi
 122:	48 89 c7             	mov    %rax,%rdi
 125:	ff d1                	call   *%rcx
 127:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 12b:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 12f:	3c 01                	cmp    $0x1,%al
 131:	75 2a                	jne    15d <ArtNetNode::HandleTodControl()+0x15d>
 133:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 137:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 13e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 142:	48 8b 92 60 02 00 00 	mov    0x260(%rdx),%rdx
 149:	48 8b 12             	mov    (%rdx),%rdx
 14c:	48 83 c2 10          	add    $0x10,%rdx
 150:	48 8b 0a             	mov    (%rdx),%rcx
 153:	8b 55 e8             	mov    -0x18(%rbp),%edx
 156:	89 d6                	mov    %edx,%esi
 158:	48 89 c7             	mov    %rax,%rdi
 15b:	ff d1                	call   *%rcx
 15d:	8b 55 e8             	mov    -0x18(%rbp),%edx
 160:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 164:	89 d6                	mov    %edx,%esi
 166:	48 89 c7             	mov    %rax,%rdi
 169:	e8 00 00 00 00       	call   16e <ArtNetNode::HandleTodControl()+0x16e>
 16e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 172:	8b 45 e8             	mov    -0x18(%rbp),%eax
 175:	48 c1 e0 05          	shl    $0x5,%rax
 179:	48 01 d0             	add    %rdx,%rax
 17c:	48 05 83 03 00 00    	add    $0x383,%rax
 182:	0f b6 00             	movzbl (%rax),%eax
 185:	84 c0                	test   %al,%al
 187:	74 3f                	je     1c8 <ArtNetNode::HandleTodControl()+0x1c8>
 189:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 18d:	0f b6 80 7c 02 00 00 	movzbl 0x27c(%rax),%eax
 194:	83 f0 01             	xor    $0x1,%eax
 197:	84 c0                	test   %al,%al
 199:	74 2d                	je     1c8 <ArtNetNode::HandleTodControl()+0x1c8>
 19b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 19f:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 1a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 1aa:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
 1b1:	48 8b 12             	mov    (%rdx),%rdx
 1b4:	48 83 c2 10          	add    $0x10,%rdx
 1b8:	48 8b 0a             	mov    (%rdx),%rcx
 1bb:	8b 55 e8             	mov    -0x18(%rbp),%edx
 1be:	89 d6                	mov    %edx,%esi
 1c0:	48 89 c7             	mov    %rax,%rdi
 1c3:	ff d1                	call   *%rcx
 1c5:	eb 01                	jmp    1c8 <ArtNetNode::HandleTodControl()+0x1c8>
 1c7:	90                   	nop
 1c8:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 1cc:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
 1d0:	0f 86 85 fe ff ff    	jbe    5b <ArtNetNode::HandleTodControl()+0x5b>
 1d6:	90                   	nop
 1d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1db:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1e2:	00 00 
 1e4:	74 05                	je     1eb <ArtNetNode::HandleTodControl()+0x1eb>
 1e6:	e8 00 00 00 00       	call   1eb <ArtNetNode::HandleTodControl()+0x1eb>
 1eb:	c9                   	leave  
 1ec:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode16HandleTodRequestEv:

0000000000000000 <ArtNetNode::HandleTodRequest()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  32:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  36:	0f b6 c0             	movzbl %al,%eax
  39:	83 e0 1f             	and    $0x1f,%eax
  3c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  3f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  46:	e9 c2 00 00 00       	jmp    10d <ArtNetNode::HandleTodRequest()+0x10d>
  4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4f:	0f b6 40 15          	movzbl 0x15(%rax),%eax
  53:	0f b6 c0             	movzbl %al,%eax
  56:	c1 e0 08             	shl    $0x8,%eax
  59:	0f b7 c8             	movzwl %ax,%ecx
  5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  60:	8b 45 e0             	mov    -0x20(%rbp),%eax
  63:	48 98                	cltq   
  65:	0f b6 44 02 18       	movzbl 0x18(%rdx,%rax,1),%eax
  6a:	0f b6 c0             	movzbl %al,%eax
  6d:	09 c8                	or     %ecx,%eax
  6f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  72:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  79:	e9 81 00 00 00       	jmp    ff <ArtNetNode::HandleTodRequest()+0xff>
  7e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  82:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  85:	48 c1 e0 05          	shl    $0x5,%rax
  89:	48 01 d0             	add    %rdx,%rax
  8c:	48 05 81 03 00 00    	add    $0x381,%rax
  92:	0f b6 00             	movzbl (%rax),%eax
  95:	84 c0                	test   %al,%al
  97:	78 61                	js     fa <ArtNetNode::HandleTodRequest()+0xfa>
  99:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  9d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  a0:	48 89 d0             	mov    %rdx,%rax
  a3:	48 c1 e0 03          	shl    $0x3,%rax
  a7:	48 01 d0             	add    %rdx,%rax
  aa:	48 c1 e0 02          	shl    $0x2,%rax
  ae:	48 01 c8             	add    %rcx,%rax
  b1:	48 05 92 02 00 00    	add    $0x292,%rax
  b7:	0f b7 00             	movzwl (%rax),%eax
  ba:	0f b7 c0             	movzwl %ax,%eax
  bd:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  c0:	75 39                	jne    fb <ArtNetNode::HandleTodRequest()+0xfb>
  c2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  c6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  c9:	48 89 d0             	mov    %rdx,%rax
  cc:	48 c1 e0 03          	shl    $0x3,%rax
  d0:	48 01 d0             	add    %rdx,%rax
  d3:	48 c1 e0 02          	shl    $0x2,%rax
  d7:	48 01 c8             	add    %rcx,%rax
  da:	48 05 98 02 00 00    	add    $0x298,%rax
  e0:	8b 00                	mov    (%rax),%eax
  e2:	83 f8 01             	cmp    $0x1,%eax
  e5:	75 14                	jne    fb <ArtNetNode::HandleTodRequest()+0xfb>
  e7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ee:	89 d6                	mov    %edx,%esi
  f0:	48 89 c7             	mov    %rax,%rdi
  f3:	e8 00 00 00 00       	call   f8 <ArtNetNode::HandleTodRequest()+0xf8>
  f8:	eb 01                	jmp    fb <ArtNetNode::HandleTodRequest()+0xfb>
  fa:	90                   	nop
  fb:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  ff:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
 103:	0f 86 75 ff ff ff    	jbe    7e <ArtNetNode::HandleTodRequest()+0x7e>
 109:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 10d:	8b 45 e0             	mov    -0x20(%rbp),%eax
 110:	3b 45 e8             	cmp    -0x18(%rbp),%eax
 113:	0f 8c 32 ff ff ff    	jl     4b <ArtNetNode::HandleTodRequest()+0x4b>
 119:	90                   	nop
 11a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 11e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 125:	00 00 
 127:	74 05                	je     12e <ArtNetNode::HandleTodRequest()+0x12e>
 129:	e8 00 00 00 00       	call   12e <ArtNetNode::HandleTodRequest()+0x12e>
 12e:	c9                   	leave  
 12f:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode13HandleTodDataEv:

0000000000000000 <ArtNetNode::HandleTodData()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  36:	3c 01                	cmp    $0x1,%al
  38:	0f 85 ff 00 00 00    	jne    13d <ArtNetNode::HandleTodData()+0x13d>
  3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42:	0f b6 40 15          	movzbl 0x15(%rax),%eax
  46:	0f b6 c0             	movzbl %al,%eax
  49:	c1 e0 08             	shl    $0x8,%eax
  4c:	0f b7 d0             	movzwl %ax,%edx
  4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  53:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  57:	0f b6 c0             	movzbl %al,%eax
  5a:	09 d0                	or     %edx,%eax
  5c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  5f:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  66:	e9 c6 00 00 00       	jmp    131 <ArtNetNode::HandleTodData()+0x131>
  6b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  6f:	8b 55 dc             	mov    -0x24(%rbp),%edx
  72:	48 89 d0             	mov    %rdx,%rax
  75:	48 c1 e0 03          	shl    $0x3,%rax
  79:	48 01 d0             	add    %rdx,%rax
  7c:	48 c1 e0 02          	shl    $0x2,%rax
  80:	48 01 c8             	add    %rcx,%rax
  83:	48 05 98 02 00 00    	add    $0x298,%rax
  89:	8b 00                	mov    (%rax),%eax
  8b:	85 c0                	test   %eax,%eax
  8d:	0f 85 99 00 00 00    	jne    12c <ArtNetNode::HandleTodData()+0x12c>
  93:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  97:	8b 55 dc             	mov    -0x24(%rbp),%edx
  9a:	48 89 d0             	mov    %rdx,%rax
  9d:	48 c1 e0 03          	shl    $0x3,%rax
  a1:	48 01 d0             	add    %rdx,%rax
  a4:	48 c1 e0 02          	shl    $0x2,%rax
  a8:	48 01 c8             	add    %rcx,%rax
  ab:	48 05 92 02 00 00    	add    $0x292,%rax
  b1:	0f b7 00             	movzwl (%rax),%eax
  b4:	0f b7 c0             	movzwl %ax,%eax
  b7:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  ba:	75 71                	jne    12d <ArtNetNode::HandleTodData()+0x12d>
  bc:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  c3:	eb 55                	jmp    11a <ArtNetNode::HandleTodData()+0x11a>
  c5:	8b 55 e0             	mov    -0x20(%rbp),%edx
  c8:	48 89 d0             	mov    %rdx,%rax
  cb:	48 01 c0             	add    %rax,%rax
  ce:	48 01 d0             	add    %rdx,%rax
  d1:	48 01 c0             	add    %rax,%rax
  d4:	48 8d 50 10          	lea    0x10(%rax),%rdx
  d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  dc:	48 01 d0             	add    %rdx,%rax
  df:	48 83 c0 0c          	add    $0xc,%rax
  e3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  eb:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
  f2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  f6:	48 8b 92 60 02 00 00 	mov    0x260(%rdx),%rdx
  fd:	48 8b 12             	mov    (%rdx),%rdx
 100:	48 83 c2 30          	add    $0x30,%rdx
 104:	4c 8b 02             	mov    (%rdx),%r8
 107:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 10b:	8b 4d dc             	mov    -0x24(%rbp),%ecx
 10e:	89 ce                	mov    %ecx,%esi
 110:	48 89 c7             	mov    %rax,%rdi
 113:	41 ff d0             	call   *%r8
 116:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 11a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11e:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
 122:	0f b6 c0             	movzbl %al,%eax
 125:	39 45 e0             	cmp    %eax,-0x20(%rbp)
 128:	72 9b                	jb     c5 <ArtNetNode::HandleTodData()+0xc5>
 12a:	eb 01                	jmp    12d <ArtNetNode::HandleTodData()+0x12d>
 12c:	90                   	nop
 12d:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 131:	83 7d dc 03          	cmpl   $0x3,-0x24(%rbp)
 135:	0f 86 30 ff ff ff    	jbe    6b <ArtNetNode::HandleTodData()+0x6b>
 13b:	eb 01                	jmp    13e <ArtNetNode::HandleTodData()+0x13e>
 13d:	90                   	nop
 13e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 142:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 149:	00 00 
 14b:	74 05                	je     152 <ArtNetNode::HandleTodData()+0x152>
 14d:	e8 00 00 00 00       	call   152 <ArtNetNode::HandleTodData()+0x152>
 152:	c9                   	leave  
 153:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode7SendTodEj:

0000000000000000 <ArtNetNode::SendTod(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  11:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  27:	48 05 07 05 00 00    	add    $0x507,%rax
  2d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  31:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  34:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  3b:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 42 <ArtNetNode::SendTod(unsigned int)+0x42>
  42:	48 89 10             	mov    %rdx,(%rax)
  45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  49:	66 c7 40 08 00 81    	movw   $0x8100,0x8(%rax)
  4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  53:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5b:	c6 40 0b 0e          	movb   $0xe,0xb(%rax)
  5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  63:	c6 40 0c 01          	movb   $0x1,0xc(%rax)
  67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  6b:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
  72:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  76:	48 8b 92 60 02 00 00 	mov    0x260(%rdx),%rdx
  7d:	48 8b 12             	mov    (%rdx),%rdx
  80:	48 83 c2 18          	add    $0x18,%rdx
  84:	48 8b 0a             	mov    (%rdx),%rcx
  87:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  8a:	89 d6                	mov    %edx,%esi
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	ff d1                	call   *%rcx
  91:	88 45 d3             	mov    %al,-0x2d(%rbp)
  94:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  97:	83 e0 03             	and    $0x3,%eax
  9a:	8d 50 01             	lea    0x1(%rax),%edx
  9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a1:	88 50 0d             	mov    %dl,0xd(%rax)
  a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a8:	c6 40 0e 00          	movb   $0x0,0xe(%rax)
  ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b0:	c6 40 0f 00          	movb   $0x0,0xf(%rax)
  b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b8:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c0:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c8:	c6 40 12 00          	movb   $0x0,0x12(%rax)
  cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d0:	c6 40 13 00          	movb   $0x0,0x13(%rax)
  d4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  d7:	8d 50 01             	lea    0x1(%rax),%edx
  da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  de:	88 50 14             	mov    %dl,0x14(%rax)
  e1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  e5:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  e8:	48 89 d0             	mov    %rdx,%rax
  eb:	48 c1 e0 03          	shl    $0x3,%rax
  ef:	48 01 d0             	add    %rdx,%rax
  f2:	48 c1 e0 02          	shl    $0x2,%rax
  f6:	48 01 c8             	add    %rcx,%rax
  f9:	48 05 95 02 00 00    	add    $0x295,%rax
  ff:	0f b6 10             	movzbl (%rax),%edx
 102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 106:	88 50 15             	mov    %dl,0x15(%rax)
 109:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 10d:	c6 40 16 00          	movb   $0x0,0x16(%rax)
 111:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 115:	8b 55 c4             	mov    -0x3c(%rbp),%edx
 118:	48 89 d0             	mov    %rdx,%rax
 11b:	48 c1 e0 03          	shl    $0x3,%rax
 11f:	48 01 d0             	add    %rdx,%rax
 122:	48 c1 e0 02          	shl    $0x2,%rax
 126:	48 01 c8             	add    %rcx,%rax
 129:	48 05 94 02 00 00    	add    $0x294,%rax
 12f:	0f b6 10             	movzbl (%rax),%edx
 132:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 136:	88 50 17             	mov    %dl,0x17(%rax)
 139:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 13d:	c6 40 18 00          	movb   $0x0,0x18(%rax)
 141:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 145:	0f b6 55 d3          	movzbl -0x2d(%rbp),%edx
 149:	88 50 19             	mov    %dl,0x19(%rax)
 14c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 150:	c6 40 1a 00          	movb   $0x0,0x1a(%rax)
 154:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 158:	0f b6 55 d3          	movzbl -0x2d(%rbp),%edx
 15c:	88 50 1b             	mov    %dl,0x1b(%rax)
 15f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 163:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 16a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 16e:	48 8b 92 60 02 00 00 	mov    0x260(%rdx),%rdx
 175:	48 8b 12             	mov    (%rdx),%rdx
 178:	48 83 c2 20          	add    $0x20,%rdx
 17c:	4c 8b 02             	mov    (%rdx),%r8
 17f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 183:	48 83 c2 1c          	add    $0x1c,%rdx
 187:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
 18a:	89 ce                	mov    %ecx,%esi
 18c:	48 89 c7             	mov    %rax,%rdi
 18f:	41 ff d0             	call   *%r8
 192:	0f b6 55 d3          	movzbl -0x2d(%rbp),%edx
 196:	89 d0                	mov    %edx,%eax
 198:	01 c0                	add    %eax,%eax
 19a:	01 d0                	add    %edx,%eax
 19c:	01 c0                	add    %eax,%eax
 19e:	89 c0                	mov    %eax,%eax
 1a0:	48 83 c0 1c          	add    $0x1c,%rax
 1a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 1a8:	e8 00 00 00 00       	call   1ad <ArtNetNode::SendTod(unsigned int)+0x1ad>
 1ad:	48 89 c3             	mov    %rax,%rbx
 1b0:	e8 00 00 00 00       	call   1b5 <ArtNetNode::SendTod(unsigned int)+0x1b5>
 1b5:	48 89 c7             	mov    %rax,%rdi
 1b8:	e8 00 00 00 00       	call   1bd <ArtNetNode::SendTod(unsigned int)+0x1bd>
 1bd:	89 c6                	mov    %eax,%esi
 1bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1c3:	0f b7 c8             	movzwl %ax,%ecx
 1c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1ca:	8b 80 30 02 00 00    	mov    0x230(%rax),%eax
 1d0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 1d4:	41 b9 36 19 00 00    	mov    $0x1936,%r9d
 1da:	41 89 f0             	mov    %esi,%r8d
 1dd:	89 c6                	mov    %eax,%esi
 1df:	48 89 df             	mov    %rbx,%rdi
 1e2:	e8 00 00 00 00       	call   1e7 <ArtNetNode::SendTod(unsigned int)+0x1e7>
 1e7:	90                   	nop
 1e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1ec:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1f3:	00 00 
 1f5:	74 05                	je     1fc <ArtNetNode::SendTod(unsigned int)+0x1fc>
 1f7:	e8 00 00 00 00       	call   1fc <ArtNetNode::SendTod(unsigned int)+0x1fc>
 1fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 200:	c9                   	leave  
 201:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode14SendTodRequestEj:

0000000000000000 <ArtNetNode::SendTodRequest(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  11:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  27:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
  2e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  32:	48 8b 92 60 02 00 00 	mov    0x260(%rdx),%rdx
  39:	48 8b 12             	mov    (%rdx),%rdx
  3c:	48 83 c2 28          	add    $0x28,%rdx
  40:	48 8b 0a             	mov    (%rdx),%rcx
  43:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  46:	89 d6                	mov    %edx,%esi
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	ff d1                	call   *%rcx
  4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  51:	48 05 07 05 00 00    	add    $0x507,%rax
  57:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  5b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  5e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  65:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 6c <ArtNetNode::SendTodRequest(unsigned int)+0x6c>
  6c:	48 89 10             	mov    %rdx,(%rax)
  6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  73:	66 c7 40 08 00 80    	movw   $0x8000,0x8(%rax)
  79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7d:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  85:	c6 40 0b 0e          	movb   $0xe,0xb(%rax)
  89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8d:	c6 40 0e 00          	movb   $0x0,0xe(%rax)
  91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  95:	c6 40 0f 00          	movb   $0x0,0xf(%rax)
  99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9d:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a5:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ad:	c6 40 12 00          	movb   $0x0,0x12(%rax)
  b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b5:	c6 40 13 00          	movb   $0x0,0x13(%rax)
  b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  bd:	c6 40 14 00          	movb   $0x0,0x14(%rax)
  c1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  c5:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  c8:	48 89 d0             	mov    %rdx,%rax
  cb:	48 c1 e0 03          	shl    $0x3,%rax
  cf:	48 01 d0             	add    %rdx,%rax
  d2:	48 c1 e0 02          	shl    $0x2,%rax
  d6:	48 01 c8             	add    %rcx,%rax
  d9:	48 05 95 02 00 00    	add    $0x295,%rax
  df:	0f b6 10             	movzbl (%rax),%edx
  e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  e6:	88 50 15             	mov    %dl,0x15(%rax)
  e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ed:	c6 40 16 00          	movb   $0x0,0x16(%rax)
  f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  f5:	c6 40 17 01          	movb   $0x1,0x17(%rax)
  f9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  fd:	8b 55 c4             	mov    -0x3c(%rbp),%edx
 100:	48 89 d0             	mov    %rdx,%rax
 103:	48 c1 e0 03          	shl    $0x3,%rax
 107:	48 01 d0             	add    %rdx,%rax
 10a:	48 c1 e0 02          	shl    $0x2,%rax
 10e:	48 01 c8             	add    %rcx,%rax
 111:	48 05 94 02 00 00    	add    $0x294,%rax
 117:	0f b6 10             	movzbl (%rax),%edx
 11a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 11e:	88 50 18             	mov    %dl,0x18(%rax)
 121:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 125:	0f b6 40 17          	movzbl 0x17(%rax),%eax
 129:	0f b6 c0             	movzbl %al,%eax
 12c:	48 83 c0 18          	add    $0x18,%rax
 130:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 134:	e8 00 00 00 00       	call   139 <ArtNetNode::SendTodRequest(unsigned int)+0x139>
 139:	48 89 c3             	mov    %rax,%rbx
 13c:	e8 00 00 00 00       	call   141 <ArtNetNode::SendTodRequest(unsigned int)+0x141>
 141:	48 89 c7             	mov    %rax,%rdi
 144:	e8 00 00 00 00       	call   149 <ArtNetNode::SendTodRequest(unsigned int)+0x149>
 149:	89 c6                	mov    %eax,%esi
 14b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 14f:	0f b7 c8             	movzwl %ax,%ecx
 152:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 156:	8b 80 30 02 00 00    	mov    0x230(%rax),%eax
 15c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 160:	41 b9 36 19 00 00    	mov    $0x1936,%r9d
 166:	41 89 f0             	mov    %esi,%r8d
 169:	89 c6                	mov    %eax,%esi
 16b:	48 89 df             	mov    %rbx,%rdi
 16e:	e8 00 00 00 00       	call   173 <ArtNetNode::SendTodRequest(unsigned int)+0x173>
 173:	90                   	nop
 174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 178:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 17f:	00 00 
 181:	74 05                	je     188 <ArtNetNode::SendTodRequest(unsigned int)+0x188>
 183:	e8 00 00 00 00       	call   188 <ArtNetNode::SendTodRequest(unsigned int)+0x188>
 188:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 18c:	c9                   	leave  
 18d:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode13SetRdmHandlerEP9ArtNetRdmb:

0000000000000000 <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 d0                	mov    %edx,%eax
  16:	88 45 dc             	mov    %al,-0x24(%rbp)
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  26:	31 c0                	xor    %eax,%eax
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  30:	48 89 90 60 02 00 00 	mov    %rdx,0x260(%rax)
  37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3b:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
  42:	48 85 c0             	test   %rax,%rax
  45:	74 2a                	je     71 <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)+0x71>
  47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4b:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
  4f:	88 90 7c 02 00 00    	mov    %dl,0x27c(%rax)
  55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  59:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
  60:	83 c8 02             	or     $0x2,%eax
  63:	89 c2                	mov    %eax,%edx
  65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  69:	88 90 2f 04 00 00    	mov    %dl,0x42f(%rax)
  6f:	eb 1a                	jmp    8b <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)+0x8b>
  71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  75:	0f b6 80 2f 04 00 00 	movzbl 0x42f(%rax),%eax
  7c:	83 e0 fd             	and    $0xfffffffd,%eax
  7f:	89 c2                	mov    %eax,%edx
  81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  85:	88 90 2f 04 00 00    	mov    %dl,0x42f(%rax)
  8b:	90                   	nop
  8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  90:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  97:	00 00 
  99:	74 05                	je     a0 <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)+0xa0>
  9b:	e8 00 00 00 00       	call   a0 <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)+0xa0>
  a0:	c9                   	leave  
  a1:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode9HandleRdmEv:

0000000000000000 <ArtNetNode::HandleRdm()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 50          	sub    $0x50,%rsp
   c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  23:	48 8b 80 38 02 00 00 	mov    0x238(%rax),%rax
  2a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  32:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  36:	3c 01                	cmp    $0x1,%al
  38:	0f 85 df 02 00 00    	jne    31d <ArtNetNode::HandleRdm()+0x31d>
  3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42:	0f b6 40 15          	movzbl 0x15(%rax),%eax
  46:	0f b6 c0             	movzbl %al,%eax
  49:	c1 e0 08             	shl    $0x8,%eax
  4c:	0f b7 d0             	movzwl %ax,%edx
  4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  53:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  57:	0f b6 c0             	movzbl %al,%eax
  5a:	09 d0                	or     %edx,%eax
  5c:	89 45 d8             	mov    %eax,-0x28(%rbp)
  5f:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  66:	e9 2e 02 00 00       	jmp    299 <ArtNetNode::HandleRdm()+0x299>
  6b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  6f:	8b 45 d0             	mov    -0x30(%rbp),%eax
  72:	48 c1 e0 05          	shl    $0x5,%rax
  76:	48 01 d0             	add    %rdx,%rax
  79:	48 05 81 03 00 00    	add    $0x381,%rax
  7f:	0f b6 00             	movzbl (%rax),%eax
  82:	84 c0                	test   %al,%al
  84:	0f 88 0a 02 00 00    	js     294 <ArtNetNode::HandleRdm()+0x294>
  8a:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  8e:	8b 55 d0             	mov    -0x30(%rbp),%edx
  91:	48 89 d0             	mov    %rdx,%rax
  94:	48 c1 e0 03          	shl    $0x3,%rax
  98:	48 01 d0             	add    %rdx,%rax
  9b:	48 c1 e0 02          	shl    $0x2,%rax
  9f:	48 01 c8             	add    %rcx,%rax
  a2:	48 05 92 02 00 00    	add    $0x292,%rax
  a8:	0f b7 00             	movzwl (%rax),%eax
  ab:	0f b7 c0             	movzwl %ax,%eax
  ae:	39 45 d8             	cmp    %eax,-0x28(%rbp)
  b1:	0f 85 de 01 00 00    	jne    295 <ArtNetNode::HandleRdm()+0x295>
  b7:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  bb:	8b 55 d0             	mov    -0x30(%rbp),%edx
  be:	48 89 d0             	mov    %rdx,%rax
  c1:	48 c1 e0 03          	shl    $0x3,%rax
  c5:	48 01 d0             	add    %rdx,%rax
  c8:	48 c1 e0 02          	shl    $0x2,%rax
  cc:	48 01 c8             	add    %rcx,%rax
  cf:	48 05 98 02 00 00    	add    $0x298,%rax
  d5:	8b 00                	mov    (%rax),%eax
  d7:	83 f8 01             	cmp    $0x1,%eax
  da:	0f 85 b5 01 00 00    	jne    295 <ArtNetNode::HandleRdm()+0x295>
  e0:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  e4:	8b 55 d0             	mov    -0x30(%rbp),%edx
  e7:	48 89 d0             	mov    %rdx,%rax
  ea:	48 c1 e0 03          	shl    $0x3,%rax
  ee:	48 01 d0             	add    %rdx,%rax
  f1:	48 c1 e0 02          	shl    $0x2,%rax
  f5:	48 01 c8             	add    %rcx,%rax
  f8:	48 05 9c 02 00 00    	add    $0x29c,%rax
  fe:	8b 00                	mov    (%rax),%eax
 100:	83 f8 01             	cmp    $0x1,%eax
 103:	75 3b                	jne    140 <ArtNetNode::HandleRdm()+0x140>
 105:	c7 45 dc 89 00 00 00 	movl   $0x89,-0x24(%rbp)
 10c:	8b 55 d0             	mov    -0x30(%rbp),%edx
 10f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 113:	89 d6                	mov    %edx,%esi
 115:	48 89 c7             	mov    %rax,%rdi
 118:	e8 00 00 00 00       	call   11d <ArtNetNode::HandleRdm()+0x11d>
 11d:	0f b6 c0             	movzbl %al,%eax
 120:	25 89 00 00 00       	and    $0x89,%eax
 125:	85 c0                	test   %eax,%eax
 127:	0f 95 c2             	setne  %dl
 12a:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 12e:	8b 45 d0             	mov    -0x30(%rbp),%eax
 131:	48 c1 e0 05          	shl    $0x5,%rax
 135:	48 01 c8             	add    %rcx,%rax
 138:	48 05 83 03 00 00    	add    $0x383,%rax
 13e:	88 10                	mov    %dl,(%rax)
 140:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 144:	8b 45 d0             	mov    -0x30(%rbp),%eax
 147:	48 c1 e0 05          	shl    $0x5,%rax
 14b:	48 01 d0             	add    %rdx,%rax
 14e:	48 05 83 03 00 00    	add    $0x383,%rax
 154:	0f b6 00             	movzbl (%rax),%eax
 157:	84 c0                	test   %al,%al
 159:	74 2a                	je     185 <ArtNetNode::HandleRdm()+0x185>
 15b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 15f:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 166:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 16a:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
 171:	48 8b 12             	mov    (%rdx),%rdx
 174:	48 83 c2 18          	add    $0x18,%rdx
 178:	48 8b 0a             	mov    (%rdx),%rcx
 17b:	8b 55 d0             	mov    -0x30(%rbp),%edx
 17e:	89 d6                	mov    %edx,%esi
 180:	48 89 c7             	mov    %rax,%rdi
 183:	ff d1                	call   *%rcx
 185:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 189:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
 190:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 194:	48 8b 92 60 02 00 00 	mov    0x260(%rdx),%rdx
 19b:	48 8b 12             	mov    (%rdx),%rdx
 19e:	48 83 c2 38          	add    $0x38,%rdx
 1a2:	4c 8b 02             	mov    (%rdx),%r8
 1a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 1a9:	48 83 c2 18          	add    $0x18,%rdx
 1ad:	8b 4d d0             	mov    -0x30(%rbp),%ecx
 1b0:	89 ce                	mov    %ecx,%esi
 1b2:	48 89 c7             	mov    %rax,%rdi
 1b5:	41 ff d0             	call   *%r8
 1b8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 1bc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 1c1:	0f 84 86 00 00 00    	je     24d <ArtNetNode::HandleRdm()+0x24d>
 1c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1cb:	c6 40 0c 01          	movb   $0x1,0xc(%rax)
 1cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1d3:	48 83 c0 02          	add    $0x2,%rax
 1d7:	0f b6 00             	movzbl (%rax),%eax
 1da:	0f b6 c0             	movzbl %al,%eax
 1dd:	83 c0 01             	add    $0x1,%eax
 1e0:	66 89 45 ce          	mov    %ax,-0x32(%rbp)
 1e4:	0f b7 45 ce          	movzwl -0x32(%rbp),%eax
 1e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 1ec:	48 8d 72 01          	lea    0x1(%rdx),%rsi
 1f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 1f4:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
 1f8:	48 89 c2             	mov    %rax,%rdx
 1fb:	48 89 cf             	mov    %rcx,%rdi
 1fe:	e8 00 00 00 00       	call   203 <ArtNetNode::HandleRdm()+0x203>
 203:	0f b7 45 ce          	movzwl -0x32(%rbp),%eax
 207:	48 83 c0 18          	add    $0x18,%rax
 20b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 20f:	e8 00 00 00 00       	call   214 <ArtNetNode::HandleRdm()+0x214>
 214:	48 89 c7             	mov    %rax,%rdi
 217:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 21b:	8b b0 40 02 00 00    	mov    0x240(%rax),%esi
 221:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 225:	0f b7 c8             	movzwl %ax,%ecx
 228:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 22c:	48 8b 90 38 02 00 00 	mov    0x238(%rax),%rdx
 233:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 237:	8b 80 30 02 00 00    	mov    0x230(%rax),%eax
 23d:	41 b9 36 19 00 00    	mov    $0x1936,%r9d
 243:	41 89 f0             	mov    %esi,%r8d
 246:	89 c6                	mov    %eax,%esi
 248:	e8 00 00 00 00       	call   24d <ArtNetNode::HandleRdm()+0x24d>
 24d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 251:	8b 45 d0             	mov    -0x30(%rbp),%eax
 254:	48 c1 e0 05          	shl    $0x5,%rax
 258:	48 01 d0             	add    %rdx,%rax
 25b:	48 05 83 03 00 00    	add    $0x383,%rax
 261:	0f b6 00             	movzbl (%rax),%eax
 264:	84 c0                	test   %al,%al
 266:	74 2d                	je     295 <ArtNetNode::HandleRdm()+0x295>
 268:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 26c:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
 273:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 277:	48 8b 92 50 02 00 00 	mov    0x250(%rdx),%rdx
 27e:	48 8b 12             	mov    (%rdx),%rdx
 281:	48 83 c2 10          	add    $0x10,%rdx
 285:	48 8b 0a             	mov    (%rdx),%rcx
 288:	8b 55 d0             	mov    -0x30(%rbp),%edx
 28b:	89 d6                	mov    %edx,%esi
 28d:	48 89 c7             	mov    %rax,%rdi
 290:	ff d1                	call   *%rcx
 292:	eb 01                	jmp    295 <ArtNetNode::HandleRdm()+0x295>
 294:	90                   	nop
 295:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
 299:	83 7d d0 03          	cmpl   $0x3,-0x30(%rbp)
 29d:	0f 86 c8 fd ff ff    	jbe    6b <ArtNetNode::HandleRdm()+0x6b>
 2a3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
 2aa:	eb 69                	jmp    315 <ArtNetNode::HandleRdm()+0x315>
 2ac:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 2b0:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 2b3:	48 89 d0             	mov    %rdx,%rax
 2b6:	48 c1 e0 03          	shl    $0x3,%rax
 2ba:	48 01 d0             	add    %rdx,%rax
 2bd:	48 c1 e0 02          	shl    $0x2,%rax
 2c1:	48 01 c8             	add    %rcx,%rax
 2c4:	48 05 98 02 00 00    	add    $0x298,%rax
 2ca:	8b 00                	mov    (%rax),%eax
 2cc:	85 c0                	test   %eax,%eax
 2ce:	75 40                	jne    310 <ArtNetNode::HandleRdm()+0x310>
 2d0:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 2d4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 2d7:	48 89 d0             	mov    %rdx,%rax
 2da:	48 c1 e0 03          	shl    $0x3,%rax
 2de:	48 01 d0             	add    %rdx,%rax
 2e1:	48 c1 e0 02          	shl    $0x2,%rax
 2e5:	48 01 c8             	add    %rcx,%rax
 2e8:	48 05 92 02 00 00    	add    $0x292,%rax
 2ee:	0f b7 00             	movzwl (%rax),%eax
 2f1:	0f b7 c0             	movzwl %ax,%eax
 2f4:	39 45 d8             	cmp    %eax,-0x28(%rbp)
 2f7:	75 18                	jne    311 <ArtNetNode::HandleRdm()+0x311>
 2f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 2fd:	48 8d 50 18          	lea    0x18(%rax),%rdx
 301:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 304:	48 89 d6             	mov    %rdx,%rsi
 307:	89 c7                	mov    %eax,%edi
 309:	e8 00 00 00 00       	call   30e <ArtNetNode::HandleRdm()+0x30e>
 30e:	eb 01                	jmp    311 <ArtNetNode::HandleRdm()+0x311>
 310:	90                   	nop
 311:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
 315:	83 7d d4 03          	cmpl   $0x3,-0x2c(%rbp)
 319:	76 91                	jbe    2ac <ArtNetNode::HandleRdm()+0x2ac>
 31b:	eb 01                	jmp    31e <ArtNetNode::HandleRdm()+0x31e>
 31d:	90                   	nop
 31e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 322:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 329:	00 00 
 32b:	74 05                	je     332 <ArtNetNode::HandleRdm()+0x332>
 32d:	e8 00 00 00 00       	call   332 <ArtNetNode::HandleRdm()+0x332>
 332:	c9                   	leave  
 333:	c3                   	ret    

handlerdmin.o:     file format elf64-x86-64


Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Network::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Network::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Network::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode11HandleRdmInEv:

0000000000000000 <ArtNetNode::HandleRdmIn()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 05 07 05 00 00    	add    $0x507,%rax
  29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  2d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  34:	e9 42 01 00 00       	jmp    17b <ArtNetNode::HandleRdmIn()+0x17b>
  39:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  3d:	8b 55 e8             	mov    -0x18(%rbp),%edx
  40:	48 89 d0             	mov    %rdx,%rax
  43:	48 c1 e0 03          	shl    $0x3,%rax
  47:	48 01 d0             	add    %rdx,%rax
  4a:	48 c1 e0 02          	shl    $0x2,%rax
  4e:	48 01 c8             	add    %rcx,%rax
  51:	48 05 98 02 00 00    	add    $0x298,%rax
  57:	8b 00                	mov    (%rax),%eax
  59:	85 c0                	test   %eax,%eax
  5b:	0f 85 15 01 00 00    	jne    176 <ArtNetNode::HandleRdmIn()+0x176>
  61:	8b 45 e8             	mov    -0x18(%rbp),%eax
  64:	89 45 ec             	mov    %eax,-0x14(%rbp)
  67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6b:	48 8b 80 60 02 00 00 	mov    0x260(%rax),%rax
  72:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  76:	48 8b 92 60 02 00 00 	mov    0x260(%rdx),%rdx
  7d:	48 8b 12             	mov    (%rdx),%rdx
  80:	48 83 c2 40          	add    $0x40,%rdx
  84:	4c 8b 02             	mov    (%rdx),%r8
  87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  8b:	48 83 c2 18          	add    $0x18,%rdx
  8f:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  92:	89 ce                	mov    %ecx,%esi
  94:	48 89 c7             	mov    %rax,%rdi
  97:	41 ff d0             	call   *%r8
  9a:	84 c0                	test   %al,%al
  9c:	0f 84 d5 00 00 00    	je     177 <ArtNetNode::HandleRdmIn()+0x177>
  a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  a6:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # ad <ArtNetNode::HandleRdmIn()+0xad>
  ad:	48 89 10             	mov    %rdx,(%rax)
  b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  b4:	66 c7 40 08 00 83    	movw   $0x8300,0x8(%rax)
  ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  be:	c6 40 0a 00          	movb   $0x0,0xa(%rax)
  c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  c6:	c6 40 0b 0e          	movb   $0xe,0xb(%rax)
  ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ce:	c6 40 0c 01          	movb   $0x1,0xc(%rax)
  d2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  d6:	8b 55 ec             	mov    -0x14(%rbp),%edx
  d9:	48 89 d0             	mov    %rdx,%rax
  dc:	48 c1 e0 03          	shl    $0x3,%rax
  e0:	48 01 d0             	add    %rdx,%rax
  e3:	48 c1 e0 02          	shl    $0x2,%rax
  e7:	48 01 c8             	add    %rcx,%rax
  ea:	48 05 95 02 00 00    	add    $0x295,%rax
  f0:	0f b6 10             	movzbl (%rax),%edx
  f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f7:	88 50 15             	mov    %dl,0x15(%rax)
  fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  fe:	c6 40 16 00          	movb   $0x0,0x16(%rax)
 102:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 106:	8b 55 e8             	mov    -0x18(%rbp),%edx
 109:	48 89 d0             	mov    %rdx,%rax
 10c:	48 c1 e0 03          	shl    $0x3,%rax
 110:	48 01 d0             	add    %rdx,%rax
 113:	48 c1 e0 02          	shl    $0x2,%rax
 117:	48 01 c8             	add    %rcx,%rax
 11a:	48 05 94 02 00 00    	add    $0x294,%rax
 120:	0f b6 10             	movzbl (%rax),%edx
 123:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 127:	88 50 17             	mov    %dl,0x17(%rax)
 12a:	e8 00 00 00 00       	call   12f <ArtNetNode::HandleRdmIn()+0x12f>
 12f:	48 89 c7             	mov    %rax,%rdi
 132:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 136:	8b 55 e8             	mov    -0x18(%rbp),%edx
 139:	48 89 d0             	mov    %rdx,%rax
 13c:	48 01 c0             	add    %rax,%rax
 13f:	48 01 d0             	add    %rdx,%rax
 142:	48 c1 e0 02          	shl    $0x2,%rax
 146:	48 01 c8             	add    %rcx,%rax
 149:	48 05 e8 03 00 00    	add    $0x3e8,%rax
 14f:	8b 08                	mov    (%rax),%ecx
 151:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 155:	8b 80 30 02 00 00    	mov    0x230(%rax),%eax
 15b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 15f:	41 b9 36 19 00 00    	mov    $0x1936,%r9d
 165:	41 89 c8             	mov    %ecx,%r8d
 168:	b9 17 01 00 00       	mov    $0x117,%ecx
 16d:	89 c6                	mov    %eax,%esi
 16f:	e8 00 00 00 00       	call   174 <ArtNetNode::HandleRdmIn()+0x174>
 174:	eb 01                	jmp    177 <ArtNetNode::HandleRdmIn()+0x177>
 176:	90                   	nop
 177:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 17b:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
 17f:	0f 86 b4 fe ff ff    	jbe    39 <ArtNetNode::HandleRdmIn()+0x39>
 185:	90                   	nop
 186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 18a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 191:	00 00 
 193:	74 05                	je     19a <ArtNetNode::HandleRdmIn()+0x19a>
 195:	e8 00 00 00 00       	call   19a <ArtNetNode::HandleRdmIn()+0x19a>
 19a:	c9                   	leave  
 19b:	c3                   	ret    

artnetnode.o:     file format elf64-x86-64


Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 22 <Hardware::Get()+0x22>
  22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  26:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  2d:	00 00 
  2f:	74 05                	je     36 <Hardware::Get()+0x36>
  31:	e8 00 00 00 00       	call   36 <Hardware::Get()+0x36>
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZNK10E131Bridge11GetUniverseEjRtN8lightset7PortDirE:

0000000000000000 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  1a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  21:	00 00 
  23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  27:	31 c0                	xor    %eax,%eax
  29:	83 7d e0 02          	cmpl   $0x2,-0x20(%rbp)
  2d:	75 07                	jne    36 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x36>
  2f:	b8 00 00 00 00       	mov    $0x0,%eax
  34:	eb 4c                	jmp    82 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x82>
  36:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  3a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  3d:	48 89 d0             	mov    %rdx,%rax
  40:	48 01 c0             	add    %rax,%rax
  43:	48 01 d0             	add    %rdx,%rax
  46:	48 c1 e0 02          	shl    $0x2,%rax
  4a:	48 01 c8             	add    %rcx,%rax
  4d:	48 05 98 00 00 00    	add    $0x98,%rax
  53:	0f b7 10             	movzwl (%rax),%edx
  56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5a:	66 89 10             	mov    %dx,(%rax)
  5d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  61:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  64:	48 89 d0             	mov    %rdx,%rax
  67:	48 01 c0             	add    %rax,%rax
  6a:	48 01 d0             	add    %rdx,%rax
  6d:	48 c1 e0 02          	shl    $0x2,%rax
  71:	48 01 c8             	add    %rcx,%rax
  74:	48 05 9c 00 00 00    	add    $0x9c,%rax
  7a:	8b 00                	mov    (%rax),%eax
  7c:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  7f:	0f 94 c0             	sete   %al
  82:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  86:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  8d:	00 00 
  8f:	74 05                	je     96 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x96>
  91:	e8 00 00 00 00       	call   96 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x96>
  96:	c9                   	leave  
  97:	c3                   	ret    

Disassembly of section .text._ZNK10E131Bridge14IsTransmittingEj:

0000000000000000 <E131Bridge::IsTransmitting(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  26:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  29:	48 89 d0             	mov    %rdx,%rax
  2c:	48 c1 e0 04          	shl    $0x4,%rax
  30:	48 01 d0             	add    %rdx,%rax
  33:	48 c1 e0 02          	shl    $0x2,%rax
  37:	48 01 c8             	add    %rcx,%rax
  3a:	48 05 09 01 00 00    	add    $0x109,%rax
  40:	0f b6 00             	movzbl (%rax),%eax
  43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  47:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4e:	00 00 
  50:	74 05                	je     57 <E131Bridge::IsTransmitting(unsigned int) const+0x57>
  52:	e8 00 00 00 00       	call   57 <E131Bridge::IsTransmitting(unsigned int) const+0x57>
  57:	c9                   	leave  
  58:	c3                   	ret    

Disassembly of section .text._ZNK10E131Bridge9IsMergingEj:

0000000000000000 <E131Bridge::IsMerging(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  26:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  29:	48 89 d0             	mov    %rdx,%rax
  2c:	48 c1 e0 04          	shl    $0x4,%rax
  30:	48 01 d0             	add    %rdx,%rax
  33:	48 c1 e0 02          	shl    $0x2,%rax
  37:	48 01 c8             	add    %rcx,%rax
  3a:	48 05 08 01 00 00    	add    $0x108,%rax
  40:	0f b6 00             	movzbl (%rax),%eax
  43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  47:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  4e:	00 00 
  50:	74 05                	je     57 <E131Bridge::IsMerging(unsigned int) const+0x57>
  52:	e8 00 00 00 00       	call   57 <E131Bridge::IsMerging(unsigned int) const+0x57>
  57:	c9                   	leave  
  58:	c3                   	ret    

Disassembly of section .text._ZN10E131Bridge22SetEnableDataIndicatorEb:

0000000000000000 <E131Bridge::SetEnableDataIndicator(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e4             	mov    %al,-0x1c(%rbp)
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	31 c0                	xor    %eax,%eax
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
  2c:	88 90 08 02 00 00    	mov    %dl,0x208(%rax)
  32:	90                   	nop
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  3e:	00 00 
  40:	74 05                	je     47 <E131Bridge::SetEnableDataIndicator(bool)+0x47>
  42:	e8 00 00 00 00       	call   47 <E131Bridge::SetEnableDataIndicator(bool)+0x47>
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode14GetPortAddressEjRtN8lightset7PortDirE:

0000000000000000 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  1a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  21:	00 00 
  23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  27:	31 c0                	xor    %eax,%eax
  29:	83 7d e0 02          	cmpl   $0x2,-0x20(%rbp)
  2d:	75 07                	jne    36 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x36>
  2f:	b8 00 00 00 00       	mov    $0x0,%eax
  34:	eb 4e                	jmp    84 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x84>
  36:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  3a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  3d:	48 89 d0             	mov    %rdx,%rax
  40:	48 c1 e0 03          	shl    $0x3,%rax
  44:	48 01 d0             	add    %rdx,%rax
  47:	48 c1 e0 02          	shl    $0x2,%rax
  4b:	48 01 c8             	add    %rcx,%rax
  4e:	48 05 92 02 00 00    	add    $0x292,%rax
  54:	0f b7 10             	movzwl (%rax),%edx
  57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5b:	66 89 10             	mov    %dx,(%rax)
  5e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  62:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  65:	48 89 d0             	mov    %rdx,%rax
  68:	48 c1 e0 03          	shl    $0x3,%rax
  6c:	48 01 d0             	add    %rdx,%rax
  6f:	48 c1 e0 02          	shl    $0x2,%rax
  73:	48 01 c8             	add    %rcx,%rax
  76:	48 05 98 02 00 00    	add    $0x298,%rax
  7c:	8b 00                	mov    (%rax),%eax
  7e:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  81:	0f 94 c0             	sete   %al
  84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  88:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  8f:	00 00 
  91:	74 05                	je     98 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x98>
  93:	e8 00 00 00 00       	call   98 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x98>
  98:	c9                   	leave  
  99:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode14IsMapUniverse0Ev:

0000000000000000 <ArtNetNode::IsMapUniverse0() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	0f b6 80 7d 02 00 00 	movzbl 0x27d(%rax),%eax
  2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  35:	00 00 
  37:	74 05                	je     3e <ArtNetNode::IsMapUniverse0() const+0x3e>
  39:	e8 00 00 00 00       	call   3e <ArtNetNode::IsMapUniverse0() const+0x3e>
  3e:	c9                   	leave  
  3f:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode16SetPortProtocol4EjN6artnet12PortProtocolE:

0000000000000000 <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
  29:	0f 87 ee 00 00 00    	ja     11d <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x11d>
  2f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  33:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  36:	48 89 d0             	mov    %rdx,%rax
  39:	48 c1 e0 03          	shl    $0x3,%rax
  3d:	48 01 d0             	add    %rdx,%rax
  40:	48 c1 e0 02          	shl    $0x2,%rax
  44:	48 01 c8             	add    %rcx,%rax
  47:	48 8d 90 9c 02 00 00 	lea    0x29c(%rax),%rdx
  4e:	8b 45 e0             	mov    -0x20(%rbp),%eax
  51:	89 02                	mov    %eax,(%rdx)
  53:	83 7d e0 01          	cmpl   $0x1,-0x20(%rbp)
  57:	75 34                	jne    8d <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x8d>
  59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  5d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  60:	48 c1 e0 05          	shl    $0x5,%rax
  64:	48 01 d0             	add    %rdx,%rax
  67:	48 05 80 03 00 00    	add    $0x380,%rax
  6d:	0f b6 00             	movzbl (%rax),%eax
  70:	83 c8 01             	or     $0x1,%eax
  73:	89 c2                	mov    %eax,%edx
  75:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  79:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  7c:	48 c1 e0 05          	shl    $0x5,%rax
  80:	48 01 c8             	add    %rcx,%rax
  83:	48 05 80 03 00 00    	add    $0x380,%rax
  89:	88 10                	mov    %dl,(%rax)
  8b:	eb 32                	jmp    bf <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0xbf>
  8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  91:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  94:	48 c1 e0 05          	shl    $0x5,%rax
  98:	48 01 d0             	add    %rdx,%rax
  9b:	48 05 80 03 00 00    	add    $0x380,%rax
  a1:	0f b6 00             	movzbl (%rax),%eax
  a4:	83 e0 fe             	and    $0xfffffffe,%eax
  a7:	89 c2                	mov    %eax,%edx
  a9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  ad:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  b0:	48 c1 e0 05          	shl    $0x5,%rax
  b4:	48 01 c8             	add    %rcx,%rax
  b7:	48 05 80 03 00 00    	add    $0x380,%rax
  bd:	88 10                	mov    %dl,(%rax)
  bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c3:	0f b6 80 59 03 00 00 	movzbl 0x359(%rax),%eax
  ca:	3c 02                	cmp    $0x2,%al
  cc:	75 50                	jne    11e <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x11e>
  ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d2:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  d9:	48 85 c0             	test   %rax,%rax
  dc:	74 2e                	je     10c <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x10c>
  de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e2:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
  e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  ed:	48 8b 92 70 02 00 00 	mov    0x270(%rdx),%rdx
  f4:	48 8b 12             	mov    (%rdx),%rdx
  f7:	48 83 c2 40          	add    $0x40,%rdx
  fb:	4c 8b 02             	mov    (%rdx),%r8
  fe:	8b 55 e0             	mov    -0x20(%rbp),%edx
 101:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
 104:	89 ce                	mov    %ecx,%esi
 106:	48 89 c7             	mov    %rax,%rdi
 109:	41 ff d0             	call   *%r8
 10c:	8b 55 e0             	mov    -0x20(%rbp),%edx
 10f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 112:	89 d6                	mov    %edx,%esi
 114:	89 c7                	mov    %eax,%edi
 116:	e8 00 00 00 00       	call   11b <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x11b>
 11b:	eb 01                	jmp    11e <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x11e>
 11d:	90                   	nop
 11e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 122:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 129:	00 00 
 12b:	74 05                	je     132 <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x132>
 12d:	e8 00 00 00 00       	call   132 <ArtNetNode::SetPortProtocol4(unsigned int, artnet::PortProtocol)+0x132>
 132:	c9                   	leave  
 133:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode12SetUniverse4EjN8lightset7PortDirE:

0000000000000000 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%rbp)
  2b:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  2e:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
  32:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	call   41 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x41>
  41:	88 45 f1             	mov    %al,-0xf(%rbp)
  44:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  48:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4b:	48 89 d0             	mov    %rdx,%rax
  4e:	48 c1 e0 03          	shl    $0x3,%rax
  52:	48 01 d0             	add    %rdx,%rax
  55:	48 c1 e0 02          	shl    $0x2,%rax
  59:	48 01 c8             	add    %rcx,%rax
  5c:	48 05 9c 02 00 00    	add    $0x29c,%rax
  62:	8b 00                	mov    (%rax),%eax
  64:	89 45 f4             	mov    %eax,-0xc(%rbp)
  67:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
  6b:	0f 85 b5 00 00 00    	jne    126 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x126>
  71:	0f b6 45 f1          	movzbl -0xf(%rbp),%eax
  75:	83 f0 01             	xor    $0x1,%eax
  78:	84 c0                	test   %al,%al
  7a:	74 67                	je     e3 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xe3>
  7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  80:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
  84:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  87:	b9 00 00 00 00       	mov    $0x0,%ecx
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x94>
  94:	84 c0                	test   %al,%al
  96:	75 1c                	jne    b4 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xb4>
  98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9c:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
  a0:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  a3:	b9 01 00 00 00       	mov    $0x1,%ecx
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xb0>
  b0:	84 c0                	test   %al,%al
  b2:	74 07                	je     bb <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xbb>
  b4:	b8 01 00 00 00       	mov    $0x1,%eax
  b9:	eb 05                	jmp    c0 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xc0>
  bb:	b8 00 00 00 00       	mov    $0x0,%eax
  c0:	84 c0                	test   %al,%al
  c2:	74 5e                	je     122 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x122>
  c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c8:	0f b7 55 f2          	movzwl -0xe(%rbp),%edx
  cc:	0f b7 d2             	movzwl %dx,%edx
  cf:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  d2:	89 d1                	mov    %edx,%ecx
  d4:	ba 02 00 00 00       	mov    $0x2,%edx
  d9:	48 89 c7             	mov    %rax,%rdi
  dc:	e8 00 00 00 00       	call   e1 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xe1>
  e1:	eb 43                	jmp    126 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x126>
  e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e7:	48 89 c7             	mov    %rax,%rdi
  ea:	e8 00 00 00 00       	call   ef <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xef>
  ef:	84 c0                	test   %al,%al
  f1:	74 0b                	je     fe <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0xfe>
  f3:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
  f7:	83 c0 01             	add    $0x1,%eax
  fa:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
  fe:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
 102:	66 85 c0             	test   %ax,%ax
 105:	74 1e                	je     125 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x125>
 107:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10b:	0f b7 55 f2          	movzwl -0xe(%rbp),%edx
 10f:	0f b7 ca             	movzwl %dx,%ecx
 112:	8b 55 e0             	mov    -0x20(%rbp),%edx
 115:	8b 75 e4             	mov    -0x1c(%rbp),%esi
 118:	48 89 c7             	mov    %rax,%rdi
 11b:	e8 00 00 00 00       	call   120 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x120>
 120:	eb 04                	jmp    126 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x126>
 122:	90                   	nop
 123:	eb 01                	jmp    126 <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x126>
 125:	90                   	nop
 126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 12a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 131:	00 00 
 133:	74 05                	je     13a <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x13a>
 135:	e8 00 00 00 00       	call   13a <ArtNetNode::SetUniverse4(unsigned int, lightset::PortDir)+0x13a>
 13a:	c9                   	leave  
 13b:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode16SetLedBlinkMode4EN8hardware8ledblink4ModeE:

0000000000000000 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 28 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x28>
  28:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  2b:	74 09                	je     36 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x36>
  2d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  30:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 36 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x36>
  36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3a:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
  3e:	0f 94 c2             	sete   %dl
  41:	0f b6 d2             	movzbl %dl,%edx
  44:	89 d6                	mov    %edx,%esi
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x4e>
  4e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  55:	eb 19                	jmp    70 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x70>
  57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  5e:	89 d6                	mov    %edx,%esi
  60:	48 89 c7             	mov    %rax,%rdi
  63:	e8 00 00 00 00       	call   68 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x68>
  68:	84 c0                	test   %al,%al
  6a:	75 21                	jne    8d <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x8d>
  6c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  70:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  74:	76 e1                	jbe    57 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x57>
  76:	e8 00 00 00 00       	call   7b <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x7b>
  7b:	48 89 c2             	mov    %rax,%rdx
  7e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  81:	89 c6                	mov    %eax,%esi
  83:	48 89 d7             	mov    %rdx,%rdi
  86:	e8 00 00 00 00       	call   8b <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x8b>
  8b:	eb 01                	jmp    8e <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0x8e>
  8d:	90                   	nop
  8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  92:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  99:	00 00 
  9b:	74 05                	je     a2 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0xa2>
  9d:	e8 00 00 00 00       	call   a2 <ArtNetNode::SetLedBlinkMode4(hardware::ledblink::Mode)+0xa2>
  a2:	c9                   	leave  
  a3:	c3                   	ret    

Disassembly of section .text._ZN10ArtNetNode14GetGoodOutput4Ej:

0000000000000000 <ArtNetNode::GetGoodOutput4(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	48 8d 55 f6          	lea    -0xa(%rbp),%rdx
  2a:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  2d:	b9 01 00 00 00       	mov    $0x1,%ecx
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	call   3a <ArtNetNode::GetGoodOutput4(unsigned int)+0x3a>
  3a:	88 45 f4             	mov    %al,-0xc(%rbp)
  3d:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  41:	74 52                	je     95 <ArtNetNode::GetGoodOutput4(unsigned int)+0x95>
  43:	c6 45 f5 01          	movb   $0x1,-0xb(%rbp)
  47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4e:	89 d6                	mov    %edx,%esi
  50:	48 89 c7             	mov    %rax,%rdi
  53:	e8 00 00 00 00       	call   58 <ArtNetNode::GetGoodOutput4(unsigned int)+0x58>
  58:	84 c0                	test   %al,%al
  5a:	74 07                	je     63 <ArtNetNode::GetGoodOutput4(unsigned int)+0x63>
  5c:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
  61:	eb 05                	jmp    68 <ArtNetNode::GetGoodOutput4(unsigned int)+0x68>
  63:	b8 00 00 00 00       	mov    $0x0,%eax
  68:	08 45 f5             	or     %al,-0xb(%rbp)
  6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  72:	89 d6                	mov    %edx,%esi
  74:	48 89 c7             	mov    %rax,%rdi
  77:	e8 00 00 00 00       	call   7c <ArtNetNode::GetGoodOutput4(unsigned int)+0x7c>
  7c:	84 c0                	test   %al,%al
  7e:	74 07                	je     87 <ArtNetNode::GetGoodOutput4(unsigned int)+0x87>
  80:	b8 08 00 00 00       	mov    $0x8,%eax
  85:	eb 05                	jmp    8c <ArtNetNode::GetGoodOutput4(unsigned int)+0x8c>
  87:	b8 00 00 00 00       	mov    $0x0,%eax
  8c:	08 45 f5             	or     %al,-0xb(%rbp)
  8f:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
  93:	eb 05                	jmp    9a <ArtNetNode::GetGoodOutput4(unsigned int)+0x9a>
  95:	b8 00 00 00 00       	mov    $0x0,%eax
  9a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  9e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  a5:	00 00 
  a7:	74 05                	je     ae <ArtNetNode::GetGoodOutput4(unsigned int)+0xae>
  a9:	e8 00 00 00 00       	call   ae <ArtNetNode::GetGoodOutput4(unsigned int)+0xae>
  ae:	c9                   	leave  
  af:	c3                   	ret    
